<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Big Ben • Posts by &#34;c++11&#34; tag</title>
        <link>https://blog.zhougy.top</link>
        <description></description>
        <language>en</language>
        <pubDate>Wed, 24 Mar 2021 19:53:18 +0800</pubDate>
        <lastBuildDate>Wed, 24 Mar 2021 19:53:18 +0800</lastBuildDate>
        <category>javascript</category>
        <category>angular</category>
        <category>arm</category>
        <category>单片机</category>
        <category>操作系统</category>
        <category>machine learning</category>
        <category>deep learning</category>
        <category>Linux</category>
        <category>内存管理</category>
        <category>Markdown</category>
        <category>python</category>
        <category>win32com</category>
        <category>nas</category>
        <category>synology</category>
        <category>USB</category>
        <category>Linux Device Drivers</category>
        <category>uboot</category>
        <category>http</category>
        <category>同步</category>
        <category>读书笔记</category>
        <category>程序员修炼之道</category>
        <category>算法</category>
        <category>c/c++</category>
        <category>hexo</category>
        <category>capability</category>
        <category>LD_PRELOAD</category>
        <category>C++</category>
        <category>coding</category>
        <category>UT</category>
        <category>TDD</category>
        <category>印象笔记</category>
        <category>Obsidian</category>
        <category>SELinux</category>
        <category>Android</category>
        <category>xposed</category>
        <category>GitHub</category>
        <category>中断处理</category>
        <category>群晖</category>
        <category>docker</category>
        <category>ttrss</category>
        <category>rsshub</category>
        <category>wallabag</category>
        <category>unittest</category>
        <category>mockito</category>
        <category>powermock</category>
        <category>QT</category>
        <category>nlp</category>
        <category>vim</category>
        <category>SpaceVim</category>
        <category>tmux</category>
        <category>面向对象</category>
        <category>promise</category>
        <category>mongodb</category>
        <category>Programming</category>
        <category>security</category>
        <category>C++11</category>
        <category>IoT</category>
        <category>broadlink</category>
        <category>domoticz</category>
        <category>UML</category>
        <category>socket</category>
        <category>iptables</category>
        <category>neural network</category>
        <category>mock</category>
        <category>深度学习</category>
        <category>schedule algorithm</category>
        <category>glibc</category>
        <category>gtest</category>
        <category>gmock</category>
        <category>golang</category>
        <category>elf</category>
        <category>软件开发</category>
        <category>设计模式</category>
        <category>Calibre</category>
        <category>电子书</category>
        <category>Rap</category>
        <category>Eminem</category>
        <category>红楼梦</category>
        <category>教育</category>
        <item>
            <guid isPermalink="true">https://blog.zhougy.top/2021/03/24/%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B&amp;POD/</guid>
            <title>聚合类型&amp;POD</title>
            <link>https://blog.zhougy.top/2021/03/24/%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B&amp;POD/</link>
            <category>C++</category>
            <category>C++11</category>
            <pubDate>Wed, 24 Mar 2021 19:53:18 +0800</pubDate>
            <description><![CDATA[ &lt;div style=&#34;font-size: 14px; margin: 0; padding: 0; width: 100%;&#34;&gt;&lt;h1 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 41px; border-bottom: 3px double #999; color: #000; margin-top: 14px;&#34;&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&lt;/h1&gt;
&lt;blockquote style=&#34;line-height: 160%; box-sizing: content-box; margin: 15px 0; border-left: 4px solid #ddd; padding: 0 15px; color: #777;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333; margin-top: 0; margin-bottom: 0;&#34;&gt;&lt;strong style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700;&#34;&gt;C++03&amp;#x5B9A;&amp;#x4E49;&lt;/strong&gt;&lt;br&gt;
An aggregate is an array or a class (clause 9) with no user-declared constructors (12.1), no private or protected non-static data members (clause 11), no base classes (clause 10), and no virtual functions (10.3).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote style=&#34;line-height: 160%; box-sizing: content-box; margin: 15px 0; border-left: 4px solid #ddd; padding: 0 15px; color: #777;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333; margin-top: 0; margin-bottom: 0;&#34;&gt;&lt;strong style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700;&#34;&gt;C++11&amp;#x5B9A;&amp;#x4E49;&lt;/strong&gt;&lt;br&gt;
An aggregate is an array or a class (Clause 9) with no user-provided constructors (12.1), no brace-or-equal-initializers for non-static data members (9.2), no private or protected non-static data members (Clause 11), no base classes (Clause 10), and no virtual functions (10.3).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x7ED3;&amp;#x5408;C++03&amp;#x548C;C++11&amp;#x6807;&amp;#x51C6;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x7F57;&amp;#x5217;&amp;#x4E00;&amp;#x4E0B;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x7279;&amp;#x6027;&amp;#xFF1A;&lt;/p&gt;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#x53EF;&amp;#x4EE5;&amp;#x6709;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4F46;&amp;#x53EA;&amp;#x80FD;&amp;#x662F;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x9ED8;&amp;#x8BA4;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x7528;&lt;code style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; color: #c1788b; padding: 4px 4px 2px 0; letter-spacing: -.3px;&#34;&gt;=default&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#x4E0D;&amp;#x80FD;&amp;#x6709;private&amp;#xFF0C;protected&amp;#x975E;static&amp;#x53D8;&amp;#x91CF;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#x53EF;&amp;#x4EE5;&amp;#x6709;copy-assignment operator and/or destructor&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x6570;&amp;#x7EC4;&amp;#x662F;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5373;&amp;#x4FBF;&amp;#x6570;&amp;#x7EC4;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x975E;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6570;&amp;#x7EC4;&amp;#x53EF;&amp;#x4EE5;&amp;#x662F;&amp;#x975E;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#x4E0D;&amp;#x80FD;&amp;#x7528;brace-or-equal-initializers&amp;#xFF08;&amp;#x5373;&amp;#x5C31;&amp;#x5730;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#xFF09;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x975E;static&amp;#x6210;&amp;#x5458;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 34px; border-bottom: 1px solid #dbdbdb; color: #333;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#x53D8;&amp;#x91CF;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&lt;/h2&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#x53EF;&amp;#x4EE5;&amp;#x91C7;&amp;#x7528;&amp;#x5217;&amp;#x8868;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#xFF08;&amp;#x5176;&amp;#x5B9E;&amp;#x975E;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x91C7;&amp;#x7528;&amp;#x5217;&amp;#x8868;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#xFF09;&lt;/p&gt;
&lt;pre style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;&#34;&gt;&lt;code style=&#34;display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;if&lt;/span&gt;(m == n)
&amp;#123;
    &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;// the ith element of the array is initialized with ai&lt;/span&gt;
&amp;#125;
&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;if&lt;/span&gt;(m &amp;lt; n) &amp;#123;
    &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;// the first m elements of the array are initialized with a1,  a2, &amp;#x2026;, am and the other n - m elements are, if possible, value-initialized (see below for the explanation of the term)&lt;/span&gt;
&amp;#125;
&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;if&lt;/span&gt;(m &amp;gt; n) &amp;#123;
    &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;// the compiler will issue an error&lt;/span&gt;
&amp;#125;
&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;/*(this is the case when n isn&amp;apos;t specified at all like int a[] = &amp;#123;1, 2, 3&amp;#125;;) */&lt;/span&gt;
&amp;#123;
    &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;// the size of the array (n) is assumed to be equal to m, so int a[] = &amp;#123;1, 2, 3&amp;#125;; is equivalent to int a[3] = &amp;#123;1, 2, 3&amp;#125;;&lt;/span&gt;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x53D8;&amp;#x91CF;&amp;#x6700;&amp;#x5927;&amp;#x7684;&amp;#x7279;&amp;#x70B9;&amp;#x53EF;&amp;#x4EE5;&amp;#x505A;&lt;strong style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&lt;/strong&gt;&amp;#xFF0C;&amp;#x9664;&amp;#x4E86;&amp;#x57FA;&amp;#x672C;&amp;#x7684;&amp;#x5217;&amp;#x8868;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x89C4;&amp;#x5219;&amp;#xFF0C;&amp;#x805A;&amp;#x5408;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x8FD8;&amp;#x4F53;&amp;#x73B0;&amp;#x5728;&amp;#x53EF;&amp;#x4EE5;&amp;#x9012;&amp;#x5F52;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x3002;&lt;/p&gt;
&lt;pre style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;&#34;&gt;&lt;code style=&#34;display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;&#34;&gt;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;X&lt;/span&gt;
&amp;#123;&lt;/span&gt;
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt; i1;
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt; i2;
&amp;#125;;
&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;Y&lt;/span&gt;
&amp;#123;&lt;/span&gt;
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;char&lt;/span&gt; c;
  X x;
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt; i[&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;2&lt;/span&gt;];
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;float&lt;/span&gt; f; 
&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;protected&lt;/span&gt;:
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;double&lt;/span&gt; d;
&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;private&lt;/span&gt;:
  &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;g&lt;/span&gt;&lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;      
&amp;#125;; 
&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;Z&lt;/span&gt; &amp;#123;&lt;/span&gt;
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;char&lt;/span&gt; a;
  X x;
  Z(&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;char&lt;/span&gt; a1) &amp;#123;&amp;#125;;
&amp;#125;;

Y y = &amp;#123;&lt;span style=&#34;color: #d69d85; line-height: 160%; box-sizing: content-box;&#34;&gt;&amp;apos;a&amp;apos;&lt;/span&gt;, &amp;#123;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;20&lt;/span&gt;&amp;#125;, &amp;#123;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;30&lt;/span&gt;&amp;#125;&amp;#125;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&lt;code style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; color: #c1788b; padding: 4px 4px 2px 0; letter-spacing: -.3px;&#34;&gt;y.x&lt;/code&gt;&amp;#x4E5F;&amp;#x88AB;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x4E86;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;Z&amp;#x7528;&amp;#x9012;&amp;#x5F52;&amp;#x805A;&amp;#x5408;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#xFF0C;&amp;#x4F8B;&amp;#x5982;&lt;code style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; color: #c1788b; padding: 4px 4px 2px 0; letter-spacing: -.3px;&#34;&gt;Z z = &amp;#123;&amp;apos;a&amp;apos;, &amp;#123;&amp;apos;b&amp;apos;&amp;#125;&amp;#125;&lt;/code&gt;&amp;#xFF0C;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x5C31;&amp;#x4F1A;&amp;#x62A5;&amp;#x9519;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;Z&amp;#x4E0D;&amp;#x662F;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x4F1A;&amp;#x53BB;&amp;#x627E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x663E;&amp;#x7136;Z&amp;#x6CA1;&amp;#x5B9A;&amp;#x4E49;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;br&gt;
&amp;#x5177;&amp;#x4F53;&amp;#x4ECB;&amp;#x7ECD;&amp;#x53EF;&amp;#x4EE5;&amp;#x53C2;&amp;#x8003;&lt;a href=&#34;https://en.cppreference.com/w/cpp/language/aggregate_initialization&#34; style=&#34;line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;&#34;&gt;Aggregate initialization&lt;/a&gt;&amp;#x3002;&lt;/p&gt;
&lt;h1 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 41px; border-bottom: 3px double #999; color: #000;&#34;&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;POD&amp;#x53D8;&amp;#x91CF;&lt;/h1&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;POD = Plain Old Data&amp;#xFF0C;&amp;#x53EF;&amp;#x89C1;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x517C;&amp;#x5BB9;&amp;#x578B;&amp;#x6BD4;&amp;#x8F83;&amp;#x597D;&amp;#x7684;&amp;#x5F62;&amp;#x6001;&amp;#x3002;&amp;#x751A;&amp;#x81F3;&amp;#x53EF;&amp;#x4EE5;&amp;#x5BFC;&amp;#x51FA;&amp;#x4E0E;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x5171;&amp;#x4EAB;&amp;#x6B64;&amp;#x7C7B;&amp;#x53D8;&amp;#x91CF;&amp;#x5B9A;&amp;#x4E49;&amp;#x3002;&lt;/p&gt;
&lt;blockquote style=&#34;line-height: 160%; box-sizing: content-box; margin: 15px 0; border-left: 4px solid #ddd; padding: 0 15px; color: #777;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333; margin-top: 0; margin-bottom: 0;&#34;&gt;&lt;strong style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700;&#34;&gt;C++03&amp;#x5B9A;&amp;#x4E49;&lt;/strong&gt;&lt;br&gt;
A POD-struct is an aggregate class that has no non-static data members of type non-POD-struct, non-POD-union (or array of such types) or reference, and has no user-defined copy assignment operator and no user-defined destructor. Similarly, a POD-union is an aggregate union that has no non-static data members of type non-POD-struct, non-POD-union (or array of such types) or reference, and has no user-defined copy assignment operator and no user-defined destructor. A POD class is a class that is either a POD-struct or a POD-union.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote style=&#34;line-height: 160%; box-sizing: content-box; margin: 15px 0; border-left: 4px solid #ddd; padding: 0 15px; color: #777;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333; margin-top: 0; margin-bottom: 0;&#34;&gt;C++11&amp;#x5B9A;&amp;#x4E49;&amp;#x53D8;&amp;#x5F97;&amp;#x975E;&amp;#x5E38;&amp;#x4F18;&amp;#x96C5;&lt;br&gt;
&lt;strong style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700;&#34;&gt;A POD struct is a non-union class that is both a trivial class and a standard-layout class&lt;/strong&gt;, and has no non-static data members of type non-POD struct, non-POD union (or array of such types). Similarly, a POD union is a union that is both a trivial class and a standard layout class, and has no non-static data members of type non-POD struct, non-POD union (or array of such types). A POD class is a class that is either a POD struct or a POD union.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x603B;&amp;#x800C;&amp;#x8A00;&amp;#x4E4B;&amp;#xFF1A;&lt;br&gt;
POD&amp;#x7C7B;&amp;#x578B;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x7279;&amp;#x6B8A;&amp;#x7684;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;POD&amp;#x7C7B;&amp;#x578B;&amp;#x4E3A;&amp;#xFF1A;&lt;/p&gt;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x6807;&amp;#x91CF;&amp;#x7C7B;&amp;#x578B;&amp;#x3002;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x6EE1;&amp;#x8DB3;&amp;#x4EE5;&amp;#x4E0B;&amp;#x6761;&amp;#x4EF6;&amp;#x7684;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7C7B;&amp;#x578B;&amp;#xFF1A;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333; margin-top: 0; margin-bottom: 0;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;C++11&amp;#x4E4B;&amp;#x524D;&amp;#xFF1A;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333; margin-top: 0; margin-bottom: 0;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#x3002;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x6CA1;&amp;#x6709;&amp;#x975E;POD&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x975E;&amp;#x9759;&amp;#x6001;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x6CA1;&amp;#x6709;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x975E;&amp;#x9759;&amp;#x6001;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x6CA1;&amp;#x6709;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x6790;&amp;#x6784;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;C++11&amp;#x4E4B;&amp;#x540E;&amp;#xFF1A;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333; margin-top: 0; margin-bottom: 0;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x662F;&amp;#x5E73;&amp;#x51E1;&amp;#x7C7B;&amp;#x3002;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x662F;&amp;#x6807;&amp;#x51C6;&amp;#x5E03;&amp;#x5C40;&amp;#x7C7B;&amp;#x3002;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x6CA1;&amp;#x6709;&amp;#x975E;POD&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x975E;&amp;#x9759;&amp;#x6001;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;POD&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6570;&amp;#x7EC4;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 41px; border-bottom: 3px double #999; color: #000;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x578B;&amp;#x6216;&amp;#x662F;POD&amp;#x53D8;&amp;#x91CF;&amp;#x6709;&amp;#x4EC0;&amp;#x4E48;&amp;#x597D;&amp;#x5904;&amp;#xFF1F;&lt;/h1&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x805A;&amp;#x5408;&amp;#x7C7B;&amp;#x6700;&amp;#x5927;&amp;#x7684;&amp;#x7279;&amp;#x70B9;&amp;#x5C31;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x91C7;&amp;#x7528;&amp;#x805A;&amp;#x5408;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x3002;&lt;br&gt;
POD&amp;#x7684;&amp;#x7279;&amp;#x70B9;&amp;#x66F4;&amp;#x4E3A;&amp;#x5B9E;&amp;#x7528;&amp;#x4E00;&amp;#x4E9B;&lt;/p&gt;
&lt;blockquote style=&#34;line-height: 160%; box-sizing: content-box; margin: 15px 0; border-left: 4px solid #ddd; padding: 0 15px; color: #777;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333; margin-top: 0;&#34;&gt;&lt;strong style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700;&#34;&gt;POD&amp;#x7684;&amp;#x7528;&amp;#x9014;&lt;/strong&gt;&lt;br&gt;
&amp;#x5E73;&amp;#x51E1;&amp;#x7C7B;&amp;#x7684;&amp;#x7528;&amp;#x9014;&amp;#xFF1A;&lt;/p&gt;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x5E73;&amp;#x51E1;&amp;#x7C7B;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E0E;&amp;#x5B57;&amp;#x8282;&amp;#x6D41;&amp;#x4E4B;&amp;#x95F4;&amp;#x5B89;&amp;#x5168;&amp;#x8F6C;&amp;#x6362;&amp;#xFF0C;&amp;#x5373;&amp;#xFF1A;&lt;br&gt;
- &amp;#x82E5;&amp;#x8981;&amp;#x5C06;&amp;#x5BF9;&amp;#x8C61;&amp;#x8F6C;&amp;#x4E3A;&amp;#x5B57;&amp;#x8282;&amp;#x6D41;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x53D6;&amp;#x5176;&amp;#x5730;&amp;#x5740;&amp;#x5373;&amp;#x53EF;&amp;#x3002;&lt;br&gt;
- &amp;#x82E5;&amp;#x8981;&amp;#x5C06;&amp;#x5B57;&amp;#x8282;&amp;#x6D41;&amp;#x8F6C;&amp;#x4E3A;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x5C06;&amp;#x8BE5;&amp;#x5730;&amp;#x5740;cast&amp;#x4E3A;&amp;#x5BF9;&amp;#x8C61;&amp;#x6307;&amp;#x9488;&amp;#x5373;&amp;#x53EF;&amp;#x3002;&lt;br&gt;
- &amp;#x76F4;&amp;#x63A5;&amp;#x901A;&amp;#x8FC7;&amp;#x590D;&amp;#x5236;&amp;#x5B57;&amp;#x8282;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x590D;&amp;#x5236;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x9759;&amp;#x6001;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x3002;&lt;br&gt;
- C++11&amp;#x7684;thread_local&amp;#x53D8;&amp;#x91CF;&amp;#x53EF;&amp;#x4EE5;&amp;#x662F;&amp;#x975E;&amp;#x5E73;&amp;#x51E1;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x4F46;&amp;#x5728;&amp;#x67D0;&amp;#x4E9B;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x4E0B;&amp;#x4F1A;&amp;#x6709;&amp;#x6BD4;&amp;#x8F83;&amp;#x5927;&amp;#x7684;&amp;#x6027;&amp;#x80FD;&amp;#x5F00;&amp;#x9500;&amp;#x3002;gcc&amp;#x6269;&amp;#x5C55;&amp;#x7684;__thread&amp;#x53EA;&amp;#x80FD;&amp;#x4F7F;&amp;#x7528;POD&amp;#x7C7B;&amp;#x578B;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333; margin-bottom: 0;&#34;&gt;&lt;strong style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700;&#34;&gt;&amp;#x6807;&amp;#x51C6;&amp;#x5E03;&amp;#x5C40;&amp;#x7C7B;&amp;#x7684;&amp;#x7528;&amp;#x9014;&amp;#xFF1A;&lt;/strong&gt;&lt;br&gt;
&amp;#x8DE8;&amp;#x8FDB;&amp;#x7A0B;&amp;#x3001;&amp;#x8DE8;&amp;#x8BED;&amp;#x8A00;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 41px; border-bottom: 3px double #999; color: #000;&#34;&gt;&amp;#x540D;&amp;#x6B21;&amp;#x89E3;&amp;#x91CA;&lt;/h1&gt;
&lt;h2 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 34px; border-bottom: 1px solid #dbdbdb; color: #333;&#34;&gt;value initialization&lt;/h2&gt;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x5BF9;&amp;#x4E8E;&amp;#x666E;&amp;#x901A;&amp;#x7C7B;&amp;#x578B;&amp;#x53D8;&amp;#x91CF;(bool, int, char, double, pointers, etc.)&lt;br&gt;
it means it is initialized with 0 for that type (false for bool, 0.0 for double, etc.).&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x5BF9;&amp;#x4E8E;class&amp;#x7C7B;&amp;#x578B;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333; margin-top: 0; margin-bottom: 0;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5219;&amp;#x8C03;&amp;#x7528;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E00;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5219;&amp;#x8C03;&amp;#x7528;&amp;#x9ED8;&amp;#x8BA4;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5219;&amp;#x62A5;&amp;#x9519;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x4E3E;&amp;#x4F8B;&lt;/p&gt;
&lt;pre style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;&#34;&gt;&lt;code style=&#34;display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;&#34;&gt;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;A&lt;/span&gt;
&amp;#123;&lt;/span&gt;
&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;public&lt;/span&gt;:
  A(&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt;) &amp;#123;&amp;#125; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//no default constructor&lt;/span&gt;
&amp;#125;;
&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;B&lt;/span&gt;
&amp;#123;&lt;/span&gt;
&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;public&lt;/span&gt;:
  B() &amp;#123;&amp;#125; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//default constructor available&lt;/span&gt;
&amp;#125;;
&lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&amp;#123;
  A a1[&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;3&lt;/span&gt;] = &amp;#123;A(&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;2&lt;/span&gt;), A(&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;1&lt;/span&gt;), A(&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;14&lt;/span&gt;)&amp;#125;; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//OK n == m&lt;/span&gt;
  A a2[&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;3&lt;/span&gt;] = &amp;#123;A(&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;2&lt;/span&gt;)&amp;#125;; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//ERROR A has no default constructor. Unable to value-initialize a2[1] and a2[2]&lt;/span&gt;
  B b1[&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;3&lt;/span&gt;] = &amp;#123;B()&amp;#125;; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//OK b1[1] and b1[2] are value initialized, in this case with the default-ctor&lt;/span&gt;
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt; Array1[&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;1000&lt;/span&gt;] = &amp;#123;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;0&lt;/span&gt;&amp;#125;; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//All elements are initialized with 0;&lt;/span&gt;
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt; Array2[&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;1000&lt;/span&gt;] = &amp;#123;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;1&lt;/span&gt;&amp;#125;; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//Attention: only the first element is 1, the rest are 0;&lt;/span&gt;
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;bool&lt;/span&gt; Array3[&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;1000&lt;/span&gt;] = &amp;#123;&amp;#125;; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//the braces can be empty too. All elements initialized with false&lt;/span&gt;
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt; Array4[&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;1000&lt;/span&gt;]; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//no initializer. This is different from an empty &amp;#123;&amp;#125; initializer in that&lt;/span&gt;
  &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//the elements in this case are not value-initialized, but have indeterminate values &lt;/span&gt;
  &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//(unless, of course, Array4 is a global array)&lt;/span&gt;
  &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #4ec9b0; line-height: 160%; box-sizing: content-box;&#34;&gt;array&lt;/span&gt;[&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;2&lt;/span&gt;] = &amp;#123;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;4&lt;/span&gt;&amp;#125;; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;//ERROR, too many initializers&lt;/span&gt;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x5927;&amp;#x62EC;&amp;#x53F7;&amp;#x4E2D;&amp;#x4E2A;&amp;#x6570;&amp;#x4E0D;&amp;#x8DB3;&amp;#x7684;&amp;#xFF0C;&amp;#x7528;value initialization&amp;#x8865;&amp;#x8DB3;&amp;#x3002;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&lt;code style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; color: #c1788b; padding: 4px 4px 2px 0; letter-spacing: -.3px;&#34;&gt;A a = &amp;#123;1&amp;#125;;&lt;/code&gt;&amp;#x6216;&amp;#x8005;&lt;code style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; color: #c1788b; padding: 4px 4px 2px 0; letter-spacing: -.3px;&#34;&gt;A a = &amp;#123;&amp;#125;&lt;/code&gt;&amp;#x7684;&amp;#x542B;&amp;#x4E49;&amp;#x3002;&amp;#x5927;&amp;#x62EC;&amp;#x53F7;&amp;#x4E2D;&amp;#x4E2A;&amp;#x6570;&amp;#x8D85;&amp;#x8FC7;&amp;#x58F0;&amp;#x660E;&amp;#x7684;&amp;#x4E2A;&amp;#x6570;&amp;#x7684;&amp;#xFF0C;&amp;#x5219;&amp;#x7F16;&amp;#x8BD1;&amp;#x62A5;&amp;#x9519;&amp;#x3002;&lt;/p&gt;
&lt;h2 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 34px; border-bottom: 1px solid #dbdbdb; color: #333;&#34;&gt;brace-or-equal-initializers&lt;/h2&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x7C7B;&amp;#x6210;&amp;#x5458;&amp;#x7684;&amp;#x4E00;&amp;#x79CD;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x65B9;&amp;#x6CD5;&lt;/p&gt;
&lt;pre style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;&#34;&gt;&lt;code style=&#34;display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;&#34;&gt;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;B&lt;/span&gt; &amp;#123;&lt;/span&gt;
&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;public&lt;/span&gt;:
    B(&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt;)&amp;#123;&amp;#125;
&amp;#125;;

&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;A&lt;/span&gt; &amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt; a = &lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;123&lt;/span&gt;;
    &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt; b &amp;#123;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;456&lt;/span&gt;&amp;#125;;
    B c &amp;#123;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;12&lt;/span&gt;&amp;#125;;
    B d = &amp;#123;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;34&lt;/span&gt;&amp;#125;;
&amp;#125;;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 34px; border-bottom: 1px solid #dbdbdb; color: #333;&#34;&gt;copy-assignment operator&lt;/h2&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x62F7;&amp;#x8D1D;&amp;#x8D4B;&amp;#x503C;&amp;#x65B9;&amp;#x6CD5;&lt;/p&gt;
&lt;pre style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; margin: 2px 0 8px; background-color: #f5f7f8;&#34;&gt;&lt;code style=&#34;display: block; overflow-x: auto; background: #1e1e1e; line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; letter-spacing: -.3px; padding: 18px; color: #f4f4f4; white-space: pre-wrap;&#34;&gt;&lt;span style=&#34;color: #b8d7a3; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;A&lt;/span&gt; &amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;A &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;A&lt;/span&gt;&lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;(&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;int&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;
    A(&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;const&lt;/span&gt; &amp;amp;) &amp;#123;&amp;#125;
    A&amp;amp; &lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;operator&lt;/span&gt;= (&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;const&lt;/span&gt; A&amp;amp;a) &amp;#123;&amp;#125;
&amp;#125;;
&lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;span style=&#34;color: #569cd6; line-height: 160%; box-sizing: content-box;&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color: #dcdcdc; line-height: 160%; box-sizing: content-box;&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;
    A a;
    A b = a; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;// &amp;#x8FD9;&amp;#x91CC;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x62F7;&amp;#x8D1D;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&lt;/span&gt;
    A c;
    c = a; &lt;span style=&#34;color: #57a64a; font-style: italic; line-height: 160%; box-sizing: content-box;&#34;&gt;// &amp;#x8FD9;&amp;#x91CC;&amp;#x624D;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x62F7;&amp;#x8D1D;&amp;#x590D;&amp;#x5236;&amp;#x51FD;&amp;#x6570;&lt;/span&gt;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 34px; border-bottom: 1px solid #dbdbdb; color: #333;&#34;&gt;trial stuff&lt;/h2&gt;
&lt;h3 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 27px; color: #333;&#34;&gt;trivial copyable&lt;/h3&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x53C2;&amp;#x8003;&lt;a href=&#34;https://en.cppreference.com/w/cpp/named_req/TriviallyCopyable&#34; style=&#34;line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;&#34;&gt;C++ named requirements: TriviallyCopyable&lt;/a&gt;&lt;/p&gt;
&lt;blockquote style=&#34;line-height: 160%; box-sizing: content-box; margin: 15px 0; border-left: 4px solid #ddd; padding: 0 15px; color: #777;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333; margin-top: 0;&#34;&gt;The following types are collectively called trivially copyable types:&lt;/p&gt;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;Scalar types&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;Trivially copyable classes, i.e. classes satisfying following requirements:&lt;br&gt;
- At least one copy constructor, move constructor, copy assignment operator, or move assignment operator is eligible&lt;br&gt;
- Every eligible copy constructor (if any) is trivial&lt;br&gt;
- Every eligible move constructor (if any) is trivial&lt;br&gt;
- Every eligible copy assignment operator (if any) is trivial&lt;br&gt;
- Every eligible move assignment operator (if any) is trivial&lt;br&gt;
- Has a trivial non-deleted destructor&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;Arrays of TriviallyCopyable objects&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333; margin-bottom: 0;&#34;&gt;This implies that a trivially copyable class has no virtual functions or virtual base classes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x901A;&amp;#x8FC7;&amp;#x6A21;&amp;#x7248;&lt;a href=&#34;https://en.cppreference.com/w/cpp/types/is_trivially_copyable&#34; style=&#34;line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;&#34;&gt;std::is_trivially_copyable&lt;/a&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x68C0;&amp;#x9A8C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7C7B;&amp;#x662F;&amp;#x5426;trivially copyable&amp;#x3002;&lt;/p&gt;
&lt;h3 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 27px; color: #333;&#34;&gt;trivial constructor/destructor&lt;/h3&gt;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x6784;&amp;#x9020;/&amp;#x6790;&amp;#x6784;&amp;#x51FD;&amp;#x6570;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;&amp;#x7528;&lt;code style=&#34;line-height: 160%; box-sizing: content-box; border: 0; border-radius: 0; color: #c1788b; padding: 4px 4px 2px 0; letter-spacing: -.3px;&#34;&gt;=default&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x6790;&amp;#x6784;&amp;#x51FD;&amp;#x6570;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 27px; color: #333;&#34;&gt;trivial class&lt;/h3&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;The standard defines a trivial class as follows:&lt;/p&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;A trivially copyable class is a class that:&lt;/p&gt;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;has no non-trivial copy constructors (12.8),&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;has no non-trivial move constructors (12.8),&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;has no non-trivial copy assignment operators (13.5.3, 12.8),&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;has no non-trivial move assignment operators (13.5.3, 12.8), and&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;has a trivial destructor (12.4).&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;A trivial class is a class that has a trivial default constructor (12.1) and is trivially copyable.&lt;/p&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;[ Note: In particular, a trivially copyable or trivial class does not have virtual functions or virtual base classes. ]&lt;br&gt;
&amp;#x53E6;&amp;#x5916;trivial class&amp;#x662F;&amp;#x9012;&amp;#x5F52;&amp;#x7684;&amp;#xFF0C;&amp;#x5373;trivial class&amp;#x4E0D;&amp;#x80FD;&amp;#x6709;&amp;#x975E;trivial class&amp;#x7684;&amp;#x975E;static&amp;#x6210;&amp;#x5458;&amp;#x3002;&lt;br&gt;
&amp;#x7528;&amp;#x6A21;&amp;#x7248;&lt;a href=&#34;https://en.cppreference.com/w/cpp/types/is_trivial&#34; style=&#34;line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;&#34;&gt;std::is_trivial&lt;/a&gt;&amp;#x6765;&amp;#x6D4B;&amp;#x8BD5;&lt;/p&gt;
&lt;h2 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 34px; border-bottom: 1px solid #dbdbdb; color: #333;&#34;&gt;standard layout&lt;/h2&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;A standard-layout class is a class that:&lt;/p&gt;
&lt;ul style=&#34;line-height: 160%; box-sizing: content-box; display: block; list-style-type: disc; padding-left: 30px; margin: 6px 0 10px; color: #333;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; color: #333; margin: 0;&#34;&gt;has no non-static data members of type non-standard-layout class (or array of such types) or reference,&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; color: #333; margin: 0;&#34;&gt;has no virtual functions (10.3) and no virtual base classes (10.1),&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; color: #333; margin: 0;&#34;&gt;has the same access control (Clause 11) for all non-static data members,&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; color: #333; margin: 0;&#34;&gt;has no non-standard-layout base classes,&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; color: #333; margin: 0;&#34;&gt;either has no non-static data members in the most derived class and at most one base class with non-static data members, or has no base classes with non-static data members, (&amp;#x8981;&amp;#x4E48;&amp;#x7EC8;&amp;#x70B9;&amp;#x7C7B;&amp;#x6CA1;&amp;#x6709;&amp;#x975E;&amp;#x9759;&amp;#x6001;&amp;#x6210;&amp;#x5458;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x57FA;&amp;#x7C7B;&amp;#x6709;&amp;#x975E;&amp;#x9759;&amp;#x6001;&amp;#x6210;&amp;#x5458;&amp;#xFF1B;&amp;#x8981;&amp;#x4E48;&amp;#x6CA1;&amp;#x6709;&amp;#x57FA;&amp;#x7C7B;&amp;#x6709;&amp;#x975E;&amp;#x9759;&amp;#x6001;&amp;#x6210;&amp;#x5458;)&amp;#xFF0C;and&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box; position: relative;&#34;&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; color: #333; margin: 0;&#34;&gt;has no base classes of the same type as the first non-static data member.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;A standard-layout struct is a standard-layout class defined with the class-key struct or the class-key class.&lt;/p&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;A standard-layout union is a standard-layout class defined with the class-key union.&lt;/p&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;[ Note: Standard-layout classes are useful for communicating with code written in other programming languages. Their layout is specified in 9.2.]&lt;/p&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x6807;&amp;#x51C6;&amp;#x5185;&amp;#x5B58;&amp;#x5206;&amp;#x5E03;&amp;#xFF0C;&amp;#x786E;&amp;#x4FDD;&amp;#x5BF9;&amp;#x8C61;&amp;#x5185;&amp;#x5B58;&amp;#x548C;C&amp;#x8BED;&amp;#x8A00;&amp;#x7684;&amp;#x7ED3;&amp;#x6784;&amp;#x4F53;&amp;#x5185;&amp;#x5B58;&amp;#x5206;&amp;#x5E03;&amp;#x5B8C;&amp;#x5168;&amp;#x4E00;&amp;#x81F4;&amp;#x3002;&amp;#x4F7F;&amp;#x5F97;POD&amp;#x53D8;&amp;#x91CF;&amp;#x5177;&amp;#x5907;&amp;#x4E86;C&amp;#x517C;&amp;#x5BB9;&amp;#x6027;&amp;#x3002;&lt;br&gt;
&amp;#x7528;&amp;#x6A21;&amp;#x7248;&lt;a href=&#34;https://en.cppreference.com/w/cpp/types/is_standard_layout&#34; style=&#34;line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;&#34;&gt;std::is_standard_layout&lt;/a&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x6D4B;&amp;#x8BD5;&lt;/p&gt;
&lt;h1 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 41px; border-bottom: 3px double #999; color: #000;&#34;&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h1&gt;
&lt;p style=&#34;line-height: 160%; box-sizing: content-box; margin: 10px 0; color: #333;&#34;&gt;&amp;#x7528;&lt;a href=&#34;https://en.cppreference.com/w/cpp/types/is_pod&#34; style=&#34;line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;&#34;&gt;std::is_pod&lt;/a&gt;&amp;#x6765;&amp;#x6D4B;&amp;#x8BD5;&amp;#x4F60;&amp;#x7684;&amp;#x7C7B;&amp;#x5427;&amp;#x3002;&lt;/p&gt;
&lt;h1 style=&#34;line-height: 160%; box-sizing: content-box; font-weight: 700; font-size: 41px; border-bottom: 3px double #999; color: #000;&#34;&gt;&amp;#x53C2;&amp;#x8003;&amp;#x6587;&amp;#x732E;&lt;/h1&gt;
&lt;ol style=&#34;line-height: 160%; box-sizing: content-box; display: block; padding-left: 30px; margin: 6px 0 10px; color: #333; list-style-type: decimal;&#34;&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/4178175/what-are-aggregates-and-pods-and-how-why-are-they-special&#34; style=&#34;line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;&#34;&gt;What are Aggregates and PODs and how/why are they special?&lt;/a&gt;&lt;/li&gt;
&lt;li style=&#34;line-height: 160%; box-sizing: content-box;&#34;&gt;&lt;a href=&#34;https://fuzhe1989.github.io/2018/03/15/cpp-object-model-pod/&#34; style=&#34;line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;&#34;&gt;C++&amp;#x5BF9;&amp;#x8C61;&amp;#x6A21;&amp;#x578B;&amp;#xFF08;&amp;#x4E09;&amp;#xFF09;POD&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;center style=&#34;display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden&#34;&gt;%23%20%E4%BB%80%E4%B9%88%E6%98%AF%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%0A%3E%20**C%2B%2B03%E5%AE%9A%E4%B9%89**%0A%3E%20An%20aggregate%20is%20an%20array%20or%20a%20class%20(clause%209)%20with%20no%20user-declared%20constructors%20(12.1)%2C%20no%20private%20or%20protected%20non-static%20data%20members%20(clause%2011)%2C%20no%20base%20classes%20(clause%2010)%2C%20and%20no%20virtual%20functions%20(10.3).%0A%0A%3E%20**C%2B%2B11%E5%AE%9A%E4%B9%89**%0A%3E%20An%20aggregate%20is%20an%20array%20or%20a%20class%20(Clause%209)%20with%20no%20user-provided%20constructors%20(12.1)%2C%20no%20brace-or-equal-initializers%20for%20non-static%20data%20members%20(9.2)%2C%20no%20private%20or%20protected%20non-static%20data%20members%20(Clause%2011)%2C%20no%20base%20classes%20(Clause%2010)%2C%20and%20no%20virtual%20functions%20(10.3).%0A%0A%E7%BB%93%E5%90%88C%2B%2B03%E5%92%8CC%2B%2B11%E6%A0%87%E5%87%86%E5%AE%9A%E4%B9%89%EF%BC%8C%E7%BD%97%E5%88%97%E4%B8%80%E4%B8%8B%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%E7%9A%84%E7%89%B9%E6%80%A7%EF%BC%9A%0A-%20%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E6%9C%89%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%8C%E4%BD%86%E5%8F%AA%E8%83%BD%E6%98%AF%E7%BC%96%E8%AF%91%E5%99%A8%E5%AE%9A%E4%B9%89%E7%9A%84%E9%BB%98%E8%AE%A4%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%8C%E6%88%96%E8%80%85%E7%94%A8%60%3Ddefault%60%E5%AE%9A%E4%B9%89%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%0A-%20%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%E4%B8%8D%E8%83%BD%E6%9C%89private%EF%BC%8Cprotected%E9%9D%9Estatic%E5%8F%98%E9%87%8F%0A-%20%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E6%9C%89copy-assignment%20operator%20and%2For%20destructor%0A-%20%E6%95%B0%E7%BB%84%E6%98%AF%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%8D%B3%E4%BE%BF%E6%95%B0%E7%BB%84%E6%88%90%E5%91%98%E6%98%AF%E9%9D%9E%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%0A-%20%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BB%A5%E6%98%AF%E9%9D%9E%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%0A-%20%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%E4%B8%8D%E8%83%BD%E7%94%A8brace-or-equal-initializers%EF%BC%88%E5%8D%B3%E5%B0%B1%E5%9C%B0%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%89%E5%88%9D%E5%A7%8B%E5%8C%96%E9%9D%9Estatic%E6%88%90%E5%91%98%E3%80%82%0A%0A%23%23%20%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%E5%8F%98%E9%87%8F%E5%88%9D%E5%A7%8B%E5%8C%96%0A%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BB%A5%E9%87%87%E7%94%A8%E5%88%97%E8%A1%A8%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%88%E5%85%B6%E5%AE%9E%E9%9D%9E%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%EF%BC%8C%E9%80%9A%E8%BF%87%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E9%87%87%E7%94%A8%E5%88%97%E8%A1%A8%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%89%0A%60%60%60%20c%0Aif(m%20%3D%3D%20n)%0A%7B%0A%20%20%20%20%2F%2F%20the%20ith%20element%20of%20the%20array%20is%20initialized%20with%20ai%0A%7D%0Aelse%20if(m%20%3C%20n)%20%7B%0A%20%20%20%20%2F%2F%20the%20first%20m%20elements%20of%20the%20array%20are%20initialized%20with%20a1%2C%20%20a2%2C%20%E2%80%A6%2C%20am%20and%20the%20other%20n%20-%20m%20elements%20are%2C%20if%20possible%2C%20value-initialized%20(see%20below%20for%20the%20explanation%20of%20the%20term)%0A%7D%0Aelse%20if(m%20%3E%20n)%20%7B%0A%20%20%20%20%2F%2F%20the%20compiler%20will%20issue%20an%20error%0A%7D%0Aelse%20%2F*(this%20is%20the%20case%20when%20n%20isn&amp;apos;t%20specified%20at%20all%20like%20int%20a%5B%5D%20%3D%20%7B1%2C%202%2C%203%7D%3B)%20*%2F%0A%7B%0A%20%20%20%20%2F%2F%20the%20size%20of%20the%20array%20(n)%20is%20assumed%20to%20be%20equal%20to%20m%2C%20so%20int%20a%5B%5D%20%3D%20%7B1%2C%202%2C%203%7D%3B%20is%20equivalent%20to%20int%20a%5B3%5D%20%3D%20%7B1%2C%202%2C%203%7D%3B%0A%7D%0A%60%60%60%0A%E8%81%9A%E5%90%88%E5%8F%98%E9%87%8F%E6%9C%80%E5%A4%A7%E7%9A%84%E7%89%B9%E7%82%B9%E5%8F%AF%E4%BB%A5%E5%81%9A**%E8%81%9A%E5%90%88%E5%88%9D%E5%A7%8B%E5%8C%96**%EF%BC%8C%E9%99%A4%E4%BA%86%E5%9F%BA%E6%9C%AC%E7%9A%84%E5%88%97%E8%A1%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E8%A7%84%E5%88%99%EF%BC%8C%E8%81%9A%E5%90%88%E5%88%9D%E5%A7%8B%E5%8C%96%E8%BF%98%E4%BD%93%E7%8E%B0%E5%9C%A8%E5%8F%AF%E4%BB%A5%E9%80%92%E5%BD%92%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%0A%60%60%60c%2B%2B%0Astruct%20X%0A%7B%0A%20%20int%20i1%3B%0A%20%20int%20i2%3B%0A%7D%3B%0Astruct%20Y%0A%7B%0A%20%20char%20c%3B%0A%20%20X%20x%3B%0A%20%20int%20i%5B2%5D%3B%0A%20%20float%20f%3B%20%0Aprotected%3A%0A%20%20static%20double%20d%3B%0Aprivate%3A%0A%20%20void%20g()%7B%7D%20%20%20%20%20%20%0A%7D%3B%20%0Astruct%20Z%20%7B%0A%20%20char%20a%3B%0A%20%20X%20x%3B%0A%20%20Z(char%20a1)%20%7B%7D%3B%0A%7D%3B%0A%0AY%20y%20%3D%20%7B&amp;apos;a&amp;apos;%2C%20%7B10%2C%2020%7D%2C%20%7B20%2C%2030%7D%7D%3B%0A%60%60%60%0A%60y.x%60%E4%B9%9F%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BA%86%E3%80%82%E5%A6%82%E6%9E%9C%E5%AF%B9Z%E7%94%A8%E9%80%92%E5%BD%92%E8%81%9A%E5%90%88%E5%88%9D%E5%A7%8B%E5%8C%96%EF%BC%8C%E4%BE%8B%E5%A6%82%60Z%20z%20%3D%20%7B&amp;apos;a&amp;apos;%2C%20%7B&amp;apos;b&amp;apos;%7D%7D%60%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E5%B0%B1%E4%BC%9A%E6%8A%A5%E9%94%99%E3%80%82%E5%9B%A0%E4%B8%BAZ%E4%B8%8D%E6%98%AF%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%EF%BC%8C%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E5%8E%BB%E6%89%BE%E5%AF%B9%E5%BA%94%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%8C%E6%98%BE%E7%84%B6Z%E6%B2%A1%E5%AE%9A%E4%B9%89%E8%BF%99%E6%A0%B7%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E3%80%82%0A%E5%85%B7%E4%BD%93%E4%BB%8B%E7%BB%8D%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%5BAggregate%20initialization%5D(https%3A%2F%2Fen.cppreference.com%2Fw%2Fcpp%2Flanguage%2Faggregate_initialization)%E3%80%82%0A%23%20%E4%BB%80%E4%B9%88%E6%98%AFPOD%E5%8F%98%E9%87%8F%0APOD%20%3D%20Plain%20Old%20Data%EF%BC%8C%E5%8F%AF%E8%A7%81%E8%BF%99%E6%98%AF%E4%B8%80%E7%A7%8D%E5%85%BC%E5%AE%B9%E5%9E%8B%E6%AF%94%E8%BE%83%E5%A5%BD%E7%9A%84%E5%BD%A2%E6%80%81%E3%80%82%E7%94%9A%E8%87%B3%E5%8F%AF%E4%BB%A5%E5%AF%BC%E5%87%BA%E4%B8%8E%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E5%85%B1%E4%BA%AB%E6%AD%A4%E7%B1%BB%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89%E3%80%82%0A%3E%20**C%2B%2B03%E5%AE%9A%E4%B9%89**%0A%3E%20A%20POD-struct%20is%20an%20aggregate%20class%20that%20has%20no%20non-static%20data%20members%20of%20type%20non-POD-struct%2C%20non-POD-union%20(or%20array%20of%20such%20types)%20or%20reference%2C%20and%20has%20no%20user-defined%20copy%20assignment%20operator%20and%20no%20user-defined%20destructor.%20Similarly%2C%20a%20POD-union%20is%20an%20aggregate%20union%20that%20has%20no%20non-static%20data%20members%20of%20type%20non-POD-struct%2C%20non-POD-union%20(or%20array%20of%20such%20types)%20or%20reference%2C%20and%20has%20no%20user-defined%20copy%20assignment%20operator%20and%20no%20user-defined%20destructor.%20A%20POD%20class%20is%20a%20class%20that%20is%20either%20a%20POD-struct%20or%20a%20POD-union.%0A%0A%3E%20C%2B%2B11%E5%AE%9A%E4%B9%89%E5%8F%98%E5%BE%97%E9%9D%9E%E5%B8%B8%E4%BC%98%E9%9B%85%0A%3E%20**A%20POD%20struct%20is%20a%20non-union%20class%20that%20is%20both%20a%20trivial%20class%20and%20a%20standard-layout%20class**%2C%20and%20has%20no%20non-static%20data%20members%20of%20type%20non-POD%20struct%2C%20non-POD%20union%20(or%20array%20of%20such%20types).%20Similarly%2C%20a%20POD%20union%20is%20a%20union%20that%20is%20both%20a%20trivial%20class%20and%20a%20standard%20layout%20class%2C%20and%20has%20no%20non-static%20data%20members%20of%20type%20non-POD%20struct%2C%20non-POD%20union%20(or%20array%20of%20such%20types).%20A%20POD%20class%20is%20a%20class%20that%20is%20either%20a%20POD%20struct%20or%20a%20POD%20union.%0A%0A%E6%80%BB%E8%80%8C%E8%A8%80%E4%B9%8B%EF%BC%9A%0APOD%E7%B1%BB%E5%9E%8B%E6%98%AF%E4%B8%80%E7%A7%8D%E7%89%B9%E6%AE%8A%E7%9A%84%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%B8%80%E4%B8%AAPOD%E7%B1%BB%E5%9E%8B%E4%B8%BA%EF%BC%9A%0A-%20%E6%A0%87%E9%87%8F%E7%B1%BB%E5%9E%8B%E3%80%82%0A-%20%E6%BB%A1%E8%B6%B3%E4%BB%A5%E4%B8%8B%E6%9D%A1%E4%BB%B6%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B%EF%BC%9A%0A%20%20%20%20-%20C%2B%2B11%E4%B9%8B%E5%89%8D%EF%BC%9A%0A%20%20%20%20%20%20%20%20-%20%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%E3%80%82%0A%20%20%20%20%20%20%20%20-%20%E6%B2%A1%E6%9C%89%E9%9D%9EPOD%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%9D%9E%E9%9D%99%E6%80%81%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E3%80%82%0A%20%20%20%20%20%20%20%20-%20%E6%B2%A1%E6%9C%89%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%9D%9E%E9%9D%99%E6%80%81%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E3%80%82%0A%20%20%20%20%20%20%20%20-%20%E6%B2%A1%E6%9C%89%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E6%88%96%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0%E3%80%82%0A%20%20%20%20-%20C%2B%2B11%E4%B9%8B%E5%90%8E%EF%BC%9A%0A%20%20%20%20%20%20%20%20-%20%E6%98%AF%E5%B9%B3%E5%87%A1%E7%B1%BB%E3%80%82%0A%20%20%20%20%20%20%20%20-%20%E6%98%AF%E6%A0%87%E5%87%86%E5%B8%83%E5%B1%80%E7%B1%BB%E3%80%82%0A%20%20%20%20%20%20%20%20-%20%E6%B2%A1%E6%9C%89%E9%9D%9EPOD%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%9D%9E%E9%9D%99%E6%80%81%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E3%80%82%0A-%20POD%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%82%0A%0A%23%20%E8%81%9A%E5%90%88%E7%B1%BB%E5%9E%8B%E6%88%96%E6%98%AFPOD%E5%8F%98%E9%87%8F%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E5%A4%84%EF%BC%9F%0A%E8%81%9A%E5%90%88%E7%B1%BB%E6%9C%80%E5%A4%A7%E7%9A%84%E7%89%B9%E7%82%B9%E5%B0%B1%E6%98%AF%E5%8F%AF%E4%BB%A5%E9%87%87%E7%94%A8%E8%81%9A%E5%90%88%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%0APOD%E7%9A%84%E7%89%B9%E7%82%B9%E6%9B%B4%E4%B8%BA%E5%AE%9E%E7%94%A8%E4%B8%80%E4%BA%9B%0A%3E**POD%E7%9A%84%E7%94%A8%E9%80%94**%0A%3E%E5%B9%B3%E5%87%A1%E7%B1%BB%E7%9A%84%E7%94%A8%E9%80%94%EF%BC%9A%0A%3E%0A%3E-%20%E5%B9%B3%E5%87%A1%E7%B1%BB%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%8F%AF%E4%BB%A5%E4%B8%8E%E5%AD%97%E8%8A%82%E6%B5%81%E4%B9%8B%E9%97%B4%E5%AE%89%E5%85%A8%E8%BD%AC%E6%8D%A2%EF%BC%8C%E5%8D%B3%EF%BC%9A%0A%20%20%20%20-%20%E8%8B%A5%E8%A6%81%E5%B0%86%E5%AF%B9%E8%B1%A1%E8%BD%AC%E4%B8%BA%E5%AD%97%E8%8A%82%E6%B5%81%EF%BC%8C%E7%9B%B4%E6%8E%A5%E5%8F%96%E5%85%B6%E5%9C%B0%E5%9D%80%E5%8D%B3%E5%8F%AF%E3%80%82%0A%20%20%20%20-%20%E8%8B%A5%E8%A6%81%E5%B0%86%E5%AD%97%E8%8A%82%E6%B5%81%E8%BD%AC%E4%B8%BA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%9B%B4%E6%8E%A5%E5%B0%86%E8%AF%A5%E5%9C%B0%E5%9D%80cast%E4%B8%BA%E5%AF%B9%E8%B1%A1%E6%8C%87%E9%92%88%E5%8D%B3%E5%8F%AF%E3%80%82%0A%20%20%20%20-%20%E7%9B%B4%E6%8E%A5%E9%80%9A%E8%BF%87%E5%A4%8D%E5%88%B6%E5%AD%97%E8%8A%82%E7%9A%84%E6%96%B9%E5%BC%8F%E5%A4%8D%E5%88%B6%E5%AF%B9%E8%B1%A1%E3%80%82%0A%3E-%20%E5%AE%89%E5%85%A8%E7%9A%84%E9%9D%99%E6%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%82%0A%20%20%20%20-%20C%2B%2B11%E7%9A%84thread_local%E5%8F%98%E9%87%8F%E5%8F%AF%E4%BB%A5%E6%98%AF%E9%9D%9E%E5%B9%B3%E5%87%A1%E7%B1%BB%E5%9E%8B%EF%BC%8C%E4%BD%86%E5%9C%A8%E6%9F%90%E4%BA%9B%E7%BC%96%E8%AF%91%E5%99%A8%E4%B8%8B%E4%BC%9A%E6%9C%89%E6%AF%94%E8%BE%83%E5%A4%A7%E7%9A%84%E6%80%A7%E8%83%BD%E5%BC%80%E9%94%80%E3%80%82gcc%E6%89%A9%E5%B1%95%E7%9A%84__thread%E5%8F%AA%E8%83%BD%E4%BD%BF%E7%94%A8POD%E7%B1%BB%E5%9E%8B%E3%80%82%0A%3E%0A%3E**%E6%A0%87%E5%87%86%E5%B8%83%E5%B1%80%E7%B1%BB%E7%9A%84%E7%94%A8%E9%80%94%EF%BC%9A**%0A%E8%B7%A8%E8%BF%9B%E7%A8%8B%E3%80%81%E8%B7%A8%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8%E3%80%82%0A%23%20%E5%90%8D%E6%AC%A1%E8%A7%A3%E9%87%8A%0A%23%23%20value%20initialization%0A-%20%E5%AF%B9%E4%BA%8E%E6%99%AE%E9%80%9A%E7%B1%BB%E5%9E%8B%E5%8F%98%E9%87%8F(bool%2C%20int%2C%20char%2C%20double%2C%20pointers%2C%20etc.)%20%0Ait%20means%20it%20is%20initialized%20with%200%20for%20that%20type%20(false%20for%20bool%2C%200.0%20for%20double%2C%20etc.).%20%0A-%20%E5%AF%B9%E4%BA%8Eclass%E7%B1%BB%E5%9E%8B%0A%20%20%20%20-%20%E5%A6%82%E6%9E%9C%E6%9C%89%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%8C%E5%88%99%E8%B0%83%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%0A%20%20%20%20-%20%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E8%87%AA%E5%AE%9A%E4%B8%80%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%8C%E5%88%99%E8%B0%83%E7%94%A8%E9%BB%98%E8%AE%A4%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%0A%20%20%20%20-%20%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E5%AF%B9%E5%BA%94%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%EF%BC%8C%E5%88%99%E6%8A%A5%E9%94%99%0A%20%20%20%20%0A%E4%B8%BE%E4%BE%8B%0A%60%60%60c%2B%2B%0Aclass%20A%0A%7B%0Apublic%3A%0A%20%20A(int)%20%7B%7D%20%2F%2Fno%20default%20constructor%0A%7D%3B%0Aclass%20B%0A%7B%0Apublic%3A%0A%20%20B()%20%7B%7D%20%2F%2Fdefault%20constructor%20available%0A%7D%3B%0Aint%20main()%0A%7B%0A%20%20A%20a1%5B3%5D%20%3D%20%7BA(2)%2C%20A(1)%2C%20A(14)%7D%3B%20%2F%2FOK%20n%20%3D%3D%20m%0A%20%20A%20a2%5B3%5D%20%3D%20%7BA(2)%7D%3B%20%2F%2FERROR%20A%20has%20no%20default%20constructor.%20Unable%20to%20value-initialize%20a2%5B1%5D%20and%20a2%5B2%5D%0A%20%20B%20b1%5B3%5D%20%3D%20%7BB()%7D%3B%20%2F%2FOK%20b1%5B1%5D%20and%20b1%5B2%5D%20are%20value%20initialized%2C%20in%20this%20case%20with%20the%20default-ctor%0A%20%20int%20Array1%5B1000%5D%20%3D%20%7B0%7D%3B%20%2F%2FAll%20elements%20are%20initialized%20with%200%3B%0A%20%20int%20Array2%5B1000%5D%20%3D%20%7B1%7D%3B%20%2F%2FAttention%3A%20only%20the%20first%20element%20is%201%2C%20the%20rest%20are%200%3B%0A%20%20bool%20Array3%5B1000%5D%20%3D%20%7B%7D%3B%20%2F%2Fthe%20braces%20can%20be%20empty%20too.%20All%20elements%20initialized%20with%20false%0A%20%20int%20Array4%5B1000%5D%3B%20%2F%2Fno%20initializer.%20This%20is%20different%20from%20an%20empty%20%7B%7D%20initializer%20in%20that%0A%20%20%2F%2Fthe%20elements%20in%20this%20case%20are%20not%20value-initialized%2C%20but%20have%20indeterminate%20values%20%0A%20%20%2F%2F(unless%2C%20of%20course%2C%20Array4%20is%20a%20global%20array)%0A%20%20int%20array%5B2%5D%20%3D%20%7B1%2C%202%2C%203%2C%204%7D%3B%20%2F%2FERROR%2C%20too%20many%20initializers%0A%7D%0A%60%60%60%0A%E5%A4%A7%E6%8B%AC%E5%8F%B7%E4%B8%AD%E4%B8%AA%E6%95%B0%E4%B8%8D%E8%B6%B3%E7%9A%84%EF%BC%8C%E7%94%A8value%20initialization%E8%A1%A5%E8%B6%B3%E3%80%82%E8%BF%99%E5%B0%B1%E6%98%AF%60A%20a%20%3D%20%7B1%7D%3B%60%E6%88%96%E8%80%85%60A%20a%20%3D%20%7B%7D%60%E7%9A%84%E5%90%AB%E4%B9%89%E3%80%82%E5%A4%A7%E6%8B%AC%E5%8F%B7%E4%B8%AD%E4%B8%AA%E6%95%B0%E8%B6%85%E8%BF%87%E5%A3%B0%E6%98%8E%E7%9A%84%E4%B8%AA%E6%95%B0%E7%9A%84%EF%BC%8C%E5%88%99%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99%E3%80%82%0A%0A%23%23%20brace-or-equal-initializers%0A%E7%B1%BB%E6%88%90%E5%91%98%E7%9A%84%E4%B8%80%E7%A7%8D%E5%88%9D%E5%A7%8B%E5%8C%96%E6%96%B9%E6%B3%95%0A%60%60%60c%2B%2B%0Aclass%20B%20%7B%0Apublic%3A%0A%20%20%20%20B(int)%7B%7D%0A%7D%3B%0A%0Aclass%20A%20%7B%0A%20%20%20%20int%20a%20%3D%20123%3B%0A%20%20%20%20int%20b%20%7B456%7D%3B%0A%20%20%20%20B%20c%20%7B12%7D%3B%0A%20%20%20%20B%20d%20%3D%20%7B34%7D%3B%0A%7D%3B%0A%60%60%60%0A%23%23%20copy-assignment%20operator%0A%E6%8B%B7%E8%B4%9D%E8%B5%8B%E5%80%BC%E6%96%B9%E6%B3%95%0A%60%60%60c%2B%2B%0Aclass%20A%20%7B%0A%20%20%20%20A%20A(int)%20%7B%7D%0A%20%20%20%20A(const%20%26)%20%7B%7D%0A%20%20%20%20A%26%20operator%3D%20(const%20A%26a)%20%7B%7D%0A%7D%3B%0Avoid%20main()%20%7B%0A%20%20%20%20A%20a%3B%0A%20%20%20%20A%20b%20%3D%20a%3B%20%2F%2F%20%E8%BF%99%E9%87%8C%E8%B0%83%E7%94%A8%E7%9A%84%E6%98%AF%E6%8B%B7%E8%B4%9D%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%0A%20%20%20%20A%20c%3B%0A%20%20%20%20c%20%3D%20a%3B%20%2F%2F%20%E8%BF%99%E9%87%8C%E6%89%8D%E4%BC%9A%E8%B0%83%E7%94%A8%E6%8B%B7%E8%B4%9D%E5%A4%8D%E5%88%B6%E5%87%BD%E6%95%B0%0A%7D%0A%60%60%60%0A%23%23%20trial%20stuff%0A%23%23%23%20trivial%20copyable%0A%E5%8F%82%E8%80%83%5BC%2B%2B%20named%20requirements%3A%20TriviallyCopyable%5D(https%3A%2F%2Fen.cppreference.com%2Fw%2Fcpp%2Fnamed_req%2FTriviallyCopyable)%0A%3E%20The%20following%20types%20are%20collectively%20called%20trivially%20copyable%20types%3A%0A%3E%20-%20Scalar%20types%0A%3E%20-%20Trivially%20copyable%20classes%2C%20i.e.%20classes%20satisfying%20following%20requirements%3A%0A%20%20%20%20-%20At%20least%20one%20copy%20constructor%2C%20move%20constructor%2C%20copy%20assignment%20operator%2C%20or%20move%20assignment%20operator%20is%20eligible%0A%20%20%20%20-%20Every%20eligible%20copy%20constructor%20(if%20any)%20is%20trivial%0A%20%20%20%20-%20Every%20eligible%20move%20constructor%20(if%20any)%20is%20trivial%0A%20%20%20%20-%20Every%20eligible%20copy%20assignment%20operator%20(if%20any)%20is%20trivial%0A%20%20%20%20-%20Every%20eligible%20move%20assignment%20operator%20(if%20any)%20is%20trivial%0A%20%20%20%20-%20Has%20a%20trivial%20non-deleted%20destructor%0A%3E%20-%20Arrays%20of%20TriviallyCopyable%20objects%0A%3E%0A%3E%20This%20implies%20that%20a%20trivially%20copyable%20class%20has%20no%20virtual%20functions%20or%20virtual%20base%20classes.%0A%0A%E9%80%9A%E8%BF%87%E6%A8%A1%E7%89%88%5Bstd%3A%3Ais_trivially_copyable%5D(https%3A%2F%2Fen.cppreference.com%2Fw%2Fcpp%2Ftypes%2Fis_trivially_copyable)%E5%8F%AF%E4%BB%A5%E6%A3%80%E9%AA%8C%E4%B8%80%E4%B8%AA%E7%B1%BB%E6%98%AF%E5%90%A6trivially%20copyable%E3%80%82%0A%23%23%23%20trivial%20constructor%2Fdestructor%0A-%20%E7%BC%96%E8%AF%91%E5%99%A8%E5%AE%9A%E4%B9%89%E7%9A%84%E6%9E%84%E9%80%A0%2F%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0%0A-%20%E7%94%A8%60%3Ddefault%60%E5%AE%9A%E4%B9%89%E7%9A%84%E6%9E%84%E9%80%A0%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0%0A%23%23%23%20trivial%20class%0AThe%20standard%20defines%20a%20trivial%20class%20as%20follows%3A%0A%0AA%20trivially%20copyable%20class%20is%20a%20class%20that%3A%0A%0A-%20has%20no%20non-trivial%20copy%20constructors%20(12.8)%2C%0A-%20has%20no%20non-trivial%20move%20constructors%20(12.8)%2C%0A-%20has%20no%20non-trivial%20copy%20assignment%20operators%20(13.5.3%2C%2012.8)%2C%0A-%20has%20no%20non-trivial%20move%20assignment%20operators%20(13.5.3%2C%2012.8)%2C%20and%0A-%20has%20a%20trivial%20destructor%20(12.4).%0A%0AA%20trivial%20class%20is%20a%20class%20that%20has%20a%20trivial%20default%20constructor%20(12.1)%20and%20is%20trivially%20copyable.%0A%0A%5B%20Note%3A%20In%20particular%2C%20a%20trivially%20copyable%20or%20trivial%20class%20does%20not%20have%20virtual%20functions%20or%20virtual%20base%20classes.%20%5D%0A%E5%8F%A6%E5%A4%96trivial%20class%E6%98%AF%E9%80%92%E5%BD%92%E7%9A%84%EF%BC%8C%E5%8D%B3trivial%20class%E4%B8%8D%E8%83%BD%E6%9C%89%E9%9D%9Etrivial%20class%E7%9A%84%E9%9D%9Estatic%E6%88%90%E5%91%98%E3%80%82%0A%E7%94%A8%E6%A8%A1%E7%89%88%5Bstd%3A%3Ais_trivial%5D(https%3A%2F%2Fen.cppreference.com%2Fw%2Fcpp%2Ftypes%2Fis_trivial)%E6%9D%A5%E6%B5%8B%E8%AF%95%0A%23%23%20standard%20layout%0AA%20standard-layout%20class%20is%20a%20class%20that%3A%0A%0A-%20has%20no%20non-static%20data%20members%20of%20type%20non-standard-layout%20class%20(or%20array%20of%20such%20types)%20or%20reference%2C%0A%0A-%20has%20no%20virtual%20functions%20(10.3)%20and%20no%20virtual%20base%20classes%20(10.1)%2C%0A%0A-%20has%20the%20same%20access%20control%20(Clause%2011)%20for%20all%20non-static%20data%20members%2C%0A%0A-%20has%20no%20non-standard-layout%20base%20classes%2C%0A%0A-%20either%20has%20no%20non-static%20data%20members%20in%20the%20most%20derived%20class%20and%20at%20most%20one%20base%20class%20with%20non-static%20data%20members%2C%20or%20has%20no%20base%20classes%20with%20non-static%20data%20members%2C%20(%E8%A6%81%E4%B9%88%E7%BB%88%E7%82%B9%E7%B1%BB%E6%B2%A1%E6%9C%89%E9%9D%9E%E9%9D%99%E6%80%81%E6%88%90%E5%91%98%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%9F%BA%E7%B1%BB%E6%9C%89%E9%9D%9E%E9%9D%99%E6%80%81%E6%88%90%E5%91%98%EF%BC%9B%E8%A6%81%E4%B9%88%E6%B2%A1%E6%9C%89%E5%9F%BA%E7%B1%BB%E6%9C%89%E9%9D%9E%E9%9D%99%E6%80%81%E6%88%90%E5%91%98)%EF%BC%8Cand%0A%0A-%20has%20no%20base%20classes%20of%20the%20same%20type%20as%20the%20first%20non-static%20data%20member.%0A%0AA%20standard-layout%20struct%20is%20a%20standard-layout%20class%20defined%20with%20the%20class-key%20struct%20or%20the%20class-key%20class.%0A%0AA%20standard-layout%20union%20is%20a%20standard-layout%20class%20defined%20with%20the%20class-key%20union.%0A%0A%5B%20Note%3A%20Standard-layout%20classes%20are%20useful%20for%20communicating%20with%20code%20written%20in%20other%20programming%20languages.%20Their%20layout%20is%20specified%20in%209.2.%5D%0A%0A%E6%A0%87%E5%87%86%E5%86%85%E5%AD%98%E5%88%86%E5%B8%83%EF%BC%8C%E7%A1%AE%E4%BF%9D%E5%AF%B9%E8%B1%A1%E5%86%85%E5%AD%98%E5%92%8CC%E8%AF%AD%E8%A8%80%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93%E5%86%85%E5%AD%98%E5%88%86%E5%B8%83%E5%AE%8C%E5%85%A8%E4%B8%80%E8%87%B4%E3%80%82%E4%BD%BF%E5%BE%97POD%E5%8F%98%E9%87%8F%E5%85%B7%E5%A4%87%E4%BA%86C%E5%85%BC%E5%AE%B9%E6%80%A7%E3%80%82%0A%E7%94%A8%E6%A8%A1%E7%89%88%5Bstd%3A%3Ais_standard_layout%5D(https%3A%2F%2Fen.cppreference.com%2Fw%2Fcpp%2Ftypes%2Fis_standard_layout)%E5%8F%AF%E4%BB%A5%E6%B5%8B%E8%AF%95%0A%0A%23%20%E6%80%BB%E7%BB%93%0A%E7%94%A8%5Bstd%3A%3Ais_pod%5D(https%3A%2F%2Fen.cppreference.com%2Fw%2Fcpp%2Ftypes%2Fis_pod)%E6%9D%A5%E6%B5%8B%E8%AF%95%E4%BD%A0%E7%9A%84%E7%B1%BB%E5%90%A7%E3%80%82%0A%23%20%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%0A1.%20%5BWhat%20are%20Aggregates%20and%20PODs%20and%20how%2Fwhy%20are%20they%20special%3F%5D(https%3A%2F%2Fstackoverflow.com%2Fquestions%2F4178175%2Fwhat-are-aggregates-and-pods-and-how-why-are-they-special)%0A2.%20%5BC%2B%2B%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B%EF%BC%88%E4%B8%89%EF%BC%89POD%5D(https%3A%2F%2Ffuzhe1989.github.io%2F2018%2F03%2F15%2Fcpp-object-model-pod%2F)&lt;/center&gt; ]]></description>
        </item>
    </channel>
</rss>
