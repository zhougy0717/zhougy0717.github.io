{
    "version": "https://jsonfeed.org/version/1",
    "title": "Big Ben • All posts by \"unittest\" tag",
    "description": null,
    "home_page_url": "https://zhougy0717.github.io",
    "items": [
        {
            "id": "https://zhougy0717.github.io/2018/04/22/Android%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95(%E4%BA%8C)_-_Roboletric_+_Powermock/",
            "url": "https://zhougy0717.github.io/2018/04/22/Android%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95(%E4%BA%8C)_-_Roboletric_+_Powermock/",
            "title": "Android单元测试(二) - Roboletric + Powermock",
            "date_published": "2018-04-21T23:56:16.000Z",
            "content_html": "<!DOCTYPE en-note SYSTEM 'http://xml.evernote.com/pub/enml2.dtd'><div class=\"enNote\" style=\"color: #2c3f51; line-height: 1.6; background: none;\" title lang=\"v2\" xml:lang dir><del style=\"position:relative;display:block;z-index:10;\"><a style=\"position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;\" href=\"http://maxiang.info/#/?provider=evernote&amp;guid=d168d11e-2deb-4f55-9005-c03b345f4a48&amp;notebook=myblog\">Edit</a></del><div style=\"color: #2c3f51; line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"></p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">2016&#x5E74;&#x5728;&#x505A;&#x5FAE;&#x4FE1;&#x6253;&#x5370;Android agent app&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7814;&#x7A76;&#x8FC7;&#x5982;&#x4F55;&#x5728;&#x5F00;&#x53D1;Android app&#x7684;&#x65F6;&#x5019;TDD&#x3002;&#x8BE6;&#x7EC6;&#x53C2;&#x8003;&#x6B64;&#x7BC7;&#x535A;&#x6587;<a href=\"https://zhougy0717.github.io/2016/10/19/Android%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Android&#x5355;&#x5143;&#x6D4B;&#x8BD5;</a>&#x3002; <br>&#x5F53;&#x65F6;&#x7684;&#x6700;&#x7EC8;&#x65B9;&#x6848;&#x662F;&#xFF1A;Powermock + Mockito + JUnit&#x505A;<a href=\"https://developer.android.com/training/testing/unit-testing/local-unit-tests.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">local test</a>&#x3002;&#x56E0;&#x4E3A;&#x8981;Mock&#x5404;&#x79CD;Android SDK&#x4E2D;&#x7684;&#x7C7B;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#x4E00;&#x79CD;&#x88AB;&#x65E0;&#x529B;&#x63A7;&#x5236;&#x7684;&#x6050;&#x60E7;&#x3002;&#x6240;&#x4EE5;&#x5728;&#x505A;Niwatori&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FDF;&#x8FDF;&#x6CA1;&#x6709;&#x5F00;&#x5C55;TDD&#x3002;&#x56E0;&#x4E3A;&#x6700;&#x8FD1;&#x6DFB;&#x52A0;&#x7684;&#x529F;&#x80FD;&#x7A0D;&#x5FAE;&#x6709;&#x70B9;&#x590D;&#x6742;&#x4E86;&#xFF0C;&#x611F;&#x89C9;&#x5404;&#x79CD;&#x4E0D;&#x987A;&#xFF0C;&#x6240;&#x4EE5;&#x8003;&#x8651;&#x91CD;&#x65B0;&#x62FE;&#x8D77;TDD&#x3002;&#x4E8E;&#x662F;&#x6709;&#x4E86;&#x5404;&#x79CD;&#x6298;&#x817E;&#xFF0C;&#x5E76;&#x9A8C;&#x8BC1;&#x4E86;&#x4E4B;&#x524D;&#x65E0;&#x529B;&#x7684;&#x6050;&#x60E7;&#x540E;&#x7684;&#x8FD9;&#x4E00;&#x7BC7;&#x3002;&#x4E0D;&#x8FC7;&#x7ED3;&#x679C;&#x597D;&#x7684;&#x662F;&#x770B;&#x8D77;&#x6765;&#x627E;&#x5230;&#x4E86;&#x4E00;&#x6761;Android app TDD&#x5F00;&#x53D1;&#x4E0D;&#x9519;&#x7684;&#x8DEF;&#x5B50;&#x3002;</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E00;&#x5207;&#x90FD;&#x8981;&#x5F52;&#x529F;&#x4E8E;</p><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 34.4px; margin: 1.2em 0 .6em 0; text-align: start;\">Roboletric</h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8D77;&#x521D;&#x7684;&#x76F8;&#x8BC6;&#x8FD8;&#x662F;&#x5728;<a href=\"https://developer.android.com/training/testing/fundamentals.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Android developer&#x5B98;&#x7F51;&#x5173;&#x4E8E;&#x6D4B;&#x8BD5;&#x7684;&#x9875;&#x9762;</a>&#x3002;&#x7136;&#x540E;&#x5728;&#x641C;&#x7D22;Powermock&#x7528;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x770B;&#x5230;&#x5F88;&#x591A;&#x5E16;&#x5B50;&#x90FD;&#x63D0;&#x5230;&#x4E86;roboletric&#x3002;&#x56E0;&#x4E3A;&#x8BA4;&#x8BC6;&#x5230;Mockito + Powermock&#x7684;&#x5F31;&#x70B9;(&#x5982;&#x4E0B;)&#xFF0C;&#x6240;&#x4EE5;&#x51B3;&#x5B9A;&#x8F6C;&#x5411;roboletric&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\">Mockito</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x4E0D;&#x80FD;mock final class/method</li><li style=\"line-height: 1.6;\">&#x4E0D;&#x80FD;mock private/static</li></ul><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\">Powermock</p><ul style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x9700;&#x8981;&#x81EA;&#x5DF1;mock&#x5404;&#x79CD;class&#xFF0C;&#x5F53;&#x51FD;&#x6570;&#x5927;&#x4E86;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x56E0;&#x4E3A;&#x4F1A;&#x5F15;&#x7528;&#x975E;&#x5E38;&#x591A;&#x7684;Android&#x7C7B;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x8BA9;&#x4EBA;&#x611F;&#x5230;&#x5F88;&#x65E0;&#x529B;</li></ul></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5728;&#x7F16;&#x8BD1;Android app&#x7684;&#x65F6;&#x5019;&#xFF0C;Android SDK&#x4EE5;android.jar&#x7684;&#x5F62;&#x5F0F;&#x53C2;&#x4E0E;&#x7F16;&#x8BD1;&#x3002;&#x800C;&#x8FD9;&#x4E2A;android.jar&#x4E2D;&#x7684;&#x5404;&#x4E2A;&#x7C7B;&#x5E76;&#x6CA1;&#x6709;&#x5177;&#x4F53;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x53EA;&#x662F;&#x4E00;&#x4E2A;stub&#x3002;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x4E0D;&#x7ECF;&#x8FC7;mock&#x5C31;&#x76F4;&#x63A5;&#x5728;Unit Test&#x4E2D;&#x4F7F;&#x7528;Android&#x7C7B;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">Error java.lang.RuntimeException: Stub!</code>&#x9519;&#x8BEF;&#x3002; <br>Roboletric&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x6D88;&#x9664;&#x8FD9;&#x79CD;&#x9519;&#x8BEF;&#x8BDE;&#x751F;&#x7684;&#x3002;&#x5B83;&#x4E3A;&#x6240;&#x6709;&#x7684;Android&#x7C7B;&#x5B9A;&#x4E49;&#x4E86;&#x53EF;&#x4EE5;&#x8DD1;&#x5728;PC&#x7AEF;JVM&#x4E0B;&#x7684;class&#x3002;&#x800C;&#x4E14;&#x63D0;&#x4F9B;&#x4E86;&#x5F88;&#x591A;&#x989D;&#x5916;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x65B9;&#x4FBF;&#x5F00;&#x53D1;&#x8005;&#x505A;&#x9694;&#x79BB;&#x6D4B;&#x8BD5;&#x4EE5;&#x53CA;UI&#x65B9;&#x9762;&#x7684;&#x6D4B;&#x8BD5;&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x5165;&#x95E8;</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x9996;&#x5148;&#x63A8;&#x8350;&#x7684;&#x8FD8;&#x662F;<a href=\"http://robolectric.org/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x5B98;&#x7F51;&#x4E3B;&#x9875;</a>&#x3002;&#x7136;&#x540E;&#x8FD8;&#x6709;&#x51E0;&#x4E2A;&#x4E0D;&#x9519;&#x7684;&#x4E2D;&#x6587;&#x5E16;&#x5B50;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"http://www.cnblogs.com/slgkaifa/p/7354609.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Robolectric&#x4F7F;&#x7528;&#x6559;&#x7A0B;</a>: &#x53EF;&#x4EE5;&#x53C2;&#x8003;Properties&#x6587;&#x4EF6;&#x4EE5;&#x53CA;Activity&#x751F;&#x547D;&#x5468;&#x671F;&#x90E8;&#x5206;&#x3002;</li><li style=\"line-height: 1.6;\"><a href=\"https://maxwell-nc.github.io/android/robolectricTest.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Android&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E4B;Robolectric&#x6846;&#x67B6;</a>: &#x53EF;&#x4EE5;&#x53C2;&#x8003;Robolectric&#x914D;&#x7F6E;&#x4EE5;&#x53CA;&#x9488;&#x5BF9;&#x5404;&#x79CD;Android&#x7EC4;&#x4EF6;&#x7684;&#x6D4B;&#x8BD5;&#x65B9;&#x6CD5;&#x90E8;&#x5206;&#x3002;</li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5BF9;&#x4E8E;&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x548C;&#x7B2C;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x6700;&#x597D;&#x662F;&#x6309;&#x7167;&#x5B98;&#x7F51;&#x7684;&#x6B65;&#x9AA4;&#x53BB;&#x505A;&#x3002;&#x56E0;&#x4E3A;&#x5728;setup&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F80;&#x5F80;&#x6709;&#x5F88;&#x591A;&#x7248;&#x672C;&#x53F7;&#x4F9D;&#x8D56;&#x8981;&#x5904;&#x7406;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x8FD9;&#x79CD;&#x51FA;&#x8EAB;&#x793E;&#x533A;&#x7684;&#x6846;&#x67B6;&#x3002;&#x5F80;&#x5F80;&#x4F9D;&#x8D56;&#x5904;&#x7406;&#x4E0D;&#x662F;&#x7279;&#x522B;&#x597D;&#x3002;</p><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 34.4px; margin: 1.2em 0 .6em 0; text-align: start;\">Powermock + Roboletric</h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7528;&#x4E0A;Roboletric&#x4EE5;&#x540E;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x539F;&#x5148;&#x9700;&#x8981;&#x5404;&#x79CD;mock&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x73B0;&#x5728;&#x4E0D;&#x7528;&#x600E;&#x4E48;mock&#x5C31;&#x80FD;&#x7F16;&#x8FC7;&#x4E86;&#xFF0C;&#x751A;&#x81F3;&#x6709;&#x4E9B;listener&#x90FD;&#x80FD;&#x8D77;&#x4F5C;&#x7528;&#x3002;&#x4F46;&#x662F;&#x56E0;&#x4E3A;Roboletric&#x672C;&#x8EAB;&#x53EA;&#x662F;&#x63D0;&#x4F9B;Android SDK&#x7684;&#x526F;&#x672C;&#xFF0C;&#x5BF9;&#x4E8E;&#x6D4B;&#x8BD5;&#x5E76;&#x4E0D;&#x662F;&#x90A3;&#x4E48;&#x5728;&#x884C;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x5176;&#x76EE;&#x7684;&#x5E76;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x66F4;power&#x7684;mock&#x5E93;&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E3A;&#x67D0;&#x4E9B;class&#x63D0;&#x4F9B;&#x9884;&#x8BBE;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5F02;&#x6216;&#x9700;&#x8981;&#x5BF9;&#x67D0;&#x4E9B;&#x5BF9;&#x8C61;&#x8C03;&#x7528;&#x6B21;&#x6570;&#x8FDB;&#x884C;verify&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x662F;&#x9700;&#x8981;powermock&#x7684;&#xFF08;&#x6216;&#x8005;Mockito&#xFF0C;&#x4F46;&#x9274;&#x4E8E;&#x5176;&#x529F;&#x80FD;&#x5B9E;&#x5728;&#x592A;low&#xFF0C;&#x80FD;&#x7528;Powermock&#x7684;&#x5C31;&#x7528;Powermock&#x5427;&#xFF09;&#x3002; <br>&#x5165;&#x95E8;&#x53C2;&#x770B;Roboletric GitHub wiki&#xFF1A;<a href=\"https://github.com/robolectric/robolectric/wiki/Using-PowerMock\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Using PowerMock</a>&#x3002;&#x793A;&#x4F8B;&#x5982;&#x4E0B;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">@RunWith</span>(RobolectricTestRunner.class)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">@Config</span>(constants = BuildConfig.class)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">@PowerMockIgnore</span>(&#123; <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&quot;org.mockito.*&quot;</span>, <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&quot;org.robolectric.*&quot;</span>, <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&quot;android.*&quot;</span> &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">@PrepareForTest</span>(Static.class)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">public</span> <span style=\"display: inline; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">class</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e; font-style: italic; background-color: transparent;\">DeckardActivityTest</span> </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">@Rule</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">public</span> PowerMockRule rule = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">new</span> PowerMockRule();</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">@Test</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">public</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">testStaticMocking</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">()</span> </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        PowerMockito.mockStatic(Static.class);</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        Mockito.when(Static.staticMethod()).thenReturn(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&quot;hello mock&quot;</span>);</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        assertTrue(Static.staticMethod().equals(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&quot;hello mock&quot;</span>));</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;</div></div></div></div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7279;&#x522B;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF1A;</p><ol start=\"1\" style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x56E0;&#x4E3A;class&#x5F00;&#x5934;&#x7528;&#x4E86;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">@RunWith(RobolectricTestRunner.class)</code>&#x6807;&#x6CE8;&#xFF0C;&#x6240;&#x4EE5;&#x65E0;&#x6CD5;&#x7528;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">PowermockTestRunner.class</code>&#x3002;&#x6240;&#x4EE5;&#x5FC5;&#x987B;&#x52A0;&#x4E0A;&#x4E0B;&#x9762;&#x4E24;&#x884C;&#xFF1A;</li></ol><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">@Rule</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">public</span> PowerMockRule rule = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">new</span> PowerMockRule();</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5426;&#x5219;&#x4F1A;&#x51FA;&#x73B0;&#x5404;&#x79CD;Powermock&#x65E0;&#x6CD5;&#x5DE5;&#x4F5C;&#x7684;&#x5F02;&#x5E38;&#xFF0C;&#x4F8B;&#x5982;class&#x6CA1;&#x6709;prepare&#x5566;&#xFF0C;&#x4E0D;&#x80FD;mock private&#x51FD;&#x6570;&#x7B49;&#x7B49;&#x3002;</p><ol start=\"2\" style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x56E0;&#x4E3A;Roboletric&#x63D0;&#x4F9B;&#x4E86;&#x5F88;&#x591A;Shadow&#x7C7B;&#xFF0C;&#x800C;&#x8FD9;&#x4E9B;&#x7C7B;&#x548C;mock&#x6709;&#x51B2;&#x7A81;&#x3002;&#x4F8B;&#x5982;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">Intent intent = mock(Intent.class)</code>&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;&#x8FD9;&#x4E2A;&#x83AB;&#x540D;&#x5176;&#x5999;&#x7684;&#x9519;&#x8BEF;&#x3002;</li></ol><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">java.lang.LinkageError: loader constraint violation: loader (instance of net/bytebuddy/dynamic/loading/MultipleParentClassLoader) previously initiated loading for a different type with name &quot;org/xmlpull/v1/XmlSerializer</code></p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6240;&#x4EE5;&#x5C31;&#x8981;&#x52A0;&#x4E0A;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">@PowerMockIgnore</code>&#x3002;&#x751A;&#x81F3;Ignore&#x7684;&#x5217;&#x8868;&#x8981;&#x66F4;&#x957F;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">@<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">PowerMockIgnore</span>(&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &quot;<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">org</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.mockito</span>.*&quot;,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &quot;<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">org</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.robolectric</span>.*&quot;,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &quot;<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">android</span>.*&quot;,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &quot;<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">javax</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.xml</span>.*&quot;,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &quot;<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">org</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.xml</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.sax</span>.*&quot;,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &quot;<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">org</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.w3c</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.dom</span>.*&quot;,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &quot;<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">org</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.springframework</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.context</span>.*&quot;,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &quot;<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">org</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.apache</span><span style=\"display: inline; line-height: 1.6; color: #a6e22e; background-color: transparent;\">.log4j</span>.*&quot;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;)</div></code></pre><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 34.4px; margin: 1.2em 0 .6em 0; text-align: start;\">&#x8E29;&#x5751;&#x5217;&#x8868;</h2><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">PowerMockito.whenNew is not working</h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">You need to put the class <strong style=\"font-weight: bold; line-height: 1.6;\">where the constructor is called</strong> into the @PrepareForTest annotation instead of the class which is being constructed - see Mock construction of new objects.</p></blockquote><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 34.4px; margin: 1.2em 0 .6em 0; text-align: start;\">&#x603B;&#x7ED3;</h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7528;Roboletric&#x6765;&#x89E3;&#x51B3;Android SDK&#x95EE;&#x9898;&#xFF0C;&#x7528;Powermock+JUnit&#x6765;&#x89E3;&#x51B3;unit test&#x95EE;&#x9898;&#x3002;</p></div><center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">%23%20Android%u5355%u5143%u6D4B%u8BD5%28%u4E8C%29%20-%20Roboletric%20+%20Powermock%0A@%28myblog%29%5BAndroid%2C%20unittest%5D%0A%0A2016%u5E74%u5728%u505A%u5FAE%u4FE1%u6253%u5370Android%20agent%20app%u7684%u65F6%u5019%uFF0C%u7814%u7A76%u8FC7%u5982%u4F55%u5728%u5F00%u53D1Android%20app%u7684%u65F6%u5019TDD%u3002%u8BE6%u7EC6%u53C2%u8003%u6B64%u7BC7%u535A%u6587%5BAndroid%u5355%u5143%u6D4B%u8BD5%5D%28https%3A//zhougy0717.github.io/2016/10/19/Android%25E5%258D%2595%25E5%2585%2583%25E6%25B5%258B%25E8%25AF%2595/%29%u3002%0A%u5F53%u65F6%u7684%u6700%u7EC8%u65B9%u6848%u662F%uFF1APowermock%20+%20Mockito%20+%20JUnit%u505A%5Blocal%20test%5D%28https%3A//developer.android.com/training/testing/unit-testing/local-unit-tests.html%29%u3002%u56E0%u4E3A%u8981Mock%u5404%u79CDAndroid%20SDK%u4E2D%u7684%u7C7B%uFF0C%u6240%u4EE5%u6709%u4E00%u79CD%u88AB%u65E0%u529B%u63A7%u5236%u7684%u6050%u60E7%u3002%u6240%u4EE5%u5728%u505ANiwatori%u7684%u65F6%u5019%uFF0C%u8FDF%u8FDF%u6CA1%u6709%u5F00%u5C55TDD%u3002%u56E0%u4E3A%u6700%u8FD1%u6DFB%u52A0%u7684%u529F%u80FD%u7A0D%u5FAE%u6709%u70B9%u590D%u6742%u4E86%uFF0C%u611F%u89C9%u5404%u79CD%u4E0D%u987A%uFF0C%u6240%u4EE5%u8003%u8651%u91CD%u65B0%u62FE%u8D77TDD%u3002%u4E8E%u662F%u6709%u4E86%u5404%u79CD%u6298%u817E%uFF0C%u5E76%u9A8C%u8BC1%u4E86%u4E4B%u524D%u65E0%u529B%u7684%u6050%u60E7%u540E%u7684%u8FD9%u4E00%u7BC7%u3002%u4E0D%u8FC7%u7ED3%u679C%u597D%u7684%u662F%u770B%u8D77%u6765%u627E%u5230%u4E86%u4E00%u6761Android%20app%20TDD%u5F00%u53D1%u4E0D%u9519%u7684%u8DEF%u5B50%u3002%0A%0A%u8FD9%u4E00%u5207%u90FD%u8981%u5F52%u529F%u4E8E%0A%23%23%20Roboletric%0A%u8D77%u521D%u7684%u76F8%u8BC6%u8FD8%u662F%u5728%5BAndroid%20developer%u5B98%u7F51%u5173%u4E8E%u6D4B%u8BD5%u7684%u9875%u9762%5D%28https%3A//developer.android.com/training/testing/fundamentals.html%29%u3002%u7136%u540E%u5728%u641C%u7D22Powermock%u7528%u6CD5%u7684%u65F6%u5019%uFF0C%u770B%u5230%u5F88%u591A%u5E16%u5B50%u90FD%u63D0%u5230%u4E86roboletric%u3002%u56E0%u4E3A%u8BA4%u8BC6%u5230Mockito%20+%20Powermock%u7684%u5F31%u70B9%28%u5982%u4E0B%29%uFF0C%u6240%u4EE5%u51B3%u5B9A%u8F6C%u5411roboletric%u3002%0A%3E%20Mockito%0A%3E%20-%20%u4E0D%u80FDmock%20final%20class/method%0A%3E%20-%20%u4E0D%u80FDmock%20private/static%0A%0A%3E%20Powermock%0A%3E%20-%20%u9700%u8981%u81EA%u5DF1mock%u5404%u79CDclass%uFF0C%u5F53%u51FD%u6570%u5927%u4E86%u7684%u65F6%u5019%uFF0C%u56E0%u4E3A%u4F1A%u5F15%u7528%u975E%u5E38%u591A%u7684Android%u7C7B%uFF0C%u6240%u4EE5%u4F1A%u8BA9%u4EBA%u611F%u5230%u5F88%u65E0%u529B%0A%0A%u5728%u7F16%u8BD1Android%20app%u7684%u65F6%u5019%uFF0CAndroid%20SDK%u4EE5android.jar%u7684%u5F62%u5F0F%u53C2%u4E0E%u7F16%u8BD1%u3002%u800C%u8FD9%u4E2Aandroid.jar%u4E2D%u7684%u5404%u4E2A%u7C7B%u5E76%u6CA1%u6709%u5177%u4F53%u7684%u5B9E%u73B0%uFF0C%u53EA%u662F%u4E00%u4E2Astub%u3002%u6240%u4EE5%u5982%u679C%u4E0D%u7ECF%u8FC7mock%u5C31%u76F4%u63A5%u5728Unit%20Test%u4E2D%u4F7F%u7528Android%u7C7B%u5C31%u4F1A%u51FA%u73B0%60Error%20java.lang.RuntimeException%3A%20Stub%21%60%u9519%u8BEF%u3002%0ARoboletric%u5C31%u662F%u4E3A%u4E86%u6D88%u9664%u8FD9%u79CD%u9519%u8BEF%u8BDE%u751F%u7684%u3002%u5B83%u4E3A%u6240%u6709%u7684Android%u7C7B%u5B9A%u4E49%u4E86%u53EF%u4EE5%u8DD1%u5728PC%u7AEFJVM%u4E0B%u7684class%u3002%u800C%u4E14%u63D0%u4F9B%u4E86%u5F88%u591A%u989D%u5916%u7684%u529F%u80FD%uFF0C%u65B9%u4FBF%u5F00%u53D1%u8005%u505A%u9694%u79BB%u6D4B%u8BD5%u4EE5%u53CAUI%u65B9%u9762%u7684%u6D4B%u8BD5%u3002%0A%0A%23%23%23%20%u5165%u95E8%0A%u9996%u5148%u63A8%u8350%u7684%u8FD8%u662F%5B%u5B98%u7F51%u4E3B%u9875%5D%28http%3A//robolectric.org/%29%u3002%u7136%u540E%u8FD8%u6709%u51E0%u4E2A%u4E0D%u9519%u7684%u4E2D%u6587%u5E16%u5B50%uFF1A%0A-%20%5BRobolectric%u4F7F%u7528%u6559%u7A0B%5D%28http%3A//www.cnblogs.com/slgkaifa/p/7354609.html%29%3A%20%u53EF%u4EE5%u53C2%u8003Properties%u6587%u4EF6%u4EE5%u53CAActivity%u751F%u547D%u5468%u671F%u90E8%u5206%u3002%0A-%20%5BAndroid%u5355%u5143%u6D4B%u8BD5%u4E4BRobolectric%u6846%u67B6%5D%28https%3A//maxwell-nc.github.io/android/robolectricTest.html%29%3A%20%u53EF%u4EE5%u53C2%u8003Robolectric%u914D%u7F6E%u4EE5%u53CA%u9488%u5BF9%u5404%u79CDAndroid%u7EC4%u4EF6%u7684%u6D4B%u8BD5%u65B9%u6CD5%u90E8%u5206%u3002%0A%0A%u5BF9%u4E8E%u914D%u7F6E%u73AF%u5883%u548C%u7B2C%u4E00%u4E2A%u7B80%u5355%u7684%u5B9E%u4F8B%uFF0C%u6700%u597D%u662F%u6309%u7167%u5B98%u7F51%u7684%u6B65%u9AA4%u53BB%u505A%u3002%u56E0%u4E3A%u5728setup%u7684%u65F6%u5019%uFF0C%u5F80%u5F80%u6709%u5F88%u591A%u7248%u672C%u53F7%u4F9D%u8D56%u8981%u5904%u7406%uFF0C%u5C24%u5176%u662F%u8FD9%u79CD%u51FA%u8EAB%u793E%u533A%u7684%u6846%u67B6%u3002%u5F80%u5F80%u4F9D%u8D56%u5904%u7406%u4E0D%u662F%u7279%u522B%u597D%u3002%0A%0A%23%23%20Powermock%20+%20Roboletric%0A%u7528%u4E0ARoboletric%u4EE5%u540E%uFF0C%u4F60%u4F1A%u53D1%u73B0%u539F%u5148%u9700%u8981%u5404%u79CDmock%u7684%u51FD%u6570%uFF0C%u73B0%u5728%u4E0D%u7528%u600E%u4E48mock%u5C31%u80FD%u7F16%u8FC7%u4E86%uFF0C%u751A%u81F3%u6709%u4E9Blistener%u90FD%u80FD%u8D77%u4F5C%u7528%u3002%u4F46%u662F%u56E0%u4E3ARoboletric%u672C%u8EAB%u53EA%u662F%u63D0%u4F9BAndroid%20SDK%u7684%u526F%u672C%uFF0C%u5BF9%u4E8E%u6D4B%u8BD5%u5E76%u4E0D%u662F%u90A3%u4E48%u5728%u884C%uFF0C%u6216%u8005%u8BF4%u5176%u76EE%u7684%u5E76%u4E0D%u662F%u4E00%u4E2A%u66F4power%u7684mock%u5E93%u3002%u5F53%u6211%u4EEC%u9700%u8981%u4E3A%u67D0%u4E9Bclass%u63D0%u4F9B%u9884%u8BBE%u7684%u529F%u80FD%uFF0C%u5F02%u6216%u9700%u8981%u5BF9%u67D0%u4E9B%u5BF9%u8C61%u8C03%u7528%u6B21%u6570%u8FDB%u884Cverify%u7684%u65F6%u5019%uFF0C%u8FD8%u662F%u9700%u8981powermock%u7684%uFF08%u6216%u8005Mockito%uFF0C%u4F46%u9274%u4E8E%u5176%u529F%u80FD%u5B9E%u5728%u592Alow%uFF0C%u80FD%u7528Powermock%u7684%u5C31%u7528Powermock%u5427%uFF09%u3002%0A%u5165%u95E8%u53C2%u770BRoboletric%20GitHub%20wiki%uFF1A%5BUsing%20PowerMock%5D%28https%3A//github.com/robolectric/robolectric/wiki/Using-PowerMock%29%u3002%u793A%u4F8B%u5982%u4E0B%uFF1A%0A%60%60%60java%0A@RunWith%28RobolectricTestRunner.class%29%0A@Config%28constants%20%3D%20BuildConfig.class%29%0A@PowerMockIgnore%28%7B%20%22org.mockito.*%22%2C%20%22org.robolectric.*%22%2C%20%22android.*%22%20%7D%29%0A@PrepareForTest%28Static.class%29%0Apublic%20class%20DeckardActivityTest%20%7B%0A%0A%20%20%20%20@Rule%0A%20%20%20%20public%20PowerMockRule%20rule%20%3D%20new%20PowerMockRule%28%29%3B%0A%0A%20%20%20%20@Test%0A%20%20%20%20public%20void%20testStaticMocking%28%29%20%7B%0A%20%20%20%20%20%20%20%20PowerMockito.mockStatic%28Static.class%29%3B%0A%20%20%20%20%20%20%20%20Mockito.when%28Static.staticMethod%28%29%29.thenReturn%28%22hello%20mock%22%29%3B%0A%0A%20%20%20%20%20%20%20%20assertTrue%28Static.staticMethod%28%29.equals%28%22hello%20mock%22%29%29%3B%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%u7279%u522B%u8981%u6CE8%u610F%u7684%u662F%uFF1A%0A1.%20%u56E0%u4E3Aclass%u5F00%u5934%u7528%u4E86%60@RunWith%28RobolectricTestRunner.class%29%60%u6807%u6CE8%uFF0C%u6240%u4EE5%u65E0%u6CD5%u7528%60PowermockTestRunner.class%60%u3002%u6240%u4EE5%u5FC5%u987B%u52A0%u4E0A%u4E0B%u9762%u4E24%u884C%uFF1A%0A%60%60%60%0A@Rule%0Apublic%20PowerMockRule%20rule%20%3D%20new%20PowerMockRule%28%29%3B%0A%60%60%60%0A%u5426%u5219%u4F1A%u51FA%u73B0%u5404%u79CDPowermock%u65E0%u6CD5%u5DE5%u4F5C%u7684%u5F02%u5E38%uFF0C%u4F8B%u5982class%u6CA1%u6709prepare%u5566%uFF0C%u4E0D%u80FDmock%20private%u51FD%u6570%u7B49%u7B49%u3002%0A%0A2.%20%u56E0%u4E3ARoboletric%u63D0%u4F9B%u4E86%u5F88%u591AShadow%u7C7B%uFF0C%u800C%u8FD9%u4E9B%u7C7B%u548Cmock%u6709%u51B2%u7A81%u3002%u4F8B%u5982%60Intent%20intent%20%3D%20mock%28Intent.class%29%60%u5C31%u4F1A%u5BFC%u81F4%u8FD9%u4E2A%u83AB%u540D%u5176%u5999%u7684%u9519%u8BEF%u3002%0A%0A%3E%60java.lang.LinkageError%3A%20loader%20constraint%20violation%3A%20loader%20%28instance%20of%20net/bytebuddy/dynamic/loading/MultipleParentClassLoader%29%20previously%20initiated%20loading%20for%20a%20different%20type%20with%20name%20%22org/xmlpull/v1/XmlSerializer%60%0A%0A%u6240%u4EE5%u5C31%u8981%u52A0%u4E0A%60@PowerMockIgnore%60%u3002%u751A%u81F3Ignore%u7684%u5217%u8868%u8981%u66F4%u957F%uFF0C%u4F8B%u5982%uFF1A%0A%60%60%60%0A@PowerMockIgnore%28%7B%20%0A%09%22org.mockito.*%22%2C%20%0A%09%22org.robolectric.*%22%2C%20%0A%09%22android.*%22%2C%0A%09%22javax.xml.*%22%2C%20%0A%09%22org.xml.sax.*%22%2C%20%0A%09%22org.w3c.dom.*%22%2C%20%20%0A%09%22org.springframework.context.*%22%2C%20%0A%09%22org.apache.log4j.*%22%20%0A%7D%29%0A%60%60%60%0A%0A%23%23%20%u8E29%u5751%u5217%u8868%0A%23%23%23%20PowerMockito.whenNew%20is%20not%20working%0A%3EYou%20need%20to%20put%20the%20class%20**where%20the%20constructor%20is%20called**%20into%20the%20@PrepareForTest%20annotation%20instead%20of%20the%20class%20which%20is%20being%20constructed%20-%20see%20Mock%20construction%20of%20new%20objects.%0A%0A%23%23%20%u603B%u7ED3%0A%u7528Roboletric%u6765%u89E3%u51B3Android%20SDK%u95EE%u9898%uFF0C%u7528Powermock+JUnit%u6765%u89E3%u51B3unit%20test%u95EE%u9898%u3002</center><br></div>",
            "tags": [
                "Android",
                "unittest"
            ]
        },
        {
            "id": "https://zhougy0717.github.io/2017/10/27/Angular_JS_-_unit_test/",
            "url": "https://zhougy0717.github.io/2017/10/27/Angular_JS_-_unit_test/",
            "title": "Angular JS - unit test",
            "date_published": "2017-10-26T22:33:17.000Z",
            "content_html": "<!DOCTYPE en-note SYSTEM 'http://xml.evernote.com/pub/enml2.dtd'><div class=\"enNote\" style=\"color: #2c3f51; line-height: 1.6; background: none;\" title lang=\"v2\" xml:lang dir><del style=\"position:relative;display:block;z-index:10;\"><a style=\"position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;\" href=\"http://maxiang.io/#/?provider=evernote&amp;guid=699f9e35-a583-4840-9b52-844d2fe42a40&amp;notebook=myblog\">Edit</a></del><div style=\"color: #2c3f51; line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"> <br>&#x524D;&#x7AEF;&#x4EE3;&#x7801;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x505A;unit testing&#xFF0C;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x600E;&#x4E48;&#x505A;&#x3002;&#x5728;Yaakov Chaikin&#x7684;<a href=\"https://www.coursera.org/learn/single-page-web-apps-with-angularjs/home/week/5\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Coursera&#x8BFE;&#x7A0B;</a>&#x4E2D;&#xFF0C;&#x7B2C;&#x4E94;&#x7AE0;&#x6B63;&#x597D;&#x4ECB;&#x7ECD;&#x4E86;&#x76F8;&#x5173;&#x5185;&#x5BB9;&#x3002;&#x6240;&#x4EE5;&#x5C31;&#x987A;&#x4FBF;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x9879;&#x76EE;&#x4E2D;&#x5B9E;&#x8DF5;&#x4E86;&#x4E00;&#x628A;&#x3002;&#x65E0;&#x6570;&#x6B21;&#x7684;&#x5B9E;&#x8DF5;&#x8BC1;&#x660E;&#xFF0C;&#x770B;&#x5F97;&#x5934;&#x5934;&#x662F;&#x9053;&#xFF0C;&#x5199;&#x8D77;&#x6765;&#x5C31;&#x5230;&#x5904;&#x662F;&#x5751;&#x3002;&#x5C0F;&#x5C0F;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x7740;&#x5B9E;&#x82B1;&#x4E86;&#x4E0D;&#x5C11;&#x65F6;&#x95F4;&#x3002;</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x9488;&#x5BF9;&#x524D;&#x7AEF;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x7F51;&#x4E0A;&#x91C7;&#x7528;&#x7684;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x5927;&#x591A;&#x662F;karma + jasmine + chai&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x4E4B;&#x524D;&#x5728;&#x540E;&#x7AEF;&#x4EE3;&#x7801;&#x7684;&#x6D4B;&#x8BD5;&#x4E2D;&#x591A;&#x91C7;&#x7528;mocha + should + sinon&#x3002;&#x6240;&#x4EE5;&#x672C;&#x6B21;&#x5B9E;&#x8DF5;&#xFF0C;&#x4ECD;&#x7136;&#x7231;&#x91C7;&#x7528;mocha&#x6846;&#x67B6;&#xFF0C;&#x6765;&#x642D;&#x914D;karma&#x4F7F;&#x7528;&#x3002;</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">karma&#x662F;&#x4E00;&#x4E2A;&#x81EA;&#x52A8;&#x5316;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x3002;&#x56E0;&#x5176;&#x4E30;&#x5BCC;&#x7684;&#x914D;&#x7F6E;&#x9009;&#x9879;&#xFF0C;&#x826F;&#x597D;&#x7684;&#x6269;&#x5C55;&#x6027;&#x80FD;&#xFF0C;&#x88AB;&#x5E7F;&#x6CDB;&#x5E94;&#x7528;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5728;&#x524D;&#x7AEF;&#x3002;&#x56E0;&#x4E3A;&#x524D;&#x7AEF;&#x8981;&#x9488;&#x5BF9;&#x5404;&#x79CD;&#x7248;&#x672C;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x5404;&#x79CD;&#x6846;&#x67B6;&#xFF0C;&#x5982;&#x679C;&#x5168;&#x90E8;&#x9760;&#x624B;&#x52A8;&#x53BB;&#x9002;&#x914D;&#xFF0C;&#x57FA;&#x672C;&#x4E0D;&#x592A;&#x53EF;&#x80FD;&#x3002;&#x6240;&#x4EE5;&#x5927;&#x5BB6;&#x90FD;&#x7528;karma&#x4E86;&#x3002;</p><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 34.4px; margin: 1.2em 0 .6em 0; text-align: start;\">karma setup</h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x57FA;&#x672C;&#x914D;&#x7F6E;&#x53C2;&#x8003;<a href=\"https://segmentfault.com/a/1190000006895064\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x524D;&#x7AEF;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E4B;Karma&#x73AF;&#x5883;&#x642D;&#x5EFA;</a></p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7B80;&#x5355;&#x5982;&#x4E0B;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">module</span>.exports = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">config</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  config.set(&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// base path that will be used to resolve all patterns (eg. files, exclude)</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    basePath: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;&apos;</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// frameworks to use</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// available frameworks: https://npmjs.org/browse/keyword/karma-adapter</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    frameworks: [...],</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// list of files / patterns to load in the browser</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    files: [</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;...&apos;</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      &#123;<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">pattern</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;...&apos;</span>&#125;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    ],</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// list of files to exclude</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    exclude: [</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    ],</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// preprocess matching files before serving them to the browser</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    preprocessors: &#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// test results reporter to use</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// possible values: &apos;dots&apos;, &apos;progress&apos;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// available reporters: https://npmjs.org/browse/keyword/karma-reporter</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    reporters: [<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;progress&apos;</span>],</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// web server port</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    port: <span style=\"display: inline; line-height: 1.6; color: #ae81ff; background-color: transparent;\">9876</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// enable / disable colors in the output (reporters and logs)</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    colors: <span style=\"display: inline; line-height: 1.6; color: #ae81ff; background-color: transparent;\">true</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// level of logging</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    logLevel: config.LOG_INFO,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// enable / disable watching file and executing tests whenever any file changes</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    autoWatch: <span style=\"display: inline; line-height: 1.6; color: #ae81ff; background-color: transparent;\">true</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// start these browsers</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// available browser launchers: https://npmjs.org/browse/keyword/karma-launcher</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    browsers: [<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;...&apos;</span>],</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// Continuous Integration mode</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// if true, Karma captures browsers, runs the tests and exits</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    singleRun: <span style=\"display: inline; line-height: 1.6; color: #ae81ff; background-color: transparent;\">false</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// Concurrency level</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// how many browser should be started simultaneous</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    concurrency: <span style=\"display: inline; line-height: 1.6; color: #ae81ff; background-color: transparent;\">Infinity</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// Which plugins to enable</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    plugins: []</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;</div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7B80;&#x5355;&#x7684;&#x89E3;&#x91CA;&#x76EE;&#x524D;&#x7528;&#x5230;&#x7684;&#x9009;&#x9879;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">frameworks: &#x4F7F;&#x7528;&#x5230;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x6240;&#x6709;&#x4F7F;&#x7528;&#x5230;&#x7684;&#xFF0C;&#x8981;&#x5728;&#x4E0B;&#x9762;plugins&#x4E2D;&#x5217;&#x660E;&#x3002;&#x6BD4;&#x5982;&#xFF1A;frameworks&#x4E2D;&#x5305;&#x542B;mocha&#xFF0C;&#x5219;plugins&#x4E0B;&#x5C31;&#x8981;&#x5305;&#x542B;karma-mocha</li><li style=\"line-height: 1.6;\">basePath, files, exclude: &#x8FD9;&#x4E09;&#x4E2A;&#x6307;&#x660E;&#x4E86;karma&#x8981;&#x52A0;&#x8F7D;&#x7684;JS&#x6587;&#x4EF6; <br><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">basePath&#xFF1A;&#x57FA;&#x7840;&#x76EE;&#x5F55;&#xFF0C;&#x4F1A;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x5230;files&#xFF0C;exclude&#x6307;&#x5B9A;&#x7684;&#x8DEF;&#x5F84;&#x524D;&#x9762;</li><li style=\"line-height: 1.6;\">files&#xFF1A;&#x52A0;&#x8F7D;&#x6587;&#x4EF6;&#xFF0C;&#x652F;&#x6301;&#x901A;&#x914D;&#x7B26;&#x548C;&#x6B63;&#x5219;&#x5F0F;&#xFF0C;&#x901A;&#x8FC7;&#x5927;&#x62EC;&#x53F7;&#x8FD8;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x914D;&#x7F6E;&#x9009;&#x9879;&#x3002;&#x901A;&#x914D;&#x7B26;&#x2019;**&#x2019;&#x8868;&#x793A;&#x6240;&#x6709;&#x76EE;&#x5F55;&#xFF0C;&#x2019;*&#x2019;&#x8868;&#x793A;&#x6240;&#x6709;&#x6587;&#x4EF6;&#xFF0C;&#x2019;**/*&#x2019;&#x8868;&#x793A;&#x5176;&#x4E0B;&#x6240;&#x6709;&#x76EE;&#x5F55;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x3002;</li><li style=\"line-height: 1.6;\">exclude: &#x53EF;&#x4EE5;&#x5254;&#x9664;files&#x4E2D;&#x4E0D;&#x60F3;&#x8981;&#x7684;&#x6587;&#x4EF6;</li></ul></li><li style=\"line-height: 1.6;\">browsers&#xFF1A;&#x4F7F;&#x7528;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x8981;headless&#x6D4B;&#x8BD5;&#x5219;&#x53EF;&#x7528;PhantomJS</li></ul><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">karma with ES6</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x56E0;&#x4E3A;PhantomJS&#x4E0D;&#x652F;&#x6301;ES6&#x8BED;&#x6CD5;(&#x7F51;&#x4E0A;&#x8BF4;&#xFF0C;PhantomJS&#x751A;&#x81F3;&#x5BF9;ES5&#x7684;&#x652F;&#x6301;&#x90FD;&#x4E0D;&#x662F;&#x5F88;&#x597D;)&#xFF0C;&#x6240;&#x4EE5;karma&#x8981;&#x6D4B;&#x8BD5;&#x5305;&#x542B;ES6&#x8BED;&#x6CD5;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x4E00;&#x756A;&#x914D;&#x7F6E;&#x3002;&#x7F51;&#x4E0A;&#x76F8;&#x5173;&#x7684;&#x5E16;&#x5B50;&#x5F88;&#x591A;&#xFF0C;&#x5217;&#x4E3E;&#x5982;&#x4E0B;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"http://radify.io/blog/announcing-karma-es6-shim/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Testing ES6 with Karma, RequireJS, and Angular</a>  - karma-es6-shim </li><li style=\"line-height: 1.6;\"><a href=\"https://www.barbarianmeetscoding.com/blog/2015/11/16/how-to-start-writing-your-angular-js-tests-in-es6/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How to Start Writing Your AngularJS Tests in ES6</a> - karma-babel-preprocessor</li><li style=\"line-height: 1.6;\"><a href=\"http://www.syntaxsuccess.com/viewarticle/writing-jasmine-unit-tests-in-es6\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Writing Jasmine Unit Tests In ES6</a> - webpack</li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x603B;&#x7684;&#x6765;&#x8BF4;&#xFF0C;&#x6709;&#x8FD9;&#x4E48;&#x51E0;&#x79CD;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">karma-es6-shim</li><li style=\"line-height: 1.6;\">karma-babel-preprocessor</li><li style=\"line-height: 1.6;\">webpack</li><li style=\"line-height: 1.6;\">SlimerJS <br>&#x524D;&#x4E09;&#x79CD;&#x6709;&#x70B9;&#x590D;&#x6742;&#xFF0C;&#x76EE;&#x524D;&#x7684;&#x6211;&#x7684;&#x6280;&#x672F;&#x6808;&#x8FD8;&#x65E0;&#x6CD5;&#x7406;&#x89E3;&#x3002;&#x6700;&#x7EC8;&#x9009;&#x62E9;&#x6700;&#x7B80;&#x5355;&#x7684;SlimerJS&#x3002;&#x5728;Linux&#x4E0A;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;Xvfb&#x505A;&#x5230;headless&#x6D4B;&#x8BD5;&#xFF0C;Windows&#x4E0A;&#x5C31;&#x8FD9;&#x6837;&#x5427;&#xFF0C;&#x8DF3;&#x4E2A;&#x7A97;&#x53E3;&#x4E5F;&#x4E0D;&#x662F;&#x4EC0;&#x4E48;&#x5927;&#x4E8B;&#x3002;</li></ul><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Debug karma test using Chrome</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E2A;&#x5728;&#x521D;&#x5B66;&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x662F;&#x5F88;&#x91CD;&#x8981;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x5DE5;&#x5177;&#xFF0C;&#x6050;&#x6015;&#x6211;&#x4E5F;&#x8DF3;&#x4E0D;&#x51FA;&#x81EA;&#x5DF1;&#x7ED9;&#x81EA;&#x5DF1;&#x6316;&#x7684;&#x5927;&#x5751;&#x3002; <br>&#x53C2;&#x8003;&#x94FE;&#x63A5;&#xFF1A;<a href=\"https://glebbahmutov.com/blog/debugging-karma-unit-tests/index.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Debugging Karma Unit Tests</a> <br>&#x6309;&#x7167;&#x4E0A;&#x9762;&#x7684;&#x6B65;&#x9AA4;&#x6253;&#x5F00;&#x8C03;&#x8BD5;&#x9875;&#x9762;&#x548C;Chrome Dev Tool&#x9875;&#x9762;&#xFF0C;&#x5237;&#x65B0;&#x9875;&#x9762;&#x5373;&#x53EF;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x4EE3;&#x7801;&#x5E76;&#x89E6;&#x53D1;&#x65AD;&#x70B9;&#x3002; <br>&#x5C06;&#x547D;&#x4EE4;&#x884C;&#x5199;&#x5165;package.json&#xFF0C;&#x4EE5;&#x540E;&#x8C03;&#x7528;npm&#x5C31;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x6253;&#x5F00;&#x8BE5;&#x8C03;&#x8BD5;&#x5DE5;&#x5177;&#x3002;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">...</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&quot;scripts&quot;</span>: &#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&quot;start&quot;</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&quot;node ./bin/www&quot;</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&quot;karma-debug&quot;</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&quot;cd public/js &amp;&amp; karma start --browsers=Chrome --single-run=false --debug&quot;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  ...</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;</div></code></pre><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 34.4px; margin: 1.2em 0 .6em 0; text-align: start;\">ngMock</h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">ngMock&#x4E2D;&#x4E24;&#x4E2A;&#x6700;&#x91CD;&#x8981;&#x7684;&#x5173;&#x952E;&#x8BCD;&#x5C31;&#x662F;&#xFF1A;module, inject&#x3002;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x8FD9;&#x4E2A;&#x4EBA;&#x7684;&#x535A;&#x5BA2;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"http://www.bradoncode.com/blog/2015/05/27/ngmock-fundamentals-angularjs-testing-inject/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">ngMock Fundamentals for AngularJS - Understanding Inject</a></li><li style=\"line-height: 1.6;\"><a href=\"http://www.bradoncode.com/blog/2015/05/24/ngmock-fundamentals-angularjs-unit-testing/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">ngMock Fundamentals for AngularJS Unit Testing - Understanding Module</a></li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">ngMock&#x901A;&#x8FC7;module&#x52A0;&#x8F7D;&#x5DF2;&#x7ECF;&#x5B9A;&#x4E49;&#x4E86;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x6216;&#x8005;&#x5B9A;&#x4E49;&#x533F;&#x540D;module&#x5E76;&#x63D0;&#x4F9B;&#x65B0;&#x7684;service&#xFF0C;&#x6216;&#x8005;&#x590D;&#x5199;&#x5DF2;&#x5B58;&#x5728;&#x7684;service&#x3002;module&#x53EA;&#x662F;&#x5C06;&#x540D;&#x5B57;&#xFF0C;&#x4EE5;&#x53CA;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x5B58;&#x5165;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x3002;inject&#x5C06;&#x771F;&#x6B63;&#x7684;&#x52A0;&#x8F7D;&#x6240;&#x6709;module&#x63D0;&#x4F9B;&#x7684;service&#xFF0C;&#x5E76;&#x89E3;&#x51B3;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x5C06;&#x76F8;&#x5E94;&#x7684;service&#x5BFC;&#x51FA;&#x5230;test case&#x4E2D;&#x4F7F;&#x7528;&#x3002;&#x5176;&#x5B9E;ngMock&#x4E5F;&#x5C31;&#x662F;&#x505A;&#x4E86;&#x8FD9;&#x4E24;&#x4EF6;&#x4E8B;&#x60C5;&#x3002; <br>&#x4E0B;&#x9762;&#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#x4E00;&#x4E9B;&#x6709;&#x52A9;&#x4E8E;&#x7406;&#x89E3;&#x7684;&#x77E5;&#x8BC6;&#x70B9;&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">angular.mock.module</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">module&#x51FD;&#x6570;&#x7684;&#x539F;&#x578B;&#x662F;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">angular.mock.module(alias, obj, func)</code> <br>module&#x63A5;&#x53D7;&#x4E09;&#x79CD;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x6BCF;&#x4E00;&#x79CD;&#x90FD;&#x53EF;&#x4EE5;&#x5355;&#x72EC;&#x4F7F;&#x7528;&#xFF0C;&#x7528;&#x6765;&#x5B9A;&#x4E49;&#x6216;&#x52A0;&#x8F7D;&#x5BF9;&#x5E94;&#x6A21;&#x5757;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">alias: &#x662F;module&#x540D;&#x5B57;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x5728;&#x5F85;&#x6D4B;&#x4EE3;&#x7801;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x5728;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;</li><li style=\"line-height: 1.6;\">obj: &#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x5B57;&#x5178;&#x7ED3;&#x6784;&#xFF0C;&#x4ED6;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x533F;&#x540D;module&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6210;&#x5458;&#x4F1A;&#x88AB;&#x5B9A;&#x4E49;&#x6210;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">$provide.value()</code></li><li style=\"line-height: 1.6;\">function: &#x540C;&#x6837;&#x662F;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x533F;&#x540D;module&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;function&#x53EF;&#x4EE5;&#x7528;$provide&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x6765;&#x5B9A;&#x4E49;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;service&#x3002;</li></ul><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">function() vs Object</strong></p><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">The examples we used were similar, so what&#x2019;s the key difference between the function() and Object form? As the Object type gets added as a $provider.value, it is therefore restricted to the capabilities of the value service, most importantly that a value service cannot be injected with other services.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5173;&#x4E8E;$provide&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;<a href=\"https://docs.angularjs.org/api/auto/service/\\%24provide\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Angular&#x5B98;&#x65B9;&#x6587;&#x6863;</a></p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">The <strong style=\"font-weight: bold; line-height: 1.6;\"><span style=\"line-height: 1.6;\">$</span>provide</strong> service has a number of methods for registering components with the <strong style=\"font-weight: bold; line-height: 1.6;\"><span style=\"line-height: 1.6;\">$</span>injector</strong>. Many of these functions are also exposed on angular.Module.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x4E0B;&#x9762;&#x7684;&#x8FD9;&#x4E9B;service</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">provider</strong>(name, provider) - registers a service provider with the <span style=\"line-height: 1.6;\">$</span>injector <br><strong style=\"font-weight: bold; line-height: 1.6;\">constant</strong>(name, obj) - registers a value/object that can be accessed by providers and services. <br><strong style=\"font-weight: bold; line-height: 1.6;\">value</strong>(name, obj) - registers a value/object that can only be accessed by services, not providers. <br><strong style=\"font-weight: bold; line-height: 1.6;\">factory</strong>(name, fn) - registers a service factory function that will be wrapped in a service provider object, whose <span style=\"line-height: 1.6;\">$</span>get property will contain the given factory function. <br><strong style=\"font-weight: bold; line-height: 1.6;\">service</strong>(name, Fn) - registers a constructor function that will be wrapped in a service provider object, whose <span style=\"line-height: 1.6;\">$</span>get property will instantiate a new object using the given constructor function. <br><strong style=\"font-weight: bold; line-height: 1.6;\">decorator</strong>(name, decorFn) - registers a decorator function that will be able to modify or replace the implementation of another service.</p></blockquote><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">angular.mock.inject</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><span style=\"line-height: 1.6;\">$</span>inject&#x662F;ngMock&#x7684;&#x6838;&#x5FC3;&#xFF0C;&#x770B;&#x770B;&#x5B98;&#x65B9;&#x7684;&#x5B9A;&#x4E49;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">The inject function wraps a function into an injectable function. The inject() creates new instance of $injector per test, which is then used for resolving references.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">inject&#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;injector&#xFF0C;&#x90A3;injector&#x53C8;&#x662F;&#x4EC0;&#x4E48;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><span style=\"line-height: 1.6;\">$</span>injector is used to retrieve object instances as defined by provider, instantiate types, invoke methods, and load modules.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><span style=\"line-height: 1.6;\">$</span>injector&#x4E5F;&#x5C31;&#x662F;AngularJS&#x7684;&#x6838;&#x5FC3;&#x3002;&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x6240;&#x8C13;&#x7684;&#x201C;DI&#x201D; (Dependency Injection)&#x6A21;&#x5F0F;&#x3002;Angular&#x7684;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x901A;&#x8FC7;<span style=\"line-height: 1.6;\">$</span>injector&#x6765;&#x83B7;&#x53D6;&#x5BF9;&#x5E94;service&#x7684;reference&#x3002; <br>&#x6211;&#x4EEC;&#x901A;&#x5E38;&#x5C06;inject&#x653E;&#x5728;beforeEach&#x91CC;&#xFF0C;&#x8FD9;&#x6837;inject&#x5C31;&#x4E3A;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;injector&#xFF0C;&#x4E3A;&#x8FD9;&#x4E2A;injector&#x51C6;&#x5907;&#x597D;&#x6240;&#x6709;&#x7684;service&#xFF0C;&#x5E76;&#x80FD;&#x901A;&#x8FC7;&#x53C2;&#x6570;&#x5C06;&#x4EFB;&#x610F;&#x5DF2;&#x6709;&#x7684;service&#x5BFC;&#x51FA;&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Test controllers</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E86;&#x89E3;&#x4E86;&#x4E0A;&#x9762;&#x7684;&#x4E24;&#x4E2A;&#x91CD;&#x8981;&#x7EC4;&#x4EF6;&#x4E4B;&#x540E;&#xFF0C;&#x9488;&#x5BF9;&#x4E0D;&#x540C;&#x7684;&#x6D4B;&#x8BD5;&#x7EC4;&#x4EF6;&#x5C31;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x4E86;&#x3002; <br>&#x76F4;&#x63A5;&#x4E0A;&#x4EE3;&#x7801;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">describe(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;main controller&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">var</span> $controller</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">var</span> mainCtrl</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  beforeEach(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;set up module&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">module</span>(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">$provide</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      $provide.service(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;MockDataService&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">const</span> service = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">this</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        service.data = <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;test data&apos;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">module</span>(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;MainModule&apos;</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;);</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  beforeEach(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;set up controller&apos;</span>, inject(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">_$controller_, MockDataService</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    $controller = _$controller_</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    mainCtrl = $controller(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;MainController&apos;</span>, &#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">          <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">DataService</span>: MockDataService</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;))</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  it(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;should assemble print page URL correctly&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    mainCtrl.getData().should.equal(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;test data&apos;</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;);</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;);</div></div></div></div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x91CC;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5176;&#x5B9E;&#x524D;&#x6587;&#x4E5F;&#x90FD;&#x6709;&#x63D0;&#x53CA;&#x3002;</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x7B2C;&#x4E00;&#x4E2A;module&#x4E2D;&#x901A;&#x8FC7;<span style=\"line-height: 1.6;\">$</span>provide&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5047;&#x7684;service&#xFF0C;&#x8FD9;&#x4E2A;service&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5176;&#x540D;&#x5B57;&#x88AB;inject&#x3002;</li><li style=\"line-height: 1.6;\">inject&#x4E2D;&#x901A;&#x8FC7;_<span style=\"line-height: 1.6;\">$</span>controller_&#x6765;&#x5BFC;&#x51FA;controller&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x3002;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x6784;&#x9020;&#x51FD;&#x6570;&#x6765;&#x6784;&#x9020;&#x76F8;&#x5E94;&#x7684;&#x5F85;&#x6D4B;controller&#xFF0C;&#x5E76;&#x4F20;&#x5165;&#x5047;&#x7684;service&#x8FBE;&#x5230;mock&#x7684;&#x76EE;&#x7684;&#x3002;</li></ol><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Test services</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4ECD;&#x7136;&#x76F4;&#x63A5;&#x4E0A;&#x4EE3;&#x7801;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">angular.module(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;PrinterData&apos;</span>, [])</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">.config([<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;$locationProvider&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">$locationProvider</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  $locationProvider.html5Mode(<span style=\"display: inline; line-height: 1.6; color: #ae81ff; background-color: transparent;\">true</span>);</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;]);</div></code></pre><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">describe(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;printer data service&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">var</span> $httpBackend</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">var</span> PrinterDataService</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  beforeEach(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">)</span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">module</span>(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">$provide</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      $provide.provider(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;$location&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">const</span> provider = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">this</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">const</span> location = &#123;&#125;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        location.search = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">)</span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">          <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">return</span> &#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">            <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">id</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;test id&apos;</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">          &#125;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        &#125;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        provider.html5Mode = sinon.stub()</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        provider.$get = sinon.stub().returns(location)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;);</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  beforeEach(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">module</span>(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;Data&apos;</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    inject(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">$injector</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      $httpBackend = $injector.get(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;$httpBackend&apos;</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      DataService = $injector.get(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;DataService&apos;</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;);</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  it(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;should update if succeeds&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">done</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    $httpBackend.whenGET(<span style=\"display: inline; line-height: 1.6; color: #ae81ff; background-color: transparent;\">/.*/</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      .respond(&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">status</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;ready&apos;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    DataService.getStatus().then(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">data</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      data.should.deepEqual(&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">status</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;ready&apos;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      done()</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;).catch(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">err</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      should.not.exist(err)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    $httpBackend.flush();</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;);</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;)</div></div></div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E0B;&#x9762;&#x7F57;&#x5217;&#x4E00;&#x4E9B;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x4E2D;&#x78B0;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;&#x4EE5;&#x53CA;&#x81EA;&#x5DF1;&#x7684;&#x4E00;&#x4E9B;&#x7406;&#x89E3;&#x3002;</p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x4F7F;&#x7528;<span style=\"line-height: 1.6;\">$</span>injector</h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6211;&#x4EEC;&#x8BF4;&#x8FC7;inject&#x51FD;&#x6570;&#x5C31;&#x662F;&#x7528;&#x6765;&#x521B;&#x5EFA;<span style=\"line-height: 1.6;\">$</span>injector&#xFF0C;&#x6240;&#x4EE5;<span style=\"line-height: 1.6;\">$</span>injector&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x88AB;&#x5BFC;&#x51FA;&#x4F7F;&#x7528;&#x7684;&#x3002;&#x8FD9;&#x65F6;&#x9700;&#x8981;&#x4EC0;&#x4E48;service&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8C03;&#x7528;<span style=\"line-height: 1.6;\">$</span>injector.get&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x76F4;&#x63A5;&#x901A;&#x8FC7;&#x53C2;&#x6570;&#x6765;inject&#x5462;&#xFF1F;&#x5F53;&#x7136;&#x662F;&#x56E0;&#x4E3A;&#x53C2;&#x6570;&#x592A;&#x957F;&#x4E86;&#xFF0C;&#x4E0D;&#x597D;&#x770B;&#x3002;&#x3002;&#x3002;</p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">mock <span style=\"line-height: 1.6;\">$</span>http</h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E3A;&#x4E86;&#x6D4B;&#x8BD5;&#x7A33;&#x5B9A;&#x6027;&#xFF0C;&#x6211;&#x4EEC;&#x5728;unit test&#x4E2D;&#x5E76;&#x4E0D;&#x771F;&#x6B63;&#x7684;&#x8BBF;&#x95EE;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x800C;&#x901A;&#x5E38;&#x91C7;&#x7528;&#x5047;&#x7684;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;&#x6765;mock&#x3002;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x7528;&#x5230;<span style=\"line-height: 1.6;\">$</span>httpBackend service&#x3002;&#x90A3;&#x4E48;<span style=\"line-height: 1.6;\">$</span>http&#x548C;<span style=\"line-height: 1.6;\">$</span>httpBackend&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">HTTP backend used by the service that delegates to XMLHttpRequest object or JSONP and deals with browser incompatibilities. <br>You should never need to use this service directly, instead use the higher-level abstractions: <span style=\"line-height: 1.6;\">$</span>http or <span style=\"line-height: 1.6;\">$</span>resource. <br>During testing this implementation is swapped with mock $httpBackend which can be trained with responses.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5177;&#x4F53;&#x505A;&#x6CD5;&#xFF0C;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x5DF2;&#x6709;&#xFF0C;&#x8282;&#x5F55;&#x5982;&#x4E0B;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">beforeEach(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">module</span>(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;Data&apos;</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    inject(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">$injector</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      $httpBackend = $injector.get(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;$httpBackend&apos;</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      DataService = $injector.get(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;DataService&apos;</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;);</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  it(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;should update if succeeds&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">done</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    $httpBackend.whenGET(<span style=\"display: inline; line-height: 1.6; color: #ae81ff; background-color: transparent;\">/.*/</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      .respond(&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">status</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;ready&apos;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    DataService.getStatus().then(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">data</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      data.should.deepEqual(&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">status</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;ready&apos;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      done()</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;).catch(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">err</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      should.not.exist(err)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    $httpBackend.flush();</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;);</div></div></div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x901A;&#x8FC7;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">$httpBackend.wheGET(...).respond(...)</code>&#x6765;&#x8BBE;&#x7F6E;mock response&#x3002;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">whenGET</code>&#x8FD8;&#x652F;&#x6301;&#x6B63;&#x5219;&#x5F0F;&#x3002; <br>&#x8C03;&#x7528;&#x5B8C;&#x8BF7;&#x6C42;&#x51FD;&#x6570;&#x540E;&#x8981;&#x8BB0;&#x5F97;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">$httpBackend.flush()</code>&#x5C06;&#x8BF7;&#x6C42;&#x771F;&#x6B63;&#x7684;&#x53D1;&#x51FA;&#x3002;&#x5426;&#x5219;&#x8BF7;&#x6C42;&#x5E76;&#x4E0D;&#x4F1A;&#x53D1;&#x51FA;&#xFF0C;&#x76F4;&#x5230;&#x8C03;&#x7528;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">flush()</code>&#x51FD;&#x6570;&#xFF0C;&#x6216;&#x8005;&#x6D4B;&#x8BD5;&#x8D85;&#x65F6;&#x5931;&#x8D25;&#x3002;</p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x5982;&#x4F55;mock <span style=\"line-height: 1.6;\">$</span>location &amp; <span style=\"line-height: 1.6;\">$</span>locationProvider</h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5F88;&#x60ED;&#x6127;&#x7684;&#x8BF4;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E0A;&#x6211;&#x82B1;&#x4E86;&#x5F88;&#x4E45;&#x5F88;&#x4E45;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x641C;&#x7D22;&#x4E86;&#x5927;&#x91CF;&#x7684;google&#x7F51;&#x9875;&#xFF0C;&#x6700;&#x540E;&#x8FD8;&#x662F;&#x4F9D;&#x9760;chrome&#x8FFD;&#x8E2A;angular&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x624D;&#x53D1;&#x73B0;&#x539F;&#x6765;&#x662F;&#x81EA;&#x5DF1;&#x7ED9;&#x81EA;&#x5DF1;&#x6316;&#x7684;&#x5751;&#xFF0C;&#x5BF9;service, factory&#x548C;provider&#x7406;&#x89E3;&#x4E0D;&#x900F;&#x5F7B;&#x3002; <br>&#x9996;&#x5148;&#x6765;&#x5C31;&#x4E8B;&#x8BBA;&#x4E8B;&#xFF0C;&#x8BF4;&#x4E00;&#x4E0B;&#x5230;&#x5E95;&#x600E;&#x4E48;&#x5B8C;&#x6210;&#x6211;&#x7684;&#x8FD9;&#x4E2A;&#x6D4B;&#x8BD5;&#x3002;</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x56E0;&#x4E3A;&#x6211;&#x8981;&#x6D4B;&#x8BD5;DataService&#xFF0C;&#x800C;DataService&#x5B9A;&#x4E49;&#x5728;Data moduleDataService&#x8C03;&#x7528;&#x4E86;<span style=\"line-height: 1.6;\">$</span>location service&#x3002;&#x9700;&#x8981;&#x5C06;&#x4E4B;mock&#x6389;&#x3002;&#x6700;&#x7B80;&#x5355;&#x7684;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x901A;&#x8FC7;inject&#x6765;&#x83B7;&#x5F97;<span style=\"line-height: 1.6;\">$</span>location service reference&#x3002;&#x5E76;&#x901A;&#x8FC7;sinon.stub&#x6765;&#x8BBE;&#x7F6E;&#x9700;&#x8981;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x3002;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">inject(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> <span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">($injector, $location)</span> </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  sinon.stub($location, <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;search&apos;</span>).returns(&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    id: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;test id&apos;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  DataService = $injector.get(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;DataService&apos;</span>)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;)</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4F46;&#x662F;&#x6211;&#x5012;&#x9709;&#x50AC;&#x7684;&#xFF0C;&#x7ADF;&#x7136;&#x662F;&#x7528;<span style=\"line-height: 1.6;\">$</span>provide&#x505A;&#x4E86;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">module</span>(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">$provide</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  $provide.service(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;$location&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">const</span> location = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">this</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    location.search = sinon.stub().returns(&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">device_id</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;test id&apos;</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;)</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x6837;&#x5C31;&#x4F1A;&#x6709;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x5F53;ngMock&#x52A0;&#x8F7D;&#x8FD9;&#x4E2A;&#x6A21;&#x5757;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x5148;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;<span style=\"line-height: 1.6;\">$</span>locationProvider&#xFF0C;&#x8FD9;&#x5C31;&#x4F1A;&#x8986;&#x76D6;&#x5176;&#x81EA;&#x5E26;&#x7684;<span style=\"line-height: 1.6;\">$</span>locationProvider&#x3002;&#x800C;&#x5982;&#x4E0B;&#x7684;module.config&#x65B9;&#x6CD5;&#x4E2D;&#x5BF9;<span style=\"line-height: 1.6;\">$</span>locationProvider&#x7684;&#x64CD;&#x4F5C;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">angular.module(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;PrinterData&apos;</span>, [])</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">.config([<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;$locationProvider&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">($locationProvider)</span> </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  $locationProvider.html5Mode(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">true</span>);</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;]);</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x56E0;&#x4E3A;&#x65B0;&#x5B9A;&#x4E49;&#x7684;<span style=\"line-height: 1.6;\">$</span>locationProvider&#x4E2D;&#x6CA1;&#x6709;html5Mode&#x6210;&#x5458;&#x3002;&#x4E8E;&#x662F;&#x60F3;&#x4E86;&#x5404;&#x79CD;&#x529E;&#x6CD5;&#x6765;mock <span style=\"line-height: 1.6;\">$</span>locationProvider&#x3002;&#x7ED3;&#x679C;&#x56E0;&#x4E3A;&#x5BF9;service&#xFF0C;factory&#xFF0C;provider&#x7684;&#x7406;&#x89E3;&#x4E0D;&#x6B63;&#x786E;&#xFF0C;&#x90FD;&#x5931;&#x8D25;&#x4E86;&#x3002;&#x653E;&#x4E00;&#x6BB5;&#x9519;&#x8BEF;&#x7684;&#x4EE3;&#x7801;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">beforeEach(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">)</span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">module</span>(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">$provide</span>) </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    $provide.service(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;$locationProvider&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">const</span> location = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">this</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      location.html5Mode = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">)</span>&#123;&#125;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    $provide.factory(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;$location&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> (<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">) </span>&#123;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">const</span> locationProvider = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">this</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">      locationProvider.html5Mode = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">)</span>&#123;&#125;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;)</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7B2C;&#x4E00;&#x4E2A;&#x7528;<span style=\"line-height: 1.6;\">$</span>provide.service&#x4F1A;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;<span style=\"line-height: 1.6;\">$</span>locationProviderProvider <br>&#x7B2C;&#x4E8C;&#x4E2A;&#x7528;<span style=\"line-height: 1.6;\">$</span>provide.factory&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;<span style=\"line-height: 1.6;\">$</span>locationProvider&#xFF0C;&#x4F46;&#x662F;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#xFF0C;&#x6240;&#x4EE5;<span style=\"line-height: 1.6;\">$</span>location service&#x4E0D;&#x4F1A;&#x88AB;&#x5B9E;&#x4F8B;&#x5316;&#xFF0C;&#x4E5F;&#x5C31;&#x6CA1;&#x6709;<span style=\"line-height: 1.6;\">$</span>location service&#x4E86;&#x3002; <br>&#x5982;&#x679C;&#x60F3;&#x901A;&#x8FC7;mock <span style=\"line-height: 1.6;\">$</span>locationProvider&#x6765;mock <span style=\"line-height: 1.6;\">$</span>location service&#x7684;&#x8BDD;&#xFF0C;&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;&#x5E94;&#x5F53;&#x662F;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">$provide.provider(<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;$location&apos;</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> <span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">()</span> </span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">const</span> provider = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">this</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">const</span> location = &#123;&#125;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  location.search = <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">function</span> <span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">()</span></span>&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">return</span> &#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">       device_id: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;test id&apos;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">    &#125;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  &#125;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  provider.html5Mode = sinon.stub()</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  provider.$<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">get</span> = sinon.stub().returns(location)</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;)</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">mock&#x6389;provider.<span style=\"line-height: 1.6;\">$</span>get&#x51FD;&#x6570;&#xFF0C;&#x63D0;&#x4F9B;&#x5047;&#x7684;location&#x670D;&#x52A1;&#x3002;&#x5176;&#x5B9E;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x529E;&#x6CD5;&#xFF0C;&#x4F8B;&#x5982;&#x83B7;&#x5F97;<span style=\"line-height: 1.6;\">$</span>locationProvider&#x518D;&#x5BF9;<span style=\"line-height: 1.6;\">$</span>get&#x51FD;&#x6570;&#x8FDB;&#x884C;stub&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x3002;&#x6CA1;&#x6709;&#x518D;&#x4E00;&#x4E00;&#x5C1D;&#x8BD5;&#x4E86;&#x3002;&#x7406;&#x89E3;&#x4E86;&#x9519;&#x8BEF;&#x548C;&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x60F3;&#x518D;&#x53BB;&#x5B9E;&#x73B0;&#x5C31;&#x5F97;&#x5FC3;&#x5E94;&#x624B;&#x4E86;&#x3002;</p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x6D4B;&#x8BD5;.config/.run&#x5757;</h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Data module&#x6709;&#x4E00;&#x4E2A;.config&#x5757;&#xFF0C;&#x56E0;&#x4E3A;&#x6A21;&#x5757;&#x52A0;&#x8F7D;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x5148;&#x8FD0;&#x884C;&#x5176;.config&#x5757;&#xFF0C;&#x7136;&#x540E;&#x662F;.run&#x5757;&#x3002;&#x56E0;&#x5176;&#x7279;&#x6B8A;&#x6027;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5BF9;&#x5176;&#x4E2D;&#x4F7F;&#x7528;&#x5230;&#x7684;&#x670D;&#x52A1;&#x8FDB;&#x884C;mock&#x8981;&#x6CE8;&#x610F;&#x987A;&#x5E8F;&#x3002;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x8FD9;&#x4E2A;&#x94FE;&#x63A5;&#xFF1A;<a href=\"https://medium.com/@a_eife/testing-config-and-run-blocks-in-angularjs-1809bd52977e\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Testing config and run blocks in AngularJS <br>How to easily test an often neglected part of your application</a></p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x5982;&#x4F55;mock $interval</h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5728;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x5E38;&#x8981;&#x91C7;&#x7528;mock&#x7684;&#x624B;&#x6BB5;&#xFF0C;&#x800C;&#x4E0D;&#x771F;&#x6B63;&#x7684;&#x4F7F;&#x7528;&#x65F6;&#x95F4;&#x670D;&#x52A1;&#x3002;&#x5728;sinon&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;fake timer&#x6765;&#x53D6;&#x4EE3;JS&#x4E2D;&#x6807;&#x51C6;&#x7684;setTimeout&#x548C;setInterval&#x3002;&#x4E0D;&#x8FC7;&#x8FD9;&#x4E2A;&#x5728;Angular JS&#x4E2D;&#x5E76;&#x4E0D;&#x8D77;&#x4F5C;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;<span style=\"line-height: 1.6;\">$</span>interval&#x670D;&#x52A1;&#x7684;&#x8BDD;&#x3002; <br>&#x56E0;&#x4E3A;&#x5728;&#x5BF9;Angular JS&#x505A;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#xFF0C;<span style=\"line-height: 1.6;\">$</span>interval&#x5E76;&#x4E0D;&#x4F1A;&#x8C03;&#x7528;setInterval&#x3002;&#x539F;&#x56E0;&#x662F;&#x8FD9;&#x91CC;&#x7684;<span style=\"line-height: 1.6;\">$</span>interval&#x5176;&#x5B9E;&#x662F;ngMock&#x4E2D;&#x7684;<span style=\"line-height: 1.6;\">$</span>interval&#x3002;&#x6B64;&#x65F6;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">$interval.flush(ms)</code>&#x6765;&#x5C06;&#x65F6;&#x949F;&#x63A8;&#x8FDB;&#x82E5;&#x5E72;&#x65F6;&#x95F4;&#x3002;&#x5F53;&#x7136;&#x5982;&#x679C;&#x613F;&#x610F;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;sinon&#x6765;mock&#x4ECE;<span style=\"line-height: 1.6;\">$</span>injector&#x4E2D;get&#x51FA;&#x6765;&#x7684;<span style=\"line-height: 1.6;\">$</span>interval service&#x3002;<span style=\"line-height: 1.6;\">$</span>timeout service&#x4E5F;&#x7C7B;&#x4F3C;&#xFF0C;&#x6709;&#x540C;&#x6837;&#x7684;&#x65B9;&#x6CD5;&#x5BF9;&#x4ED8;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x3002;</p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Promise not resolve</h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5728;Angular JS&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5F80;&#x5F80;&#x8C03;&#x7528;<span style=\"line-height: 1.6;\">$</span>q service&#x6765;&#x4F7F;&#x7528;Promise&#xFF0C;&#x800C;<span style=\"line-height: 1.6;\">$</span>q.defer().promise&#x53EA;&#x5728;<span style=\"line-height: 1.6;\">$</span>scope&#x7684;digest cycle&#x624D;&#x4F1A;&#x5224;&#x5B9A;resolve&#x8FD8;&#x662F;reject&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x89E6;&#x53D1;<span style=\"line-height: 1.6;\">$</span>q&#x4EA7;&#x751F;&#x7684;promise&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x8C03;&#x7528;&#x5BF9;&#x5E94;&#x7684;<span style=\"line-height: 1.6;\">$</span>scope.<span style=\"line-height: 1.6;\">$</span>apply()&#x6216;&#x8005;<span style=\"line-height: 1.6;\">$</span>scope.<span style=\"line-height: 1.6;\">$</span>digest()&#x3002;stack overflow&#x4E2D;&#x4E5F;&#x6709;&#x5927;&#x628A;&#x7C7B;&#x4F3C;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x7B54;&#x3002;&#x5177;&#x4F53;&#x4E5F;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#xFF0C;&#x8BB2;&#x5F97;&#x5F88;&#x900F;&#x5F7B;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"http://www.bradoncode.com/blog/2015/07/13/unit-test-promises-angualrjs-q/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Unit Testing with $q Promises in AngularJS</a></li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5728;Angular JS&#x4E2D;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6807;&#x51C6;&#x7684;Promise&#xFF0C;&#x4F8B;&#x5982;: <code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">var promise = new Promise(resolve, reject)</code>&#x3002;&#x4F46;&#x662F;&#x8C8C;&#x4F3C;&#xFF0C;&#x6807;&#x51C6;&#x7684;Promise&#x548C;\\q&#x517C;&#x5BB9;&#x7684;&#x5E76;&#x4E0D;&#x5F88;&#x597D;&#xFF0C;&#x4E0B;&#x9762;&#x7684;code&#x5E76;&#x4E0D;&#x4F1A;&#x5DE5;&#x4F5C;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">var</span> promise = <span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">$q</span>.all([promise1, promise2])</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">$scope</span>.<span style=\"display: inline; line-height: 1.6; color: #f8f8f2; background-color: transparent;\">$apply</span>()</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">promise&#x5E76;&#x4E0D;&#x4F1A;&#x5728;promise1&#x548C;promise2&#x8FD4;&#x56DE;&#x4E4B;&#x540E;&#x8FD4;&#x56DE;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x4ED6;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x4F1A;&#x8FD4;&#x56DE;&#xFF0C;&#x76F4;&#x5230;&#x6D4B;&#x8BD5;&#x8D85;&#x65F6;&#x5931;&#x8D25;&#x3002;</p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x201C;Unexpected request: GET &#x2026;/.html&#x201D; on Karma tests</h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x662F;Yaakov&#x5728;&#x89C6;&#x9891;&#x4E2D;&#x63D0;&#x5230;&#x7684;&#x9700;&#x8981;&#x4F7F;&#x7528;<span style=\"line-height: 1.6;\">$</span>templateCache&#x7684;&#x60C5;&#x5F62;&#x3002;Yaakov&#x63D0;&#x5230;&#x7528;karma&#x662F;&#x89E3;&#x51B3;&#x8BE5;&#x95EE;&#x9898;&#x6700;&#x597D;&#x7684;&#x529E;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;&#x56E0;&#x4E3A;&#x89C6;&#x9891;&#x5E76;&#x4E0D;&#x6D89;&#x53CA;&#x4ECB;&#x7ECD;karma&#xFF0C;&#x6240;&#x4EE5;&#x5E76;&#x6CA1;&#x6709;&#x8BF4;&#x5E94;&#x8BE5;&#x600E;&#x4E48;&#x505A;&#x3002; <br>&#x5F53;&#x6211;&#x4EEC;&#x7684;karma test&#x52A0;&#x8F7D;&#x4E86;route.js&#xFF0C;&#x5E76;&#x5728;&#x5176;&#x4E2D;&#x5B9A;&#x4E49;&#x4E86;component&#xFF0C;&#x5219;&#x6D4B;&#x8BD5;&#x5728;&#x5B9E;&#x4F8B;&#x5316;&#x8BE5;Angular component&#x7684;&#x65F6;&#x5019;&#x56DE;&#x53BB;&#x7528;<span style=\"line-height: 1.6;\">$</span>http service&#x6765;GET&#x8BE5;template html&#x6587;&#x4EF6;&#xFF0C;&#x4E8E;&#x662F;&#x4EA7;&#x751F;&#x4E86;&#x8BE5;unexpected request&#x9519;&#x8BEF;&#x3002;Yaakov&#x5728;&#x6559;&#x7A0B;&#x4E2D;&#x7684;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#x662F;&#xFF0C;&#x901A;&#x8FC7;&#x4E00;&#x6B21;&#x771F;&#x6B63;&#x7684;AJAX&#x4ECE;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x8BF7;&#x6C42;&#x8BE5;html&#xFF0C;&#x5E76;&#x5C06;&#x4E4B;&#x5B58;&#x5165;<span style=\"line-height: 1.6;\">$</span>templateCache&#x4E2D;&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x4E0D;&#x4F1A;&#x518D;&#x6709;&#x771F;&#x6B63;&#x7684;GET AJAX&#x4EA7;&#x751F;&#x4E86;&#x3002;&#x5176;&#x5B9E;&#x8FD9;&#x4E00;&#x6BB5;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x914D;&#x7F6E;karma&#x6765;&#x5B9E;&#x73B0;&#x3002;&#x5177;&#x4F53;&#x505A;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x5B89;&#x88C5;ng-html2js&#xFF0C;karma-ng-html2js-preprocessor</li><li style=\"line-height: 1.6;\">&#x4F7F;&#x7528;ng-html2js&#x5C06;&#x5BF9;&#x5E94;&#x7684;template html&#x8F6C;&#x6210;js&#x6A21;&#x5757;&#xFF0C;&#x5E76;&#x5728;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x4E2D;&#x5F15;&#x5165;&#x3002;</li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x770B;&#x4E0B;&#x9762;&#x5177;&#x4F53;&#x4EE3;&#x7801; <br>karma.conf.js</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// list of files / patterns to load in the browser</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">files</span>: [</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;../html/templates/*.html&apos;</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  ...</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">],</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// preprocess matching files before serving them to the browser</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #75715e; background-color: transparent;\">// available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">preprocessors</span>: &#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;../html/templates/home.template.html&apos;</span>: [<span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;ng-html2js&apos;</span>]</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><div style=\"line-height: 1.6;\"></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">ngHtml2JsPreprocessor</span>: &#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">moduleName</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;templates&apos;</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">stripPrefix</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;.*/&apos;</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">prependPrefix</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;/html/templates/&apos;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;,</div></div></div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">test.js</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">describe(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">function</span>()&#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  beforeEach(<span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">module</span>(&apos;templates&apos;))</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;)</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7279;&#x522B;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x5BF9;ng-html2js&#x7684;&#x914D;&#x7F6E;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; overflow-x: auto; background: #23241f; padding: 1.3em 2em;\"><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\"><span style=\"display: inline; line-height: 1.6; color: #f92672; background-color: transparent;\">ngHtml2JsPreprocessor</span>: &#123;</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  <span style=\"display: inline; line-height: 1.6; color: #66d9ef; background-color: transparent;\">moduleName</span>: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;templates&apos;</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  stripPrefix: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;.*/&apos;</span>,</div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">  prependPrefix: <span style=\"display: inline; line-height: 1.6; color: #e6db74; background-color: transparent;\">&apos;/html/templates/&apos;</span></div><div style=\"min-height: 1.5em; color: inherit; line-height: 1.6; background-color: transparent;\">&#125;,</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5F53;&#x6CA1;&#x6709;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">stripPrefix</code>&#x9009;&#x9879;&#x65F6;&#xFF0C;&#x901A;&#x8FC7;Chrome debug&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6240;&#x6709;&#x7684;template&#x90FD;&#x88AB;&#x8F6C;&#x5316;&#x6210;&#x4E86;js&#x6A21;&#x5757;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x6A21;&#x5757;&#x540D;&#x662F;&#x7C7B;&#x4F3C;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">c:\\path\\to\\template\\template.html</code>&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x800C;&#x6211;&#x5728;route&#x4E2D;&#x7684;&#x6307;&#x5B9A;&#x8DEF;&#x5F84;&#x662F;web&#x8DEF;&#x5F84;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">templateUrl: &apos;/html/templates/home.template.html&apos;</code>&#x3002;&#x5C31;&#x5BF9;&#x4E0D;&#x4E0A;&#x53F7;&#x4E86;&#x3002;&#x505A;&#x6CD5;&#x662F;&#x901A;&#x8FC7;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">stripPrefix</code>&#x5C06;&#x6240;&#x6709;&#x7684;&#x524D;&#x7F00;&#x5168;&#x90E8;&#x5265;&#x53BB;&#xFF0C;&#x7136;&#x540E;&#x7528;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">prependPrefix</code>&#x52A0;&#x4E0A;&#x9700;&#x8981;&#x7684;&#x524D;&#x7F00;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5DE5;&#x4F5C;&#x4E86;&#x3002;&#x7F51;&#x4E0A;&#x6709;&#x5F88;&#x591A;&#x5E16;&#x5B50;&#x8BA8;&#x8BBA;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;&#x5217;&#x4E24;&#x4E2A;&#x6709;&#x542F;&#x53D1;&#x6027;&#x7684;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"https://stackoverflow.com/questions/15214760/unit-testing-angularjs-directive-with-templateurl\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Unit Testing AngularJS directive with templateUrl</a></li><li style=\"line-height: 1.6;\"><a href=\"https://stackoverflow.com/questions/22869668/karma-unexpected-request-when-testing-angular-directive-even-with-ng-html2js\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Karma &#x2018;Unexpected Request&#x2019; when testing angular directive, even with ng-html2js</a></li></ul></div><center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">%23%20Angular%20JS%20-%20unit%20test%0A@%28myblog%29%5Bangular%2C%20unittest%5D%0A%u524D%u7AEF%u4EE3%u7801%u4E00%u76F4%u6CA1%u6709%u505Aunit%20testing%uFF0C%u4E5F%u4E0D%u77E5%u9053%u600E%u4E48%u505A%u3002%u5728Yaakov%20Chaikin%u7684%5BCoursera%u8BFE%u7A0B%5D%28https%3A//www.coursera.org/learn/single-page-web-apps-with-angularjs/home/week/5%29%u4E2D%uFF0C%u7B2C%u4E94%u7AE0%u6B63%u597D%u4ECB%u7ECD%u4E86%u76F8%u5173%u5185%u5BB9%u3002%u6240%u4EE5%u5C31%u987A%u4FBF%u5728%u81EA%u5DF1%u7684%u9879%u76EE%u4E2D%u5B9E%u8DF5%u4E86%u4E00%u628A%u3002%u65E0%u6570%u6B21%u7684%u5B9E%u8DF5%u8BC1%u660E%uFF0C%u770B%u5F97%u5934%u5934%u662F%u9053%uFF0C%u5199%u8D77%u6765%u5C31%u5230%u5904%u662F%u5751%u3002%u5C0F%u5C0F%u7684%u5185%u5BB9%uFF0C%u7740%u5B9E%u82B1%u4E86%u4E0D%u5C11%u65F6%u95F4%u3002%0A%0A%u9488%u5BF9%u524D%u7AEF%u7684%u4EE3%u7801%uFF0C%u7F51%u4E0A%u91C7%u7528%u7684%u6D4B%u8BD5%u6846%u67B6%u5927%u591A%u662Fkarma%20+%20jasmine%20+%20chai%u3002%u56E0%u4E3A%u6211%u4E4B%u524D%u5728%u540E%u7AEF%u4EE3%u7801%u7684%u6D4B%u8BD5%u4E2D%u591A%u91C7%u7528mocha%20+%20should%20+%20sinon%u3002%u6240%u4EE5%u672C%u6B21%u5B9E%u8DF5%uFF0C%u4ECD%u7136%u7231%u91C7%u7528mocha%u6846%u67B6%uFF0C%u6765%u642D%u914Dkarma%u4F7F%u7528%u3002%0A%0Akarma%u662F%u4E00%u4E2A%u81EA%u52A8%u5316%u6D4B%u8BD5%u6846%u67B6%u3002%u56E0%u5176%u4E30%u5BCC%u7684%u914D%u7F6E%u9009%u9879%uFF0C%u826F%u597D%u7684%u6269%u5C55%u6027%u80FD%uFF0C%u88AB%u5E7F%u6CDB%u5E94%u7528%uFF0C%u5C24%u5176%u662F%u5728%u524D%u7AEF%u3002%u56E0%u4E3A%u524D%u7AEF%u8981%u9488%u5BF9%u5404%u79CD%u7248%u672C%u7684%u6D4F%u89C8%u5668%uFF0C%u5404%u79CD%u6846%u67B6%uFF0C%u5982%u679C%u5168%u90E8%u9760%u624B%u52A8%u53BB%u9002%u914D%uFF0C%u57FA%u672C%u4E0D%u592A%u53EF%u80FD%u3002%u6240%u4EE5%u5927%u5BB6%u90FD%u7528karma%u4E86%u3002%0A%23%23%20karma%20setup%0A%u57FA%u672C%u914D%u7F6E%u53C2%u8003%5B%u524D%u7AEF%u5355%u5143%u6D4B%u8BD5%u4E4BKarma%u73AF%u5883%u642D%u5EFA%5D%28https%3A//segmentfault.com/a/1190000006895064%29%0A%0A%u914D%u7F6E%u6587%u4EF6%u7B80%u5355%u5982%u4E0B%uFF1A%0A%60%60%60javascript%0Amodule.exports%20%3D%20function%28config%29%20%7B%0A%20%20config.set%28%7B%0A%0A%20%20%20%20//%20base%20path%20that%20will%20be%20used%20to%20resolve%20all%20patterns%20%28eg.%20files%2C%20exclude%29%0A%20%20%20%20basePath%3A%20%27%27%2C%0A%0A%0A%20%20%20%20//%20frameworks%20to%20use%0A%20%20%20%20//%20available%20frameworks%3A%20https%3A//npmjs.org/browse/keyword/karma-adapter%0A%20%20%20%20frameworks%3A%20%5B...%5D%2C%0A%0A%0A%20%20%20%20//%20list%20of%20files%20/%20patterns%20to%20load%20in%20the%20browser%0A%20%20%20%20files%3A%20%5B%0A%20%20%20%20%20%20%27...%27%2C%0A%20%20%20%20%20%20%7Bpattern%3A%20%27...%27%7D%0A%20%20%20%20%5D%2C%0A%0A%0A%20%20%20%20//%20list%20of%20files%20to%20exclude%0A%20%20%20%20exclude%3A%20%5B%0A%20%20%20%20%5D%2C%0A%0A%0A%20%20%20%20//%20preprocess%20matching%20files%20before%20serving%20them%20to%20the%20browser%0A%20%20%20%20//%20available%20preprocessors%3A%20https%3A//npmjs.org/browse/keyword/karma-preprocessor%0A%20%20%20%20preprocessors%3A%20%7B%0A%20%20%20%20%7D%2C%0A%0A%0A%20%20%20%20//%20test%20results%20reporter%20to%20use%0A%20%20%20%20//%20possible%20values%3A%20%27dots%27%2C%20%27progress%27%0A%20%20%20%20//%20available%20reporters%3A%20https%3A//npmjs.org/browse/keyword/karma-reporter%0A%20%20%20%20reporters%3A%20%5B%27progress%27%5D%2C%0A%0A%0A%20%20%20%20//%20web%20server%20port%0A%20%20%20%20port%3A%209876%2C%0A%0A%0A%20%20%20%20//%20enable%20/%20disable%20colors%20in%20the%20output%20%28reporters%20and%20logs%29%0A%20%20%20%20colors%3A%20true%2C%0A%0A%0A%20%20%20%20//%20level%20of%20logging%0A%20%20%20%20//%20possible%20values%3A%20config.LOG_DISABLE%20%7C%7C%20config.LOG_ERROR%20%7C%7C%20config.LOG_WARN%20%7C%7C%20config.LOG_INFO%20%7C%7C%20config.LOG_DEBUG%0A%20%20%20%20logLevel%3A%20config.LOG_INFO%2C%0A%0A%0A%20%20%20%20//%20enable%20/%20disable%20watching%20file%20and%20executing%20tests%20whenever%20any%20file%20changes%0A%20%20%20%20autoWatch%3A%20true%2C%0A%0A%0A%20%20%20%20//%20start%20these%20browsers%0A%20%20%20%20//%20available%20browser%20launchers%3A%20https%3A//npmjs.org/browse/keyword/karma-launcher%0A%20%20%20%20browsers%3A%20%5B%27...%27%5D%2C%0A%0A%0A%20%20%20%20//%20Continuous%20Integration%20mode%0A%20%20%20%20//%20if%20true%2C%20Karma%20captures%20browsers%2C%20runs%20the%20tests%20and%20exits%0A%20%20%20%20singleRun%3A%20false%2C%0A%0A%20%20%20%20//%20Concurrency%20level%0A%20%20%20%20//%20how%20many%20browser%20should%20be%20started%20simultaneous%0A%20%20%20%20concurrency%3A%20Infinity%2C%0A%0A%20%20%20%20//%20Which%20plugins%20to%20enable%0A%20%20%20%20plugins%3A%20%5B%5D%0A%20%20%7D%29%0A%7D%20%0A%60%60%60%0A%0A%u7B80%u5355%u7684%u89E3%u91CA%u76EE%u524D%u7528%u5230%u7684%u9009%u9879%uFF1A%0A-%20frameworks%3A%20%u4F7F%u7528%u5230%u7684%u6846%u67B6%uFF0C%u6240%u6709%u4F7F%u7528%u5230%u7684%uFF0C%u8981%u5728%u4E0B%u9762plugins%u4E2D%u5217%u660E%u3002%u6BD4%u5982%uFF1Aframeworks%u4E2D%u5305%u542Bmocha%uFF0C%u5219plugins%u4E0B%u5C31%u8981%u5305%u542Bkarma-mocha%0A-%20basePath%2C%20files%2C%20exclude%3A%20%u8FD9%u4E09%u4E2A%u6307%u660E%u4E86karma%u8981%u52A0%u8F7D%u7684JS%u6587%u4EF6%0A%09-%20basePath%uFF1A%u57FA%u7840%u76EE%u5F55%uFF0C%u4F1A%u76F4%u63A5%u63D2%u5165%u5230files%uFF0Cexclude%u6307%u5B9A%u7684%u8DEF%u5F84%u524D%u9762%0A%09-%20files%uFF1A%u52A0%u8F7D%u6587%u4EF6%uFF0C%u652F%u6301%u901A%u914D%u7B26%u548C%u6B63%u5219%u5F0F%uFF0C%u901A%u8FC7%u5927%u62EC%u53F7%u8FD8%u53EF%u4EE5%u6DFB%u52A0%u914D%u7F6E%u9009%u9879%u3002%u901A%u914D%u7B26%27%5C*%5C*%27%u8868%u793A%u6240%u6709%u76EE%u5F55%uFF0C%27%5C*%27%u8868%u793A%u6240%u6709%u6587%u4EF6%uFF0C%27%5C*%5C*/*%27%u8868%u793A%u5176%u4E0B%u6240%u6709%u76EE%u5F55%u6240%u6709%u6587%u4EF6%u3002%0A%09-%20exclude%3A%20%u53EF%u4EE5%u5254%u9664files%u4E2D%u4E0D%u60F3%u8981%u7684%u6587%u4EF6%0A-%20browsers%uFF1A%u4F7F%u7528%u7684%u6D4F%u89C8%u5668%uFF0C%u5982%u679C%u60F3%u8981headless%u6D4B%u8BD5%u5219%u53EF%u7528PhantomJS%0A%0A%23%23%23%20karma%20with%20ES6%0A%u56E0%u4E3APhantomJS%u4E0D%u652F%u6301ES6%u8BED%u6CD5%28%u7F51%u4E0A%u8BF4%uFF0CPhantomJS%u751A%u81F3%u5BF9ES5%u7684%u652F%u6301%u90FD%u4E0D%u662F%u5F88%u597D%29%uFF0C%u6240%u4EE5karma%u8981%u6D4B%u8BD5%u5305%u542BES6%u8BED%u6CD5%u7684%u4EE3%u7801%uFF0C%u8FD8%u9700%u8981%u4E00%u756A%u914D%u7F6E%u3002%u7F51%u4E0A%u76F8%u5173%u7684%u5E16%u5B50%u5F88%u591A%uFF0C%u5217%u4E3E%u5982%u4E0B%uFF1A%0A-%20%5BTesting%20ES6%20with%20Karma%2C%20RequireJS%2C%20and%20Angular%5D%28http%3A//radify.io/blog/announcing-karma-es6-shim/%29%20%20-%20karma-es6-shim%20%0A-%20%5BHow%20to%20Start%20Writing%20Your%20AngularJS%20Tests%20in%20ES6%5D%28https%3A//www.barbarianmeetscoding.com/blog/2015/11/16/how-to-start-writing-your-angular-js-tests-in-es6/%29%20-%20karma-babel-preprocessor%0A-%20%5BWriting%20Jasmine%20Unit%20Tests%20In%20ES6%5D%28http%3A//www.syntaxsuccess.com/viewarticle/writing-jasmine-unit-tests-in-es6%29%20-%20webpack%0A%0A%u603B%u7684%u6765%u8BF4%uFF0C%u6709%u8FD9%u4E48%u51E0%u79CD%u89E3%u51B3%u65B9%u6848%uFF1A%0A-%20karma-es6-shim%0A-%20karma-babel-preprocessor%0A-%20webpack%0A-%20SlimerJS%0A%u524D%u4E09%u79CD%u6709%u70B9%u590D%u6742%uFF0C%u76EE%u524D%u7684%u6211%u7684%u6280%u672F%u6808%u8FD8%u65E0%u6CD5%u7406%u89E3%u3002%u6700%u7EC8%u9009%u62E9%u6700%u7B80%u5355%u7684SlimerJS%u3002%u5728Linux%u4E0A%u53EF%u4EE5%u901A%u8FC7Xvfb%u505A%u5230headless%u6D4B%u8BD5%uFF0CWindows%u4E0A%u5C31%u8FD9%u6837%u5427%uFF0C%u8DF3%u4E2A%u7A97%u53E3%u4E5F%u4E0D%u662F%u4EC0%u4E48%u5927%u4E8B%u3002%0A%0A%23%23%23%20Debug%20karma%20test%20using%20Chrome%0A%u8FD9%u4E2A%u5728%u521D%u5B66%u7684%u65F6%u5019%u8FD8%u662F%u5F88%u91CD%u8981%u7684%uFF0C%u5982%u679C%u6CA1%u6709%u8FD9%u4E2A%u5DE5%u5177%uFF0C%u6050%u6015%u6211%u4E5F%u8DF3%u4E0D%u51FA%u81EA%u5DF1%u7ED9%u81EA%u5DF1%u6316%u7684%u5927%u5751%u3002%0A%u53C2%u8003%u94FE%u63A5%uFF1A%5BDebugging%20Karma%20Unit%20Tests%5D%28https%3A//glebbahmutov.com/blog/debugging-karma-unit-tests/index.html%29%0A%u6309%u7167%u4E0A%u9762%u7684%u6B65%u9AA4%u6253%u5F00%u8C03%u8BD5%u9875%u9762%u548CChrome%20Dev%20Tool%u9875%u9762%uFF0C%u5237%u65B0%u9875%u9762%u5373%u53EF%u91CD%u65B0%u52A0%u8F7D%u4EE3%u7801%u5E76%u89E6%u53D1%u65AD%u70B9%u3002%0A%u5C06%u547D%u4EE4%u884C%u5199%u5165package.json%uFF0C%u4EE5%u540E%u8C03%u7528npm%u5C31%u53EF%u4EE5%u65B9%u4FBF%u7684%u6253%u5F00%u8BE5%u8C03%u8BD5%u5DE5%u5177%u3002%0A%60%60%60%0A%7B%0A...%0A%20%20%22scripts%22%3A%20%7B%0A%20%20%20%20%22start%22%3A%20%22node%20./bin/www%22%2C%0A%20%20%20%20%22karma-debug%22%3A%20%22cd%20public/js%20%26%26%20karma%20start%20--browsers%3DChrome%20--single-run%3Dfalse%20--debug%22%0A%20%20%7D%2C%20%0A%20%20...%0A%7D%0A%60%60%60%0A%23%23%20ngMock%0AngMock%u4E2D%u4E24%u4E2A%u6700%u91CD%u8981%u7684%u5173%u952E%u8BCD%u5C31%u662F%uFF1Amodule%2C%20inject%u3002%u53EF%u4EE5%u53C2%u8003%u8FD9%u4E2A%u4EBA%u7684%u535A%u5BA2%uFF1A%0A-%20%5BngMock%20Fundamentals%20for%20AngularJS%20-%20Understanding%20Inject%5D%28http%3A//www.bradoncode.com/blog/2015/05/27/ngmock-fundamentals-angularjs-testing-inject/%29%0A-%20%5BngMock%20Fundamentals%20for%20AngularJS%20Unit%20Testing%20-%20Understanding%20Module%5D%28http%3A//www.bradoncode.com/blog/2015/05/24/ngmock-fundamentals-angularjs-unit-testing/%29%0A%0AngMock%u901A%u8FC7module%u52A0%u8F7D%u5DF2%u7ECF%u5B9A%u4E49%u4E86%u7684%u6A21%u5757%uFF0C%u6216%u8005%u5B9A%u4E49%u533F%u540Dmodule%u5E76%u63D0%u4F9B%u65B0%u7684service%uFF0C%u6216%u8005%u590D%u5199%u5DF2%u5B58%u5728%u7684service%u3002module%u53EA%u662F%u5C06%u540D%u5B57%uFF0C%u4EE5%u53CA%u5BF9%u5E94%u4F4D%u7F6E%u5B58%u5165%u4E00%u4E2A%u6570%u7EC4%u3002inject%u5C06%u771F%u6B63%u7684%u52A0%u8F7D%u6240%u6709module%u63D0%u4F9B%u7684service%uFF0C%u5E76%u89E3%u51B3%u4F9D%u8D56%u5173%u7CFB%uFF0C%u8FD8%u53EF%u4EE5%u5C06%u76F8%u5E94%u7684service%u5BFC%u51FA%u5230test%20case%u4E2D%u4F7F%u7528%u3002%u5176%u5B9EngMock%u4E5F%u5C31%u662F%u505A%u4E86%u8FD9%u4E24%u4EF6%u4E8B%u60C5%u3002%0A%u4E0B%u9762%u7B80%u5355%u4ECB%u7ECD%u4E00%u4E9B%u6709%u52A9%u4E8E%u7406%u89E3%u7684%u77E5%u8BC6%u70B9%u3002%0A%23%23%23%20angular.mock.module%0Amodule%u51FD%u6570%u7684%u539F%u578B%u662F%60angular.mock.module%28alias%2C%20obj%2C%20func%29%60%0Amodule%u63A5%u53D7%u4E09%u79CD%u53C2%u6570%u7C7B%u578B%uFF0C%u6BCF%u4E00%u79CD%u90FD%u53EF%u4EE5%u5355%u72EC%u4F7F%u7528%uFF0C%u7528%u6765%u5B9A%u4E49%u6216%u52A0%u8F7D%u5BF9%u5E94%u6A21%u5757%0A-%20alias%3A%20%u662Fmodule%u540D%u5B57%u5B57%u7B26%u4E32%uFF0C%u53EF%u4EE5%u662F%u5728%u5F85%u6D4B%u4EE3%u7801%u4E2D%u5B9A%u4E49%u7684%uFF0C%u4E5F%u53EF%u4EE5%u662F%u5728%u6D4B%u8BD5%u6587%u4EF6%u4E2D%u5B9A%u4E49%u7684%0A-%20obj%3A%20%u4E00%u4E2A%u666E%u901A%u7684%u5B57%u5178%u7ED3%u6784%uFF0C%u4ED6%u4F1A%u751F%u6210%u4E00%u4E2A%u533F%u540Dmodule%uFF0C%u5176%u4E2D%u7684%u6210%u5458%u4F1A%u88AB%u5B9A%u4E49%u6210%60%24provide.value%28%29%60%0A-%20function%3A%20%u540C%u6837%u662F%u5B9A%u4E49%u4E00%u4E2A%u533F%u540Dmodule%uFF0C%u4E0D%u540C%u7684%u662F%uFF0Cfunction%u53EF%u4EE5%u7528%24provide%u4F5C%u4E3A%u53C2%u6570%uFF0C%u6765%u5B9A%u4E49%u5404%u79CD%u5404%u6837%u7684service%u3002%0A%0A%3E**function%28%29%20vs%20Object**%0A%0A%3EThe%20examples%20we%20used%20were%20similar%2C%20so%20what%u2019s%20the%20key%20difference%20between%20the%20function%28%29%20and%20Object%20form%3F%20As%20the%20Object%20type%20gets%20added%20as%20a%20%24provider.value%2C%20it%20is%20therefore%20restricted%20to%20the%20capabilities%20of%20the%20value%20service%2C%20most%20importantly%20that%20a%20value%20service%20cannot%20be%20injected%20with%20other%20services.%0A%0A%u5173%u4E8E%24provide%uFF0C%u53EF%u4EE5%u53C2%u8003%5BAngular%u5B98%u65B9%u6587%u6863%5D%28https%3A//docs.angularjs.org/api/auto/service/%5C%24provide%29%0A%3EThe%20**%5C%24provide**%20service%20has%20a%20number%20of%20methods%20for%20registering%20components%20with%20the%20**%5C%24injector**.%20Many%20of%20these%20functions%20are%20also%20exposed%20on%20angular.Module.%0A%0A%u5B83%u63D0%u4F9B%u4E86%u4E0B%u9762%u7684%u8FD9%u4E9Bservice%0A%0A%3E**provider**%28name%2C%20provider%29%20-%20registers%20a%20service%20provider%20with%20the%20%5C%24injector%0A**constant**%28name%2C%20obj%29%20-%20registers%20a%20value/object%20that%20can%20be%20accessed%20by%20providers%20and%20services.%0A**value**%28name%2C%20obj%29%20-%20registers%20a%20value/object%20that%20can%20only%20be%20accessed%20by%20services%2C%20not%20providers.%0A**factory**%28name%2C%20fn%29%20-%20registers%20a%20service%20factory%20function%20that%20will%20be%20wrapped%20in%20a%20service%20provider%20object%2C%20whose%20%5C%24get%20property%20will%20contain%20the%20given%20factory%20function.%0A**service**%28name%2C%20Fn%29%20-%20registers%20a%20constructor%20function%20that%20will%20be%20wrapped%20in%20a%20service%20provider%20object%2C%20whose%20%5C%24get%20property%20will%20instantiate%20a%20new%20object%20using%20the%20given%20constructor%20function.%0A**decorator**%28name%2C%20decorFn%29%20-%20registers%20a%20decorator%20function%20that%20will%20be%20able%20to%20modify%20or%20replace%20the%20implementation%20of%20another%20service.%0A%0A%23%23%23%20angular.mock.inject%0A%5C%24inject%u662FngMock%u7684%u6838%u5FC3%uFF0C%u770B%u770B%u5B98%u65B9%u7684%u5B9A%u4E49%0A%3EThe%20inject%20function%20wraps%20a%20function%20into%20an%20injectable%20function.%20The%20inject%28%29%20creates%20new%20instance%20of%20%24injector%20per%20test%2C%20which%20is%20then%20used%20for%20resolving%20references.%0A%0Ainject%u5C31%u662F%u5B9A%u4E49%u4E86%u4E00%u4E2Ainjector%uFF0C%u90A3injector%u53C8%u662F%u4EC0%u4E48%0A%3E%5C%24injector%20is%20used%20to%20retrieve%20object%20instances%20as%20defined%20by%20provider%2C%20instantiate%20types%2C%20invoke%20methods%2C%20and%20load%20modules.%0A%0A%5C%24injector%u4E5F%u5C31%u662FAngularJS%u7684%u6838%u5FC3%u3002%u5B83%u63D0%u4F9B%u4E86%u6240%u8C13%u7684%u201CDI%22%20%28Dependency%20Injection%29%u6A21%u5F0F%u3002Angular%u7684%u6838%u5FC3%u4EE3%u7801%u901A%u8FC7%5C%24injector%u6765%u83B7%u53D6%u5BF9%u5E94service%u7684reference%u3002%0A%u6211%u4EEC%u901A%u5E38%u5C06inject%u653E%u5728beforeEach%u91CC%uFF0C%u8FD9%u6837inject%u5C31%u4E3A%u6BCF%u4E2A%u6D4B%u8BD5%u5B9A%u4E49%u4E00%u4E2Ainjector%uFF0C%u4E3A%u8FD9%u4E2Ainjector%u51C6%u5907%u597D%u6240%u6709%u7684service%uFF0C%u5E76%u80FD%u901A%u8FC7%u53C2%u6570%u5C06%u4EFB%u610F%u5DF2%u6709%u7684service%u5BFC%u51FA%u3002%0A%0A%23%23%23%20Test%20controllers%0A%u4E86%u89E3%u4E86%u4E0A%u9762%u7684%u4E24%u4E2A%u91CD%u8981%u7EC4%u4EF6%u4E4B%u540E%uFF0C%u9488%u5BF9%u4E0D%u540C%u7684%u6D4B%u8BD5%u7EC4%u4EF6%u5C31%u5BB9%u6613%u7406%u89E3%u4E86%u3002%0A%u76F4%u63A5%u4E0A%u4EE3%u7801%uFF1A%0A%60%60%60javascript%0Adescribe%28%27main%20controller%27%2C%20function%28%29%20%7B%0A%20%20var%20%24controller%0A%20%20var%20mainCtrl%0A%20%20beforeEach%28%27set%20up%20module%27%2C%20function%28%29%20%7B%0A%20%20%20%20module%28function%20%28%24provide%29%20%7B%0A%20%20%20%20%20%20%24provide.service%28%27MockDataService%27%2C%20function%20%28%29%20%7B%0A%20%20%20%20%20%20%20%20const%20service%20%3D%20this%0A%20%20%20%20%20%20%20%20service.data%20%3D%20%27test%20data%27%0A%20%20%20%20%20%20%7D%29%0A%20%20%20%20%7D%29%0A%0A%20%20%20%20module%28%27MainModule%27%29%0A%20%20%7D%29%3B%0A%0A%20%20beforeEach%28%27set%20up%20controller%27%2C%20inject%28function%20%28_%24controller_%2C%20MockDataService%29%20%7B%0A%20%20%20%20%24controller%20%3D%20_%24controller_%0A%20%20%20%20mainCtrl%20%3D%20%24controller%28%27MainController%27%2C%20%7B%0A%20%20%20%20%20%20%20%20%20%20DataService%3A%20MockDataService%0A%20%20%20%20%7D%29%0A%20%20%7D%29%29%20%0A%0A%20%20it%28%27should%20assemble%20print%20page%20URL%20correctly%27%2C%20function%28%29%20%7B%0A%20%20%20%20mainCtrl.getData%28%29.should.equal%28%27test%20data%27%29%0A%20%20%7D%29%3B%0A%7D%29%3B%0A%60%60%60%0A%u8FD9%u91CC%u53EA%u6709%u4E24%u4E2A%u503C%u5F97%u6CE8%u610F%u7684%u5730%u65B9%uFF0C%u5176%u5B9E%u524D%u6587%u4E5F%u90FD%u6709%u63D0%u53CA%u3002%0A1.%20%u7B2C%u4E00%u4E2Amodule%u4E2D%u901A%u8FC7%5C%24provide%u63D0%u4F9B%u4E86%u4E00%u4E2A%u5047%u7684service%uFF0C%u8FD9%u4E2Aservice%u53EF%u4EE5%u901A%u8FC7%u5176%u540D%u5B57%u88ABinject%u3002%0A2.%20inject%u4E2D%u901A%u8FC7%5C_%5C%24controller%5C_%u6765%u5BFC%u51FAcontroller%u7684%u6784%u9020%u51FD%u6570%u3002%u901A%u8FC7%u8FD9%u4E2A%u6784%u9020%u51FD%u6570%u6765%u6784%u9020%u76F8%u5E94%u7684%u5F85%u6D4Bcontroller%uFF0C%u5E76%u4F20%u5165%u5047%u7684service%u8FBE%u5230mock%u7684%u76EE%u7684%u3002%0A%0A%23%23%23%20Test%20services%0A%u4ECD%u7136%u76F4%u63A5%u4E0A%u4EE3%u7801%uFF1A%0A%60%60%60%20javascript%0Aangular.module%28%27PrinterData%27%2C%20%5B%5D%29%0A.config%28%5B%27%24locationProvider%27%2C%20function%28%24locationProvider%29%20%7B%0A%20%20%24locationProvider.html5Mode%28true%29%3B%0A%7D%5D%29%3B%0A%60%60%60%0A%60%60%60javascript%0Adescribe%28%27printer%20data%20service%27%2C%20function%28%29%20%7B%0A%20%20var%20%24httpBackend%0A%20%20var%20PrinterDataService%0A%20%20beforeEach%28function%28%29%7B%0A%20%20%20%20module%28function%20%28%24provide%29%20%7B%0A%20%20%20%20%20%20%24provide.provider%28%27%24location%27%2C%20function%20%28%29%20%7B%0A%20%20%20%20%20%20%20%20const%20provider%20%3D%20this%0A%20%20%20%20%20%20%20%20const%20location%20%3D%20%7B%7D%0A%20%20%20%20%20%20%20%20location.search%20%3D%20function%20%28%29%7B%0A%20%20%20%20%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20id%3A%20%27test%20id%27%2C%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20provider.html5Mode%20%3D%20sinon.stub%28%29%0A%20%20%20%20%20%20%20%20provider.%24get%20%3D%20sinon.stub%28%29.returns%28location%29%0A%20%20%20%20%20%20%7D%29%0A%20%20%20%20%7D%29%0A%20%20%7D%29%3B%0A%20%20beforeEach%28function%28%29%20%7B%0A%20%20%20%20module%28%27Data%27%29%0A%20%20%20%20inject%28function%20%28%24injector%29%20%7B%0A%20%20%20%20%20%20%24httpBackend%20%3D%20%24injector.get%28%27%24httpBackend%27%29%0A%20%20%20%20%20%20DataService%20%3D%20%24injector.get%28%27DataService%27%29%0A%20%20%20%20%7D%29%0A%20%20%7D%29%3B%0A%0A%20%20it%28%27should%20update%20if%20succeeds%27%2C%20function%28done%29%20%7B%0A%20%20%20%20%24httpBackend.whenGET%28/.*/%29%0A%20%20%20%20%20%20.respond%28%7B%0A%20%20%20%20%20%20%20%20status%3A%20%27ready%27%0A%20%20%20%20%20%20%7D%29%0A%20%20%20%20DataService.getStatus%28%29.then%28function%20%28data%29%20%7B%0A%20%20%20%20%20%20data.should.deepEqual%28%7B%0A%20%20%20%20%20%20%20%20status%3A%20%27ready%27%0A%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20done%28%29%0A%20%20%20%20%7D%29.catch%28function%20%28err%29%20%7B%0A%20%20%20%20%20%20should.not.exist%28err%29%0A%20%20%20%20%7D%29%0A%20%20%20%20%0A%20%20%20%20%24httpBackend.flush%28%29%3B%0A%20%20%7D%29%3B%0A%7D%29%0A%60%60%60%0A%u4E0B%u9762%u7F57%u5217%u4E00%u4E9B%u5B9E%u9645%u4F7F%u7528%u4E2D%u78B0%u5230%u7684%u4E00%u4E9B%u95EE%u9898%uFF0C%u4EE5%u53CA%u81EA%u5DF1%u7684%u4E00%u4E9B%u7406%u89E3%u3002%0A%0A%23%23%23%23%20%u4F7F%u7528%5C%24injector%0A%u6211%u4EEC%u8BF4%u8FC7inject%u51FD%u6570%u5C31%u662F%u7528%u6765%u521B%u5EFA%5C%24injector%uFF0C%u6240%u4EE5%5C%24injector%u4E5F%u662F%u53EF%u4EE5%u76F4%u63A5%u88AB%u5BFC%u51FA%u4F7F%u7528%u7684%u3002%u8FD9%u65F6%u9700%u8981%u4EC0%u4E48service%uFF0C%u5C31%u53EF%u4EE5%u76F4%u63A5%u8C03%u7528%5C%24injector.get%u3002%u4E3A%u4EC0%u4E48%u4E0D%u76F4%u63A5%u901A%u8FC7%u53C2%u6570%u6765inject%u5462%uFF1F%u5F53%u7136%u662F%u56E0%u4E3A%u53C2%u6570%u592A%u957F%u4E86%uFF0C%u4E0D%u597D%u770B%u3002%u3002%u3002%0A%23%23%23%23%20mock%20%5C%24http%0A%u4E3A%u4E86%u6D4B%u8BD5%u7A33%u5B9A%u6027%uFF0C%u6211%u4EEC%u5728unit%20test%u4E2D%u5E76%u4E0D%u771F%u6B63%u7684%u8BBF%u95EE%u670D%u52A1%u5668%uFF0C%u800C%u901A%u5E38%u91C7%u7528%u5047%u7684%u670D%u52A1%u5668%u54CD%u5E94%u6765mock%u3002%u8FD9%u5C31%u9700%u8981%u7528%u5230%5C%24httpBackend%20service%u3002%u90A3%u4E48%5C%24http%u548C%5C%24httpBackend%u4E4B%u95F4%u7684%u5173%u7CFB%u662F%u4EC0%u4E48%uFF1F%0A%3EHTTP%20backend%20used%20by%20the%20service%20that%20delegates%20to%20XMLHttpRequest%20object%20or%20JSONP%20and%20deals%20with%20browser%20incompatibilities.%0AYou%20should%20never%20need%20to%20use%20this%20service%20directly%2C%20instead%20use%20the%20higher-level%20abstractions%3A%20%5C%24http%20or%20%5C%24resource.%0ADuring%20testing%20this%20implementation%20is%20swapped%20with%20mock%20%24httpBackend%20which%20can%20be%20trained%20with%20responses.%0A%0A%u5177%u4F53%u505A%u6CD5%uFF0C%u4E0A%u9762%u7684%u4EE3%u7801%u4E2D%u5DF2%u6709%uFF0C%u8282%u5F55%u5982%u4E0B%uFF1A%0A%60%60%60javascript%0AbeforeEach%28function%28%29%20%7B%0A%20%20%20%20module%28%27Data%27%29%0A%20%20%20%20inject%28function%20%28%24injector%29%20%7B%0A%20%20%20%20%20%20%24httpBackend%20%3D%20%24injector.get%28%27%24httpBackend%27%29%0A%20%20%20%20%20%20DataService%20%3D%20%24injector.get%28%27DataService%27%29%0A%20%20%20%20%7D%29%0A%20%20%7D%29%3B%0A%0A%20%20it%28%27should%20update%20if%20succeeds%27%2C%20function%28done%29%20%7B%0A%20%20%20%20%24httpBackend.whenGET%28/.*/%29%0A%20%20%20%20%20%20.respond%28%7B%0A%20%20%20%20%20%20%20%20status%3A%20%27ready%27%0A%20%20%20%20%20%20%7D%29%0A%20%20%20%20DataService.getStatus%28%29.then%28function%20%28data%29%20%7B%0A%20%20%20%20%20%20data.should.deepEqual%28%7B%0A%20%20%20%20%20%20%20%20status%3A%20%27ready%27%0A%20%20%20%20%20%20%7D%29%0A%20%20%20%20%20%20done%28%29%0A%20%20%20%20%7D%29.catch%28function%20%28err%29%20%7B%0A%20%20%20%20%20%20should.not.exist%28err%29%0A%20%20%20%20%7D%29%0A%20%20%20%20%0A%20%20%20%20%24httpBackend.flush%28%29%3B%0A%20%20%7D%29%3B%0A%60%60%60%0A%u901A%u8FC7%60%24httpBackend.wheGET%28...%29.respond%28...%29%60%u6765%u8BBE%u7F6Emock%20response%u3002%60whenGET%60%u8FD8%u652F%u6301%u6B63%u5219%u5F0F%u3002%0A%u8C03%u7528%u5B8C%u8BF7%u6C42%u51FD%u6570%u540E%u8981%u8BB0%u5F97%60%24httpBackend.flush%28%29%60%u5C06%u8BF7%u6C42%u771F%u6B63%u7684%u53D1%u51FA%u3002%u5426%u5219%u8BF7%u6C42%u5E76%u4E0D%u4F1A%u53D1%u51FA%uFF0C%u76F4%u5230%u8C03%u7528%60flush%28%29%60%u51FD%u6570%uFF0C%u6216%u8005%u6D4B%u8BD5%u8D85%u65F6%u5931%u8D25%u3002%0A%0A%23%23%23%23%20%u5982%u4F55mock%20%5C%24location%20%26%20%5C%24locationProvider%0A%u5F88%u60ED%u6127%u7684%u8BF4%uFF0C%u5728%u8FD9%u4E2A%u95EE%u9898%u4E0A%u6211%u82B1%u4E86%u5F88%u4E45%u5F88%u4E45%u7684%u65F6%u95F4%uFF0C%u641C%u7D22%u4E86%u5927%u91CF%u7684google%u7F51%u9875%uFF0C%u6700%u540E%u8FD8%u662F%u4F9D%u9760chrome%u8FFD%u8E2Aangular%u6838%u5FC3%u4EE3%u7801%u624D%u53D1%u73B0%u539F%u6765%u662F%u81EA%u5DF1%u7ED9%u81EA%u5DF1%u6316%u7684%u5751%uFF0C%u5BF9service%2C%20factory%u548Cprovider%u7406%u89E3%u4E0D%u900F%u5F7B%u3002%0A%u9996%u5148%u6765%u5C31%u4E8B%u8BBA%u4E8B%uFF0C%u8BF4%u4E00%u4E0B%u5230%u5E95%u600E%u4E48%u5B8C%u6210%u6211%u7684%u8FD9%u4E2A%u6D4B%u8BD5%u3002%0A%0A%u56E0%u4E3A%u6211%u8981%u6D4B%u8BD5DataService%uFF0C%u800CDataService%u5B9A%u4E49%u5728Data%20moduleDataService%u8C03%u7528%u4E86%5C%24location%20service%u3002%u9700%u8981%u5C06%u4E4Bmock%u6389%u3002%u6700%u7B80%u5355%u7684%u60F3%u6CD5%u5C31%u662F%u901A%u8FC7inject%u6765%u83B7%u5F97%5C%24location%20service%20reference%u3002%u5E76%u901A%u8FC7sinon.stub%u6765%u8BBE%u7F6E%u9700%u8981%u7684%u8FD4%u56DE%u503C%u3002%0A%0A%60%60%60%0Ainject%28function%20%28%24injector%2C%20%24location%29%20%7B%0A%20%20sinon.stub%28%24location%2C%20%27search%27%29.returns%28%7B%0A%20%20%20%20id%3A%20%27test%20id%27%0A%20%20%7D%29%0A%20%20DataService%20%3D%20%24injector.get%28%27DataService%27%29%0A%7D%29%0A%60%60%60%0A%0A%u4F46%u662F%u6211%u5012%u9709%u50AC%u7684%uFF0C%u7ADF%u7136%u662F%u7528%5C%24provide%u505A%u4E86%uFF1A%0A%60%60%60%0Amodule%28function%20%28%24provide%29%20%7B%0A%20%20%24provide.service%28%27%24location%27%2C%20function%20%28%29%20%7B%0A%20%20%20%20const%20location%20%3D%20this%0A%20%20%20%20location.search%20%3D%20sinon.stub%28%29.returns%28%7B%0A%20%20%20%20%20%20device_id%3A%20%27test%20id%27%2C%0A%20%20%20%20%7D%29%0A%20%20%7D%29%0A%7D%29%0A%60%60%60%0A%u8FD9%u6837%u5C31%u4F1A%u6709%u95EE%u9898%u4E86%uFF0C%u5F53ngMock%u52A0%u8F7D%u8FD9%u4E2A%u6A21%u5757%u7684%u65F6%u5019%uFF0C%u4F1A%u5148%u5B9A%u4E49%u4E00%u4E2A%5C%24locationProvider%uFF0C%u8FD9%u5C31%u4F1A%u8986%u76D6%u5176%u81EA%u5E26%u7684%5C%24locationProvider%u3002%u800C%u5982%u4E0B%u7684module.config%u65B9%u6CD5%u4E2D%u5BF9%5C%24locationProvider%u7684%u64CD%u4F5C%u5C31%u4F1A%u51FA%u73B0%u95EE%u9898%uFF1A%0A%60%60%60%0Aangular.module%28%27PrinterData%27%2C%20%5B%5D%29%0A.config%28%5B%27%24locationProvider%27%2C%20function%28%24locationProvider%29%20%7B%0A%20%20%24locationProvider.html5Mode%28true%29%3B%0A%7D%5D%29%3B%0A%60%60%60%0A%u56E0%u4E3A%u65B0%u5B9A%u4E49%u7684%5C%24locationProvider%u4E2D%u6CA1%u6709html5Mode%u6210%u5458%u3002%u4E8E%u662F%u60F3%u4E86%u5404%u79CD%u529E%u6CD5%u6765mock%20%5C%24locationProvider%u3002%u7ED3%u679C%u56E0%u4E3A%u5BF9service%uFF0Cfactory%uFF0Cprovider%u7684%u7406%u89E3%u4E0D%u6B63%u786E%uFF0C%u90FD%u5931%u8D25%u4E86%u3002%u653E%u4E00%u6BB5%u9519%u8BEF%u7684%u4EE3%u7801%uFF1A%0A%60%60%60%0AbeforeEach%28function%28%29%7B%0A%20%20module%28function%20%28%24provide%29%20%7B%0A%20%20%20%20%24provide.service%28%27%24locationProvider%27%2C%20function%20%28%29%20%7B%0A%20%20%20%20%20%20const%20location%20%3D%20this%0A%20%20%20%20%20%20location.html5Mode%20%3D%20function%28%29%7B%7D%0A%20%20%20%20%7D%29%0A%20%20%20%20%24provide.factory%28%27%24location%27%2C%20function%20%28%29%20%7B%0A%20%20%20%20%20%20const%20locationProvider%20%3D%20this%0A%20%20%20%20%20%20locationProvider.html5Mode%20%3D%20function%28%29%7B%7D%0A%20%20%20%20%7D%29%0A%7D%29%0A%60%60%60%0A%u7B2C%u4E00%u4E2A%u7528%5C%24provide.service%u4F1A%u5B9A%u4E49%u4E00%u4E2A%5C%24locationProviderProvider%0A%u7B2C%u4E8C%u4E2A%u7528%5C%24provide.factory%u5B9A%u4E49%u4E86%u4E00%u4E2A%5C%24locationProvider%uFF0C%u4F46%u662F%u6CA1%u6709%u8FD4%u56DE%uFF0C%u6240%u4EE5%5C%24location%20service%u4E0D%u4F1A%u88AB%u5B9E%u4F8B%u5316%uFF0C%u4E5F%u5C31%u6CA1%u6709%5C%24location%20service%u4E86%u3002%0A%u5982%u679C%u60F3%u901A%u8FC7mock%20%5C%24locationProvider%u6765mock%20%5C%24location%20service%u7684%u8BDD%uFF0C%u6B63%u786E%u7684%u505A%u6CD5%u5E94%u5F53%u662F%uFF1A%0A%60%60%60%0A%24provide.provider%28%27%24location%27%2C%20function%20%28%29%20%7B%0A%20%20const%20provider%20%3D%20this%0A%20%20const%20location%20%3D%20%7B%7D%0A%20%20location.search%20%3D%20function%20%28%29%7B%0A%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20device_id%3A%20%27test%20id%27%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20provider.html5Mode%20%3D%20sinon.stub%28%29%0A%20%20provider.%24get%20%3D%20sinon.stub%28%29.returns%28location%29%0A%7D%29%0A%60%60%60%0Amock%u6389provider.%5C%24get%u51FD%u6570%uFF0C%u63D0%u4F9B%u5047%u7684location%u670D%u52A1%u3002%u5176%u5B9E%u8FD8%u6709%u5F88%u591A%u529E%u6CD5%uFF0C%u4F8B%u5982%u83B7%u5F97%5C%24locationProvider%u518D%u5BF9%5C%24get%u51FD%u6570%u8FDB%u884Cstub%uFF0C%u4E5F%u53EF%u4EE5%u3002%u6CA1%u6709%u518D%u4E00%u4E00%u5C1D%u8BD5%u4E86%u3002%u7406%u89E3%u4E86%u9519%u8BEF%u548C%u6B63%u786E%u7684%u505A%u6CD5%uFF0C%u60F3%u518D%u53BB%u5B9E%u73B0%u5C31%u5F97%u5FC3%u5E94%u624B%u4E86%u3002%0A%0A%23%23%23%23%20%u6D4B%u8BD5.config/.run%u5757%0AData%20module%u6709%u4E00%u4E2A.config%u5757%uFF0C%u56E0%u4E3A%u6A21%u5757%u52A0%u8F7D%u7684%u65F6%u5019%u4F1A%u5148%u8FD0%u884C%u5176.config%u5757%uFF0C%u7136%u540E%u662F.run%u5757%u3002%u56E0%u5176%u7279%u6B8A%u6027%uFF0C%u6240%u4EE5%u5728%u5BF9%u5176%u4E2D%u4F7F%u7528%u5230%u7684%u670D%u52A1%u8FDB%u884Cmock%u8981%u6CE8%u610F%u987A%u5E8F%u3002%u53EF%u4EE5%u53C2%u8003%u8FD9%u4E2A%u94FE%u63A5%uFF1A%5BTesting%20config%20and%20run%20blocks%20in%20AngularJS%0AHow%20to%20easily%20test%20an%20often%20neglected%20part%20of%20your%20application%5D%28https%3A//medium.com/@a_eife/testing-config-and-run-blocks-in-angularjs-1809bd52977e%29%0A%0A%23%23%23%23%20%u5982%u4F55mock%20%24interval%0A%u5728%u5355%u5143%u6D4B%u8BD5%u4E2D%uFF0C%u6211%u4EEC%u901A%u5E38%u8981%u91C7%u7528mock%u7684%u624B%u6BB5%uFF0C%u800C%u4E0D%u771F%u6B63%u7684%u4F7F%u7528%u65F6%u95F4%u670D%u52A1%u3002%u5728sinon%u4E2D%uFF0C%u53EF%u4EE5%u4F7F%u7528fake%20timer%u6765%u53D6%u4EE3JS%u4E2D%u6807%u51C6%u7684setTimeout%u548CsetInterval%u3002%u4E0D%u8FC7%u8FD9%u4E2A%u5728Angular%20JS%u4E2D%u5E76%u4E0D%u8D77%u4F5C%u7528%uFF0C%u5982%u679C%u6211%u4EEC%u4F7F%u7528%5C%24interval%u670D%u52A1%u7684%u8BDD%u3002%0A%u56E0%u4E3A%u5728%u5BF9Angular%20JS%u505A%u5355%u5143%u6D4B%u8BD5%u7684%u65F6%u5019%uFF0C%5C%24interval%u5E76%u4E0D%u4F1A%u8C03%u7528setInterval%u3002%u539F%u56E0%u662F%u8FD9%u91CC%u7684%5C%24interval%u5176%u5B9E%u662FngMock%u4E2D%u7684%5C%24interval%u3002%u6B64%u65F6%u53EF%u4EE5%u4F7F%u7528%60%24interval.flush%28ms%29%60%u6765%u5C06%u65F6%u949F%u63A8%u8FDB%u82E5%u5E72%u65F6%u95F4%u3002%u5F53%u7136%u5982%u679C%u613F%u610F%uFF0C%u4E5F%u53EF%u4EE5%u7528sinon%u6765mock%u4ECE%5C%24injector%u4E2Dget%u51FA%u6765%u7684%5C%24interval%20service%u3002%5C%24timeout%20service%u4E5F%u7C7B%u4F3C%uFF0C%u6709%u540C%u6837%u7684%u65B9%u6CD5%u5BF9%u4ED8%u5355%u5143%u6D4B%u8BD5%u3002%0A%0A%23%23%23%23%20Promise%20not%20resolve%0A%u5728Angular%20JS%u4E2D%uFF0C%u6211%u4EEC%u5F80%u5F80%u8C03%u7528%5C%24q%20service%u6765%u4F7F%u7528Promise%uFF0C%u800C%5C%24q.defer%28%29.promise%u53EA%u5728%5C%24scope%u7684digest%20cycle%u624D%u4F1A%u5224%u5B9Aresolve%u8FD8%u662Freject%uFF0C%u6240%u4EE5%u8981%u89E6%u53D1%5C%24q%u4EA7%u751F%u7684promise%uFF0C%u4E00%u5B9A%u8981%u8C03%u7528%u5BF9%u5E94%u7684%5C%24scope.%5C%24apply%28%29%u6216%u8005%5C%24scope.%5C%24digest%28%29%u3002stack%20overflow%u4E2D%u4E5F%u6709%u5927%u628A%u7C7B%u4F3C%u95EE%u9898%u7684%u89E3%u7B54%u3002%u5177%u4F53%u4E5F%u53EF%u4EE5%u53C2%u8003%u8FD9%u7BC7%u535A%u5BA2%uFF0C%u8BB2%u5F97%u5F88%u900F%u5F7B%uFF1A%0A-%20%5BUnit%20Testing%20with%20%24q%20Promises%20in%20AngularJS%5D%28http%3A//www.bradoncode.com/blog/2015/07/13/unit-test-promises-angualrjs-q/%29%0A%0A%u5728Angular%20JS%u4E2D%uFF0C%u4E5F%u53EF%u4EE5%u4F7F%u7528%u6807%u51C6%u7684Promise%uFF0C%u4F8B%u5982%3A%20%60var%20promise%20%3D%20new%20Promise%28resolve%2C%20reject%29%60%u3002%u4F46%u662F%u8C8C%u4F3C%uFF0C%u6807%u51C6%u7684Promise%u548C%5Cq%u517C%u5BB9%u7684%u5E76%u4E0D%u5F88%u597D%uFF0C%u4E0B%u9762%u7684code%u5E76%u4E0D%u4F1A%u5DE5%u4F5C%uFF1A%0A%60%60%60%0Avar%20promise%20%3D%20%24q.all%28%5Bpromise1%2C%20promise2%5D%29%0A%24scope.%24apply%28%29%0A%60%60%60%0Apromise%u5E76%u4E0D%u4F1A%u5728promise1%u548Cpromise2%u8FD4%u56DE%u4E4B%u540E%u8FD4%u56DE%uFF0C%u5B9E%u9645%u4E0A%u662F%u4ED6%u6839%u672C%u5C31%u4E0D%u4F1A%u8FD4%u56DE%uFF0C%u76F4%u5230%u6D4B%u8BD5%u8D85%u65F6%u5931%u8D25%u3002%0A%0A%23%23%23%23%20%22Unexpected%20request%3A%20GET%20.../.html%22%20on%20Karma%20tests%0A%u8FD9%u662FYaakov%u5728%u89C6%u9891%u4E2D%u63D0%u5230%u7684%u9700%u8981%u4F7F%u7528%5C%24templateCache%u7684%u60C5%u5F62%u3002Yaakov%u63D0%u5230%u7528karma%u662F%u89E3%u51B3%u8BE5%u95EE%u9898%u6700%u597D%u7684%u529E%u6CD5%uFF0C%u4F46%u662F%u56E0%u4E3A%u89C6%u9891%u5E76%u4E0D%u6D89%u53CA%u4ECB%u7ECDkarma%uFF0C%u6240%u4EE5%u5E76%u6CA1%u6709%u8BF4%u5E94%u8BE5%u600E%u4E48%u505A%u3002%0A%u5F53%u6211%u4EEC%u7684karma%20test%u52A0%u8F7D%u4E86route.js%uFF0C%u5E76%u5728%u5176%u4E2D%u5B9A%u4E49%u4E86component%uFF0C%u5219%u6D4B%u8BD5%u5728%u5B9E%u4F8B%u5316%u8BE5Angular%20component%u7684%u65F6%u5019%u56DE%u53BB%u7528%5C%24http%20service%u6765GET%u8BE5template%20html%u6587%u4EF6%uFF0C%u4E8E%u662F%u4EA7%u751F%u4E86%u8BE5unexpected%20request%u9519%u8BEF%u3002Yaakov%u5728%u6559%u7A0B%u4E2D%u7684%u89E3%u51B3%u529E%u6CD5%u662F%uFF0C%u901A%u8FC7%u4E00%u6B21%u771F%u6B63%u7684AJAX%u4ECE%u670D%u52A1%u5668%u4E0A%u8BF7%u6C42%u8BE5html%uFF0C%u5E76%u5C06%u4E4B%u5B58%u5165%5C%24templateCache%u4E2D%uFF0C%u4E4B%u540E%u5C31%u4E0D%u4F1A%u518D%u6709%u771F%u6B63%u7684GET%20AJAX%u4EA7%u751F%u4E86%u3002%u5176%u5B9E%u8FD9%u4E00%u6BB5%u53EF%u4EE5%u901A%u8FC7%u914D%u7F6Ekarma%u6765%u5B9E%u73B0%u3002%u5177%u4F53%u505A%u6CD5%u5982%u4E0B%uFF1A%0A-%20%u5B89%u88C5ng-html2js%uFF0Ckarma-ng-html2js-preprocessor%0A-%20%u4F7F%u7528ng-html2js%u5C06%u5BF9%u5E94%u7684template%20html%u8F6C%u6210js%u6A21%u5757%uFF0C%u5E76%u5728%u6D4B%u8BD5%u4EE3%u7801%u4E2D%u5F15%u5165%u3002%0A%0A%u770B%u4E0B%u9762%u5177%u4F53%u4EE3%u7801%0Akarma.conf.js%0A%60%60%60%0A//%20list%20of%20files%20/%20patterns%20to%20load%20in%20the%20browser%0Afiles%3A%20%5B%0A%20%20%27../html/templates/*.html%27%2C%0A%20%20...%0A%5D%2C%0A%0A//%20preprocess%20matching%20files%20before%20serving%20them%20to%20the%20browser%0A//%20available%20preprocessors%3A%20https%3A//npmjs.org/browse/keyword/karma-preprocessor%0Apreprocessors%3A%20%7B%0A%20%20%27../html/templates/home.template.html%27%3A%20%5B%27ng-html2js%27%5D%0A%7D%2C%0A%0AngHtml2JsPreprocessor%3A%20%7B%0A%20%20moduleName%3A%20%27templates%27%2C%0A%20%20stripPrefix%3A%20%27.*/%27%2C%0A%20%20prependPrefix%3A%20%27/html/templates/%27%0A%7D%2C%20%0A%60%60%60%0Atest.js%0A%60%60%60%0Adescribe%28function%28%29%7B%0A%20%20beforeEach%28module%28%27templates%27%29%29%0A%7D%29%0A%60%60%60%0A%u7279%u522B%u8981%u6CE8%u610F%u7684%u662F%u5BF9ng-html2js%u7684%u914D%u7F6E%0A%60%60%60%0AngHtml2JsPreprocessor%3A%20%7B%0A%20%20moduleName%3A%20%27templates%27%2C%0A%20%20stripPrefix%3A%20%27.*/%27%2C%0A%20%20prependPrefix%3A%20%27/html/templates/%27%0A%7D%2C%20%0A%60%60%60%0A%u5F53%u6CA1%u6709%60stripPrefix%60%u9009%u9879%u65F6%uFF0C%u901A%u8FC7Chrome%20debug%u53EF%u4EE5%u770B%u5230%uFF0C%u6240%u6709%u7684template%u90FD%u88AB%u8F6C%u5316%u6210%u4E86js%u6A21%u5757%uFF0C%u4F46%u662F%u5176%u6A21%u5757%u540D%u662F%u7C7B%u4F3C%60c%3A%5Cpath%5Cto%5Ctemplate%5Ctemplate.html%60%u7684%u7ED3%u6784%uFF0C%u800C%u6211%u5728route%u4E2D%u7684%u6307%u5B9A%u8DEF%u5F84%u662Fweb%u8DEF%u5F84%60templateUrl%3A%20%27/html/templates/home.template.html%27%60%u3002%u5C31%u5BF9%u4E0D%u4E0A%u53F7%u4E86%u3002%u505A%u6CD5%u662F%u901A%u8FC7%60stripPrefix%60%u5C06%u6240%u6709%u7684%u524D%u7F00%u5168%u90E8%u5265%u53BB%uFF0C%u7136%u540E%u7528%60prependPrefix%60%u52A0%u4E0A%u9700%u8981%u7684%u524D%u7F00%u3002%u8FD9%u6837%u5C31%u53EF%u4EE5%u5DE5%u4F5C%u4E86%u3002%u7F51%u4E0A%u6709%u5F88%u591A%u5E16%u5B50%u8BA8%u8BBA%u8FD9%u4E2A%u95EE%u9898%u3002%u5217%u4E24%u4E2A%u6709%u542F%u53D1%u6027%u7684%uFF1A%0A-%20%5BUnit%20Testing%20AngularJS%20directive%20with%20templateUrl%5D%28https%3A//stackoverflow.com/questions/15214760/unit-testing-angularjs-directive-with-templateurl%29%0A-%20%5BKarma%20%27Unexpected%20Request%27%20when%20testing%20angular%20directive%2C%20even%20with%20ng-html2js%5D%28https%3A//stackoverflow.com/questions/22869668/karma-unexpected-request-when-testing-angular-directive-even-with-ng-html2js%29%0A</center><br></div>",
            "tags": [
                "angular",
                "unittest"
            ]
        },
        {
            "id": "https://zhougy0717.github.io/2017/09/12/C/C++_Test_Framework_-_Google_Test_&_Google_Mock/",
            "url": "https://zhougy0717.github.io/2017/09/12/C/C++_Test_Framework_-_Google_Test_&_Google_Mock/",
            "title": "C/C++ Test Framework - Google Test & Google Mock",
            "date_published": "2017-09-12T09:02:37.000Z",
            "content_html": "<!DOCTYPE en-note SYSTEM 'http://xml.evernote.com/pub/enml2.dtd'><div class=\"enNote\" style=\"color: #2c3f51; line-height: 1.6;\" title lang=\"v2\" xml:lang dir><del style=\"position:relative;display:block;z-index:10;\"><a style=\"position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;\" href=\"http://maxiang.info/#/?provider=evernote&amp;guid=52d299a6-1591-4f5a-b50c-cca38230ecc5&amp;notebook=myblog\">Edit</a></del><div style=\"color: #2c3f51; line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"></p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Google Test&#xFF0C;Google Mock&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;gtest&#xFF0C;gmock&#x3002; <br>&#x5728;&#x63A5;&#x89E6;gtest&#xFF0C;gmock&#x4E4B;&#x524D;&#xFF0C;&#x6D4B;&#x8BD5;C/C++ code&#x4F7F;&#x7528;<a href=\"https://github.com/unittest-cpp/unittest-cpp\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">UnitTest++</a>&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x7B80;&#x6D01;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x4E0A;&#x624B;&#x5F88;&#x5FEB;&#x3002;&#x53C2;&#x770B;&#x53E6;&#x4E00;&#x7BC7;&#x535A;&#x6587;<a href=\"https://zhougy0717.github.io/2016/02/29/UnitTest++%E7%AE%80%E4%BB%8B/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">UnitTest++&#x7B80;&#x4ECB;</a>&#x3002;&#x6D4B;&#x8BD5;&#x76F8;&#x5173;&#x7684;&#x529F;&#x80FD;&#x591F;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#x6CA1;&#x6709;mock&#x5E93;&#x3002;&#x8FD9;&#x5E26;&#x6765;&#x7684;&#x95EE;&#x9898;&#x662F;&#xFF1A;</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x6D4B;&#x8BD5;&#x9057;&#x7559;&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x884C;fake&#x76F8;&#x5173;&#x4EE3;&#x7801;&#x3002;&#x8FD9;&#x4E2A;&#x5728;&#x9057;&#x7559;&#x7CFB;&#x7EDF;&#x5F88;&#x5E9E;&#x5927;&#x65F6;&#xFF0C;&#x8981;&#x9887;&#x8D39;&#x5FC3;&#x529B;&#x3002;&#x800C;&#x4E14;&#x8FC7;&#x591A;&#x6D89;&#x53CA;&#x7EC6;&#x8282;&#xFF0C;&#x5BFC;&#x81F4;&#x6D4B;&#x8BD5;&#x6781;&#x4E0D;&#x7A33;&#x5B9A;&#xFF0C;&#x7CFB;&#x7EDF;&#x4EE3;&#x7801;&#x4EFB;&#x610F;&#x7684;&#x6F14;&#x8FDB;&#xFF0C;&#x90FD;&#x4F1A;&#x5BFC;&#x81F4;&#x5927;&#x5806;&#x7684;&#x6D4B;&#x8BD5;&#x5931;&#x8D25;&#xFF0C;&#x751A;&#x81F3;&#x6D4B;&#x8BD5;&#x65E0;&#x6CD5;&#x8FDB;&#x884C;&#x3002;</li><li style=\"line-height: 1.6;\">&#x6D4B;&#x8BD5;case&#x4E4B;&#x95F4;&#x65E0;&#x6CD5;&#x5F88;&#x597D;&#x7684;&#x89E3;&#x8026;&#x3002;&#x7ED3;&#x679C;&#x540C;&#x6837;&#x662F;&#x6D4B;&#x8BD5;&#x4E0D;&#x591F;&#x7A33;&#x5B9A;&#x3002;&#x672F;&#x8BED;&#x662F;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x5F88;&#x201C;&#x8106;&#x5F31;&#x201D;&#x3002;</li></ol><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Java&#xFF0C;Python&#xFF0C;JavaScript&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;mock&#x5E93;&#x3002;Python&#x7684;Mock&#x7C7B;&#xFF0C;Java&#x7684;Mockito/PowerMock&#xFF0C;JavaScript&#x7684;Sinon&#x3002;&#x4E8E;&#x662F;&#xFF0C;&#x5728;&#x7F51;&#x4E0A;&#x641C;&#x7D22;&#x4E86;&#x4E00;&#x4E0B;C/C++&#x7684;Mock&#x5E93;&#xFF0C;&#x4E8E;&#x662F;&#x770B;&#x5230;&#x4E86;gtest&#xFF0C;gmock&#x3002;&#x7136;&#x540E;&#x5C31;&#x6709;&#x4E86;&#x8FD9;&#x4E00;&#x7BC7;&#x3002;</p><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 34.4px; margin: 1.2em 0 .6em 0; text-align: start;\">&#x7B80;&#x4ECB;</h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E0D;&#x7528;&#x53BB;&#x7F51;&#x4E0A;&#x8D39;&#x5FC3;&#x627E;&#x6559;&#x7A0B;&#xFF0C;&#x4E24;&#x4E2A;&#x9879;&#x76EE;&#x7684;&#x6587;&#x6863;&#x90FD;&#x975E;&#x5E38;&#x68D2;&#x3002;&#x5165;&#x53E3;&#x7EDF;&#x4E00;&#x5728;<a href=\"https://github.com/google/googletest\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">gtest GitHub&#x9879;&#x76EE;&#x4E3B;&#x9875;</a>&#x4E0A;&#x3002;&#x800C;&#x4E14;&#x8BE5;&#x6587;&#x6863;&#x4E0D;&#x4EC5;&#x5F88;&#x597D;&#x7684;&#x4ECB;&#x7ECD;&#x4E86;gtest&#xFF0C;gmock&#x7684;&#x7528;&#x6CD5;&#xFF0C;&#x5176;&#x4E2D;&#x8FD8;&#x6D89;&#x53CA;&#x4E86;&#x5F88;&#x591A;TDD&#x6216;&#x8005;UnitTest&#x7684;&#x771F;&#x77E5;&#x707C;&#x89C1;&#xFF0C;&#x5F88;&#x503C;&#x5F97;&#x8BFB;&#x4E00;&#x8BFB;&#x3002; <br>&#x8981;&#x4F7F;&#x7528;gtest&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF1A;&#x7F16;&#x8BD1;&#x51FA;gtest&#xFF0C;gmock&#xFF0C;&#x518D;&#x94FE;&#x5165;&#x4F60;&#x7684;&#x6D4B;&#x8BD5;&#x7A0B;&#x5E8F;&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x7F16;&#x8BD1;gtest/gmock</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">gtest&#xFF0C;gmock&#x5747;&#x7528;cmake&#x6765;&#x7BA1;&#x7406;&#x8DE8;&#x5E73;&#x53F0;&#xFF0C;&#x5148;&#x7528;cmake&#x6765;&#x751F;&#x6210;Makefile&#x3002;&#x7528;&#x547D;&#x4EE4;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">cmake -G &quot;Unix Makefiles&quot; /path/to/CMakeList.txt</code></p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Makefile</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7136;&#x540E;&#x6309;&#x7167;&#x4E0B;&#x9762;&#x7F16;&#x5199;Makefile&#x3002;&#x6CE8;&#x610F;gmock_main&#x662F;&#x4E00;&#x4E2A;main&#x51FD;&#x6570;&#x6765;&#x8C03;&#x7528;&#x6240;&#x6709;&#x7684;test case&#xFF0C;&#x7701;&#x5F97;&#x81EA;&#x5DF1;&#x5199;main&#x51FD;&#x6570;&#x4E86;&#x3002;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\">CC = gcc</div><div style=\"line-height: 1.6;\">CPP = g++</div><div style=\"line-height: 1.6;\">LINK = g++</div><div style=\"line-height: 1.6;\">CFLAGS = -g -Wall -Werror -Wextra -std=gnu99</div><div style=\"line-height: 1.6;\">CPPFLAGS = -g -Wall -Werror -Wextra</div><div style=\"line-height: 1.6;\">LIBS = -L./lib -lgtest -lgmock -lgmock_main -lpthread</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">C__SOURCES = $(wildcard *.c)</div><div style=\"line-height: 1.6;\">CPPSOURCES = $(wildcard *.cpp)</div><div style=\"line-height: 1.6;\">OBJECTS = $(patsubst %.c, %.o, $(C__SOURCES)) $(patsubst %.cpp, %.o, $(CPPSOURCES))</div><div style=\"line-height: 1.6;\">TARGET = test_exe</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">first: all</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">%.o: %.c</div><div style=\"line-height: 1.6;\">    $(CC) $(INCLUDES) -c $(CFLAGS) -o $@ $&lt;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">%.o: %.cpp</div><div style=\"line-height: 1.6;\">    $(CPP) $(INCLUDES) -c $(CPPFLAGS) -o $@ $&lt;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">all: $(TARGET)</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">$(TARGET): $(OBJECTS)</div><div style=\"line-height: 1.6;\">    $(LINK) $(CPPFLAGS) $(LIBS) -o $(TARGET) $(OBJECTS)</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">.PHONY : clean</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">clean:</div><div style=\"line-height: 1.6;\">    rm -f $(TARGET) $(OBJECTS)</div></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Terms</h3><table style=\"border-collapse: collapse; border-spacing: 0; margin-bottom: 20px; line-height: 1.6;\"><thead style=\"line-height: 1.6;\"><tr style=\"line-height: 1.6;\"><th align=\"center\" style=\"font-weight: bold; vertical-align: bottom; padding: .5em; border-top: 0; border: 1px solid #ddd; line-height: 1.6; text-align: center;\">Meaning</th><th align=\"center\" style=\"font-weight: bold; vertical-align: bottom; padding: .5em; border-top: 0; border: 1px solid #ddd; line-height: 1.6; text-align: center;\">Google Test Term</th><th align=\"center\" style=\"font-weight: bold; vertical-align: bottom; padding: .5em; border-top: 0; border: 1px solid #ddd; line-height: 1.6; text-align: center;\">ISTQB Term</th></tr></thead><tbody style=\"line-height: 1.6;\"><tr style=\"line-height: 1.6;\"><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">Exercise a particular program path with specific input values and verify the results</td><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">TEST()</td><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">Test Case</td></tr><tr style=\"line-height: 1.6;\"><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">A set of several tests related to one component</td><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">Test Case</td><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">Test Suite</td></tr></tbody></table><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Test</h3><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\">#<span style=\"display: inline; line-height: 1.6;\">include</span> <span style=\"display: inline; line-height: 1.6;\">&quot;gtest/gtest.h&quot;</span></span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\">#<span style=\"display: inline; line-height: 1.6;\">include</span> <span style=\"display: inline; line-height: 1.6;\">&quot;gmock/gmock.h&quot;</span></span></div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> ::testing::Return;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> ::testing::Test;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> ::testing::_;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> ::testing::AtLeast;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">TEST(TestCaseName, should_this_test_do)</div><div style=\"line-height: 1.6;\">&#123;</div><div style=\"line-height: 1.6;\">    ...</div><div style=\"line-height: 1.6;\">    EXPECT_STREQ(<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">&quot;&#123;&#125;&quot;</span>, str);</div><div style=\"line-height: 1.6;\">&#125;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E2D;&#x95F4;&#x7684;&#x90A3;&#x5806;namespace&#x90FD;&#x662F;gtest/gmock&#x5E93;&#x91CC;&#x5B9A;&#x4E49;&#x7684;matcher&#x5B8F;&#x6216;&#x8005;&#x5404;&#x79CD;&#x6709;&#x7528;&#x7684;&#x5B8F;&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Test Fixture</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5728;&#x6D4B;&#x8BD5;&#x6709;&#x91CD;&#x590D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x8981;&#x7528;&#x5230;Test Fixture&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;setUp / tearDown&#x3002;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">class</span> <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">QueueTest</span> : public ::testing::<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Test</span> &#123;</span></div><div style=\"line-height: 1.6;\"> protected:</div><div style=\"line-height: 1.6;\">  virtual void <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">SetUp</span>() &#123;</div><div style=\"line-height: 1.6;\">    q1_.<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Enqueue</span>(1);</div><div style=\"line-height: 1.6;\">    q2_.<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Enqueue</span>(2);</div><div style=\"line-height: 1.6;\">    q2_.<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Enqueue</span>(3);</div><div style=\"line-height: 1.6;\">  &#125;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">  // virtual void <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">TearDown</span>() &#123;&#125;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Queue</span>&lt;int&gt; q0_;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Queue</span>&lt;int&gt; q1_;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Queue</span>&lt;int&gt; q2_;</div><div style=\"line-height: 1.6;\">&#125;;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #e6db74;\">TEST_F</span>(<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">QueueTest</span>, <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">IsEmptyInitially</span>) &#123;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">EXPECT_EQ</span>(0, <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">q0_</span>.<span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">size</span>());</div><div style=\"line-height: 1.6;\">&#125;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #e6db74;\">TEST_F</span>(<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">QueueTest</span>, <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">DequeueWorks</span>) &#123;</div><div style=\"line-height: 1.6;\">  int* n = q0_.<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Dequeue</span>();</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">EXPECT_EQ</span>(<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">NULL</span>, <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">n</span>);</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">  n = q1_.<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Dequeue</span>();</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">ASSERT_TRUE</span>(<span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">n</span> != <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">NULL</span>);</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">EXPECT_EQ</span>(1, *<span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">n</span>);</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">EXPECT_EQ</span>(0, <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">q1_</span>.<span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">size</span>());</div><div style=\"line-height: 1.6;\">  delete n;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">  n = q2_.<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Dequeue</span>();</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">ASSERT_TRUE</span>(<span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">n</span> != <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">NULL</span>);</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">EXPECT_EQ</span>(2, *<span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">n</span>);</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">EXPECT_EQ</span>(1, <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">q2_</span>.<span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">size</span>());</div><div style=\"line-height: 1.6;\">  delete n;</div><div style=\"line-height: 1.6;\">&#125;</div></code></pre><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">constructor/destructor vs. SetUp/TearDown</h4><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\">When you need to write per-test set-up and tear-down logic, you have the choice between using the test fixture constructor/destructor or SetUp()/TearDown(). The former is usually preferred, as it has the following benefits:</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">By initializing a member variable in the constructor, we have the option to make it const, which helps prevent accidental changes to its value and makes the tests more obviously correct.</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">In case we need to subclass the test fixture class, the subclass&#x2019; constructor is guaranteed to call the base class&#x2019; constructor first, and the subclass&#x2019; destructor is guaranteed to call the base class&#x2019; destructor afterward. </strong>With SetUp()/TearDown(), a subclass may make the mistake of forgetting to call the base class&#x2019; SetUp()/TearDown() or call them at the wrong moment.</li></ul><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\">Benefit for using SetUp/TearDown:</p><ul style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">If the tear-down operation could throw an exception, you must use TearDown() as opposed to the destructor, as throwing in a destructor leads to undefined behavior and usually will kill your program right away. Note that many standard libraries (like STL) may throw when exceptions are enabled in the compiler. Therefore you should prefer TearDown() if you want to write portable tests that work with or without exceptions.</li><li style=\"line-height: 1.6;\">The assertion macros throw an exception when flag &#x2013;gtest_throw_on_failure is specified. Therefore, you shouldn&#x2019;t use Google Test assertions in a destructor if you plan to run your tests with this flag.</li><li style=\"line-height: 1.6;\">In a constructor or destructor, you cannot make a virtual function call on this object. (You can call a method declared as virtual, but it will be statically bound.) Therefore, if you need to call a method that will be overriden in a derived class, you have to use SetUp()/TearDown().</li></ul></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7B80;&#x8A00;&#x4E4B;&#xFF0C;&#x5728;&#x903B;&#x8F91;&#x4E0A;&#xFF0C;&#x8FD9;&#x4E24;&#x7EC4;&#x7684;&#x4F5C;&#x7528;&#x76F8;&#x540C;&#xFF0C;&#x90FD;&#x662F;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x4E4B;&#x524D;&#x4E4B;&#x540E;&#x4F1A;&#x505A;&#x4E00;&#x4E9B;&#x5904;&#x7406;&#x5DE5;&#x4F5C;&#x3002;Constructor/Destructor&#x7684;&#x597D;&#x5904;&#x662F;&#x63D0;&#x4F9B;&#x4E86;&#x7EE7;&#x627F;&#x3002;setUp/tearDown&#x7684;&#x597D;&#x5904;&#x662F;&#x53EF;&#x4EE5;&#x5904;&#x7406;exception&#xFF0C;&#x8FD9;&#x662F;&#x4E0D;&#x80FD;&#x653E;&#x5728;&#x6790;&#x6784;&#x51FD;&#x6570;&#x91CC;&#x7684;&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">SetUpTestCase / TearDownTestCase</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Test Case&#x7EA7;&#x522B;&#x7684;SetUp/TearDown</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> FooTest : <span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span> ::testing::Test &#123;</div><div style=\"line-height: 1.6;\"> <span style=\"display: inline; line-height: 1.6; color: #f92672;\">protected</span>:</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Per-test-case set-up.</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Called before the first test in this test case.</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Can be omitted if not needed.</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">static</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">SetUpTestCase</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;</div><div style=\"line-height: 1.6;\">    shared_resource_ = <span style=\"display: inline; line-height: 1.6; color: #f92672;\">new</span> ...;</div><div style=\"line-height: 1.6;\">  &#125;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Per-test-case tear-down.</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Called after the last test in this test case.</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Can be omitted if not needed.</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">static</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">TearDownTestCase</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\">delete</span> shared_resource_;</div><div style=\"line-height: 1.6;\">    shared_resource_ = <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">NULL</span>;</div><div style=\"line-height: 1.6;\">  &#125;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// You can define per-test set-up and tear-down logic as usual.</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">virtual</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">SetUp</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123; ... &#125;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">virtual</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">TearDown</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123; ... &#125;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Some expensive resource shared by all tests.</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\">static</span> T* shared_resource_;</div><div style=\"line-height: 1.6;\">&#125;;</div></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">SetUp/TearDown Environment</h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><ul style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">First, you subclass the ::testing::Environment class to define a test environment, which knows how to set-up and tear-down:</li><li style=\"line-height: 1.6;\">Then, you register an instance of your environment class with Google Test by calling the <code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">::testing::AddGlobalTestEnvironment()</code> function: <br>Now, when RUN_ALL_TESTS() is called, it first calls the SetUp() method of the environment object, then runs the tests if there was no fatal failures, and finally calls TearDown() of the environment object.</li><li style=\"line-height: 1.6;\">It&#x2019;s OK to register multiple environment objects. In this case, their SetUp() will be called in the order they are registered, and their TearDown() will be called in the reverse order.</li><li style=\"line-height: 1.6;\">Note that Google Test takes ownership of the registered environment objects. Therefore do not delete them by yourself.</li></ul></blockquote><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> Environment &#123;</div><div style=\"line-height: 1.6;\"> <span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span>:</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\">virtual</span> ~Environment() &#123;&#125;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Override this to define how to set up the environment.</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">virtual</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">SetUp</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;&#125;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Override this to define how to tear down the environment.</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">virtual</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">TearDown</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;&#125;</div><div style=\"line-height: 1.6;\">&#125;;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">Environment* <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">AddGlobalTestEnvironment</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(Environment* env)</span></span>;</div></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x65AD;&#x8A00;</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6709;&#x4E24;&#x79CD;&#x65AD;&#x8A00;EXPECT_xxx&#x548C;ASSERT_xxx&#x3002;&#x524D;&#x8005;&#x4F1A;&#x8BA9;&#x6D4B;&#x8BD5;&#x7EC8;&#x6B62;&#xFF0C;&#x540E;&#x8005;&#x4E0D;&#x4F1A;&#xFF0C;&#x53EA;&#x4F1A;&#x8BA9;&#x6D4B;&#x8BD5;fail&#x3002;</p><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 34.4px; margin: 1.2em 0 .6em 0; text-align: start;\">gmock</h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E4B;&#x6240;&#x4EE5;&#x8981;&#x5207;&#x5230;gtest&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x539F;&#x56E0;&#x5C31;&#x662F;gmock&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x4E13;&#x5F00;&#x4E00;&#x7AE0;&#x91CD;&#x70B9;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x3002;&#x6240;&#x6709;&#x5185;&#x5BB9;&#x5747;&#x6765;&#x81EA;&#x4E8E;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x3002;&#x5185;&#x5BB9;&#x6DF1;&#x5EA6;&#x7531;&#x6D45;&#x5165;&#x6DF1;&#xFF0C;&#x4F9D;&#x6B21;&#x5982;&#x4E0B;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"https://github.com/google/googletest/blob/master/googlemock/docs/ForDummies.md\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Google Mock for Dummies</a></li><li style=\"line-height: 1.6;\"><a href=\"https://github.com/google/googletest/blob/master/googlemock/docs/CookBook.md\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">CookBook</a></li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6700;&#x540E;&#x8FD8;&#x6709;&#x53C2;&#x8003;&#x624B;&#x518C;:</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"https://github.com/google/googletest/blob/master/googlemock/docs/CheatSheet.md\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Cheat Sheet</a></li></ul><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x7B80;&#x4ECB;</h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">Google C++ Mocking Framework (or Google Mock for short) is a library (sometimes we also call it a &#x201C;framework&#x201D; to make it sound cool) for creating mock classes and using them. It does to C++ what jMock and EasyMock do to Java.</p></blockquote><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x4F55;&#x4E3A;Mock&#xFF1F;</h4><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Mocks</strong> are objects pre-programmed with expectations, which form a specification of the calls they are expected to receive.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x76F8;&#x5E94;&#x7684;&#x8FD8;&#x6709;Fake&#x548C;Stub</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Fake</strong> objects have working implementations, but usually take some shortcut (perhaps to make the operations less expensive), which makes them not suitable for production. An in-memory file system would be an example of a fake.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">gmock&#x7684;&#x6587;&#x6863;&#x91CC;&#x53EA;&#x63D0;&#x5230;&#x4E86;Fake&#xFF0C;&#x4ECE;Martin Fowler&#x7684;&#x6587;&#x7AE0;<a href=\"https://martinfowler.com/articles/mocksArentStubs.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mocks Aren&#x2019;t Stubs</a>&#x4E2D;&#x6458;&#x5F55;&#x5982;&#x4E0B;:</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Stubs</strong> provide canned answers to calls made during the test, usually not responding at all to anything outside what&#x2019;s programmed in for the test.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E09;&#x8005;&#x4F5C;&#x7528;&#x76F8;&#x540C;&#xFF0C;&#x90FD;&#x662F;&#x6A21;&#x62DF;&#x7CFB;&#x7EDF;&#x5176;&#x4ED6;&#x90E8;&#x5206;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x8FBE;&#x5230;&#x4EE3;&#x7801;&#x9694;&#x79BB;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x65B9;&#x4FBF;&#x6D4B;&#x8BD5;&#x3002;&#x4F46;&#x662F;Mock&#x7684;&#x7279;&#x70B9;&#x662F;&#x66F4;OO&#x5316;&#xFF0C;&#x4E5F;&#x7B26;&#x5408;TDD&#x6216;&#x8005;BDD&#x7684;&#x601D;&#x60F3;&#x2014;&#x2014;&#x9488;&#x5BF9;&#x4E00;&#x4E2A;object&#x8BBE;&#x7F6E;&#x671F;&#x5F85;&#xFF0C;&#x518D;&#x5BF9;&#x9F50;verify&#x3002;</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Mocks vs. Stubs - from Martin Fowler</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\">In order to use state verification on the stub, I need to make some extra methods on the stub to help with verification. As a result the stub implements MailService but adds extra test methods.</p><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">Mock objects always use behavior verification, a stub can go either way. Meszaros refers to stubs that use behavior verification as a Test Spy. The difference is in how exactly the double runs and verifies and I&#x2019;ll leave that for you to explore on your own.</p></blockquote><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Getting Started</h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Class to Mock</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">Turtle</span> &#123;</div><div style=\"line-height: 1.6;\">  ...</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\">virtual</span> ~Turtle() &#123;&#125;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">virtual</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">PenUp</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">) </span>= <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>;</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">virtual</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">PenDown</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">) </span>= <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>;</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">virtual</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">Forward</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> distance</span>) </span>= <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>;</div><div style=\"line-height: 1.6;\">&#125;;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Mock class</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\">#<span style=\"display: inline; line-height: 1.6;\">include</span> <span style=\"display: inline; line-height: 1.6;\">&quot;gmock/gmock.h&quot;</span>  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Brings in Google Mock.</span></span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> MockTurtle : <span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span> Turtle &#123;</div><div style=\"line-height: 1.6;\"> <span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span>:</div><div style=\"line-height: 1.6;\">  ...</div><div style=\"line-height: 1.6;\">  MOCK_METHOD0(PenUp, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">void</span>());</div><div style=\"line-height: 1.6;\">  MOCK_METHOD0(PenDown, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">void</span>());</div><div style=\"line-height: 1.6;\">  MOCK_METHOD1(Forward, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">void</span>(<span style=\"display: inline; line-height: 1.6; color: #f92672;\">int</span> distance));</div><div style=\"line-height: 1.6;\">&#125;;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x9488;&#x5BF9;&#x5F85;Mock&#x7684;Turtle class&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;:</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">Note that the <strong style=\"font-weight: bold; line-height: 1.6;\">destructor of Turtle must be virtual</strong>, as is the case for all classes you intend to inherit from - otherwise the destructor of the derived class will not be called when you delete an object through a base pointer, and you&#x2019;ll get corrupted program states like memory leaks.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Use it</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\">#<span style=\"display: inline; line-height: 1.6;\">include</span> <span style=\"display: inline; line-height: 1.6;\">&quot;path/to/mock-turtle.h&quot;</span></span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\">#<span style=\"display: inline; line-height: 1.6;\">include</span> <span style=\"display: inline; line-height: 1.6;\">&quot;gmock/gmock.h&quot;</span></span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\">#<span style=\"display: inline; line-height: 1.6;\">include</span> <span style=\"display: inline; line-height: 1.6;\">&quot;gtest/gtest.h&quot;</span></span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> ::testing::AtLeast;                     <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// #1</span></div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">TEST(PainterTest, CanDrawSomething) &#123;</div><div style=\"line-height: 1.6;\">  MockTurtle turtle;                          <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// #2</span></div><div style=\"line-height: 1.6;\">  EXPECT_CALL(turtle, PenDown())              <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// #3</span></div><div style=\"line-height: 1.6;\">      .Times(AtLeast(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">1</span>));</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\">Painter <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">painter</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(&amp;turtle)</span></span>;                   <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// #4</span></div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">  EXPECT_TRUE(painter.DrawCircle(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">10</span>));</div><div style=\"line-height: 1.6;\">&#125;                                             <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// #5</span></div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">main</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(<span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> argc, <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">char</span>** argv)</span> </span>&#123;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// The following line must be executed to initialize Google Mock</span></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// (and Google Test) before running the tests.</span></div><div style=\"line-height: 1.6;\">  ::testing::InitGoogleMock(&amp;argc, argv);</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6; color: #f92672;\">return</span> RUN_ALL_TESTS();</div><div style=\"line-height: 1.6;\">&#125;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5982;&#x679C;&#x4F60;&#x613F;&#x610F;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5199;main&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x5077;&#x61D2;&#xFF0C;&#x8BB0;&#x5F97;&#x5728;Makefile&#x91CC;link gmock_main&#x3002; <br>&#x6309;Google&#x7684;&#x8BF4;&#x6CD5;&#xFF0C;gmock&#x4E5F;&#x53EF;&#x4EE5;&#x548C;&#x5176;&#x4ED6;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x517C;&#x5BB9;&#xFF0C;&#x4F46;&#x603B;&#x611F;&#x89C9;&#x633A;&#x60AC;&#x7684;&#x3002;</p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x4E00;&#x4E9B;&#x6709;&#x7528;&#x7684;&#x5DE5;&#x5177;</h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Marcher</strong> <br><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">EXPECT_CALL(turtle, Forward(_));</code> <br>&#xA0;&#xA0;&#xA0;&#xA0; &#x4EE5;&#x4EFB;&#x610F;&#x53C2;&#x6570;&#x8C03;&#x7528;Forward <br><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">EXPECT_CALL(turtle, Forward(Ge(100)));</code> <br>&#xA0;&#xA0;&#xA0;&#xA0; &#x4EE5;&#x5927;&#x4E8E;100&#x7684;&#x6574;&#x6570;&#x8C03;&#x7528;Forward</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Cardinalities: How Many Times Will It Be Called?</strong></p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><ul style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">If neither WillOnce() nor WillRepeatedly() is in the EXPECT_CALL(), the inferred cardinality is Times(1).</li><li style=\"line-height: 1.6;\">If there are n WillOnce()&#x2019;s but no WillRepeatedly(), where n &gt;= 1, the cardinality is Times(n).</li><li style=\"line-height: 1.6;\">If there are n WillOnce()&#x2019;s and one WillRepeatedly(), where n &gt;= 0, the cardinality is Times(AtLeast(n)).</li></ul></blockquote><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\">EXPECT_CALL(mockObj, <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">func</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">()</span>)</span></div><div style=\"line-height: 1.6;\">    .Times(AtLeast(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">1</span>))</div><div style=\"line-height: 1.6;\">    .WillOnce(<span style=\"display: inline; line-height: 1.6; color: #f92672;\">Return</span>(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">123</span>))</div><div style=\"line-height: 1.6;\">    .WillRepeatedly(<span style=\"display: inline; line-height: 1.6; color: #f92672;\">Return</span>(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">456</span>))</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E0A;&#x9762;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x8981;&#x6C42;func&#x51FD;&#x6570;&#x81F3;&#x5C11;&#x8FD0;&#x884C;&#x4E00;&#x6B21;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x8FD4;&#x56DE;123&#xFF0C;&#x4E4B;&#x540E;&#x6BCF;&#x6B21;&#x8FD4;&#x56DE;456&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Important note</strong>: The EXPECT_CALL() statement evaluates the action clause only once, even though the action may be performed many times. Therefore you must be careful about side effects. The following may not do what you want:</p></blockquote><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #e6db74;\">int</span> <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">n</span> = <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">100</span>;</div><div style=\"line-height: 1.6;\">EXPECT_CALL(turtle, GetX())</div><div style=\"line-height: 1.6;\">.Times(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">4</span>)</div><div style=\"line-height: 1.6;\">.WillRepeatedly(Return(<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">n</span>++));</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x56E0;&#x4E3A;Return&#x662F;&#x5B8F;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x4F1A;&#x66FF;&#x6362;&#x4E00;&#x6B21;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x7BA1;GetX&#x8C03;&#x7528;&#x51E0;&#x6B21;&#xFF0C;&#x8FD4;&#x56DE;&#x90FD;&#x662F;101&#xFF0C;&#x800C;&#x4E0D;&#x662F;101,102,103,&#x2026;</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">All Expectations Are Sticky</strong> <br>&#x6240;&#x8C13;&#x7684;sticky&#x5C31;&#x662F;EXPECT_CALL&#x603B;&#x662F;&#x751F;&#x6548;&#x7684;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x663E;&#x793A;&#x7684;&#x5C06;&#x5176;&#x5931;&#x6548;&#x3002;&#x5982;&#x4E0B;&#xFF0C;&#x6240;&#x6709;&#x7684;EXPECT_CALL&#x90FD;&#x4F1A;&#x751F;&#x6548;&#xFF0C;&#x90A3;&#x4E48;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x4F1A;&#x8986;&#x76D6;&#x524D;&#x9762;&#x6240;&#x6709;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;GetX&#x603B;&#x4F1A;&#x8FD4;&#x56DE;10&#x3002;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using </span>::<span style=\"display: inline; line-height: 1.6; color: #f92672;\">testing</span>::Return;</div><div style=\"line-height: 1.6;\">...</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\">for</span> (int i = n; i &gt; <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>; i--) &#123;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6;\">EXPECT_CALL</span>(turtle, GetX())</div><div style=\"line-height: 1.6;\">      <span style=\"display: inline; line-height: 1.6;\">.WillOnce</span>(Return(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">10</span>*i));</div><div style=\"line-height: 1.6;\">&#125;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5982;&#x679C;&#x5E0C;&#x671B;&#x4ED6;&#x8FD4;&#x56DE;&#xFF0C;30,20,10&#xFF0C;&#x2026;&#xFF0C;&#x5E94;&#x8BE5;&#x8FD9;&#x4E48;&#x5199;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using </span>::<span style=\"display: inline; line-height: 1.6; color: #f92672;\">testing</span>::Return;</div><div style=\"line-height: 1.6;\">...</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\">for</span> (int i = n; i &gt; <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>; i--) &#123;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6;\">EXPECT_CALL</span>(turtle, GetX())</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6;\">.WillOnce</span>(Return(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">10</span>*i))</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6;\">.RetiresOnSaturation</span>();</div><div style=\"line-height: 1.6;\">&#125;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">RetireOnSaturation</code>&#x5C31;&#x662F;&#x663E;&#x793A;&#x7684;&#x8BA9;&#x5176;&#x5931;&#x6548;&#x3002;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x529E;&#x6CD5;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using </span>::<span style=\"display: inline; line-height: 1.6; color: #f92672;\">testing</span>::InSequence;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using </span>::<span style=\"display: inline; line-height: 1.6; color: #f92672;\">testing</span>::Return;</div><div style=\"line-height: 1.6;\">...</div><div style=\"line-height: 1.6;\">&#123;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6;\">InSequence</span> <span style=\"display: inline; line-height: 1.6;\">s</span>;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6;\">for</span> (int i = <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">1</span>; i &lt;= n; i++) &#123;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6;\">EXPECT_CALL</span>(turtle, GetX())</div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6;\">.WillOnce</span>(Return(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">10</span>*i))</div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6;\">.RetiresOnSaturation</span>();</div><div style=\"line-height: 1.6;\">  &#125;</div><div style=\"line-height: 1.6;\">&#125;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x56E0;&#x4E3A;InSequence&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x5728;&#x524D;&#x9762;&#x7684;EXPECT_CALL&#x751F;&#x6548;&#x4EE5;&#x540E;&#xFF0C;&#x5C31;&#x4F1A;&#x81EA;&#x52A8;&#x5931;&#x6548;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x4F1A;&#x4EA7;&#x751F;&#x8986;&#x76D6;&#x7684;&#x6548;&#x679C;&#x3002; <br><strong style=\"font-weight: bold; line-height: 1.6;\">Ordered vs Unordered Calls</strong></p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using </span>::<span style=\"display: inline; line-height: 1.6; color: #f92672;\">testing</span>::InSequence;...</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\">TEST</span>(FooTest, DrawsLineSegment) &#123;</div><div style=\"line-height: 1.6;\">  ...</div><div style=\"line-height: 1.6;\">  &#123;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6;\">InSequence</span> <span style=\"display: inline; line-height: 1.6;\">dummy</span>;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6;\">EXPECT_CALL</span>(turtle, PenDown());</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6;\">EXPECT_CALL</span>(turtle, Forward(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">100</span>));</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6;\">EXPECT_CALL</span>(turtle, PenUp());</div><div style=\"line-height: 1.6;\">  &#125;</div><div style=\"line-height: 1.6;\">  <span style=\"display: inline; line-height: 1.6;\">Foo</span>();</div><div style=\"line-height: 1.6;\">&#125;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Expecting Partially Ordered Calls</strong> <br>Google Mock allows you to impose an arbitrary DAG (directed acyclic graph) on the calls. One way to express the DAG is to <br>use the After clause of EXPECT_CALL .</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\">using ::testing::Sequence<span style=\"display: inline; line-height: 1.6; color: #75715e;\">;</span></div><div style=\"line-height: 1.6;\">Sequence <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">s1</span>, <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">s2</span><span style=\"display: inline; line-height: 1.6; color: #75715e;\">;</span></div><div style=\"line-height: 1.6;\">EXPECT_CALL(foo, A())</div><div style=\"line-height: 1.6;\">    .<span style=\"display: inline; line-height: 1.6; color: #f92672;\">InSequence(s1, </span><span style=\"display: inline; line-height: 1.6; color: #e6db74;\">s2</span>)<span style=\"display: inline; line-height: 1.6; color: #75715e;\">;</span></div><div style=\"line-height: 1.6;\">EXPECT_CALL(<span style=\"display: inline; line-height: 1.6; color: #f92672;\">bar, </span><span style=\"display: inline; line-height: 1.6; color: #f92672;\">B())</span></div><div style=\"line-height: 1.6;\">    .<span style=\"display: inline; line-height: 1.6; color: #f92672;\">InSequence(s1);</span></div><div style=\"line-height: 1.6;\">EXPECT_CALL(<span style=\"display: inline; line-height: 1.6; color: #f92672;\">bar, </span>C())</div><div style=\"line-height: 1.6;\">    .<span style=\"display: inline; line-height: 1.6; color: #f92672;\">InSequence(s2);</span></div><div style=\"line-height: 1.6;\">EXPECT_CALL(foo, D())</div><div style=\"line-height: 1.6;\">    .<span style=\"display: inline; line-height: 1.6; color: #f92672;\">InSequence(s2);</span></div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">specifies the following DAG (where s1 is A -&gt; B , and s2 is A -&gt; C -&gt; D ):</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\">     <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">+</span><span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span><span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span><span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span>&gt; <span style=\"display: inline; line-height: 1.6; color: #75715e;\">B</span></div><div style=\"line-height: 1.6;\">     <span style=\"display: inline; line-height: 1.6; color: #75715e;\">|</span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #75715e;\">A</span> <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span><span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span><span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span><span style=\"display: inline; line-height: 1.6; color: #75715e;\">|</span></div><div style=\"line-height: 1.6;\">     <span style=\"display: inline; line-height: 1.6; color: #75715e;\">|</span></div><div style=\"line-height: 1.6;\">     <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">+</span><span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span><span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span><span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span>&gt; <span style=\"display: inline; line-height: 1.6; color: #75715e;\">C</span> <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span><span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span><span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">-</span>&gt; <span style=\"display: inline; line-height: 1.6; color: #75715e;\">D</span></div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Uninteresting Calls</strong> <br>&#x8FD9;&#x662F;gmock&#x62A5;&#x7684;warning&#x3002;&#x5F53;&#x9488;&#x5BF9;&#x67D0;&#x4E00;&#x4E2A;&#x5F85;&#x6D4B;&#x51FD;&#x6570;&#x8BBE;&#x7F6E;&#x4E86;EXPECT spec&#xFF0C;&#x5374;&#x5E76;&#x6CA1;&#x6709;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x62A5;&#x8FD9;&#x4E2A;warning&#x3002;&#x6B64;&#x65F6;gmock&#x8BA4;&#x4E3A;&#x4F60;&#x5BF9;&#x8BE5;&#x51FD;&#x6570;&#x5E76;&#x6CA1;&#x6709;&#x5174;&#x8DA3;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x8FD9;&#x4E2A;EXPECT spec&#x3002;&#x5F53;&#x7136;&#x4F60;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x5FFD;&#x7565;&#x8FD9;&#x4E2A;warning&#xFF0C;&#x4F46;&#x6211;&#x8BA4;&#x4E3A;&#x51FA;&#x8FD9;&#x4E2A;warning&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x591A;&#x534A;&#x662F;test&#x6F0F;&#x5199;&#x4E86;&#x4EC0;&#x4E48;&#x3002;</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Returning Live Values from Mock Methods</strong></p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">using</span> testing::<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">ByRef</span>;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">using</span> testing::<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Return</span>;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">class</span> <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">MockFoo</span> : public <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Foo</span> &#123;</span></div><div style=\"line-height: 1.6;\">    public:</div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">MOCK_METHOD0</span>(<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">GetValue</span>, <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">int</span>());</div><div style=\"line-height: 1.6;\">&#125;;</div><div style=\"line-height: 1.6;\">...</div><div style=\"line-height: 1.6;\">int x = 0;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #e6db74;\">MockFoo</span> foo;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #e6db74;\">EXPECT_CALL</span>(<span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">foo</span>, <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">GetValue</span>())</div><div style=\"line-height: 1.6;\">    // .<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">WillRepeatedly</span>(<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">Return</span>(<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">ByRef(x)</span>)); <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">X</span> error</div><div style=\"line-height: 1.6;\">    .<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">WillRepeatedly</span>(<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">ReturnPointee(x)</span>);</div><div style=\"line-height: 1.6;\">x = 42;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #e6db74;\">EXPECT_EQ</span>(42, <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">foo</span>.<span style=\"display: inline; line-height: 1.6; color: #e6db74;\">GetValue</span>());</div></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x4E00;&#x4E9B;&#x6D4B;&#x8BD5;case</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5199;Unit Test&#x5E76;&#x4E0D;&#x50CF;&#x60F3;&#x50CF;&#x7684;&#x90A3;&#x4E48;&#x7B80;&#x5355;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x8C03;&#x7528;&#x4E86;&#x6846;&#x67B6;&#xFF0C;&#x9488;&#x5BF9;&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x5199;test case&#x5C31;&#x53EF;&#x4EE5;&#x3002;&#x6309;&#x6211;&#x76EE;&#x524D;&#x7684;&#x7406;&#x89E3;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#x6311;&#x6218;&#xFF1A;</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; margin-bottom: 0; line-height: 1.6;\">Test Case&#x5982;&#x4F55;&#x89E3;&#x8026;&#x3002;&#x4E0D;&#x8981;&#x6709;&#x91CD;&#x590D;&#x6D4B;&#x8BD5;(overlap)&#x3002; <br>&#x4F8B;&#x5982;&#xFF1A;&#x5728;&#x5199;A&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5199;&#x4E86;&#x6D4B;&#x8BD5;testA&#xFF0C;B&#x51FD;&#x6570;&#x4F1A;&#x8C03;&#x7528;A&#x51FD;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x5199;&#x5B8C;A&#x4E4B;&#x540E;&#x5199;B&#x7684;&#x6D4B;&#x8BD5;testB&#x65F6;&#xFF0C;&#x662F;&#x5426;&#x8981;&#x5C06;A mock/fake/stub&#x6389;? &#x5982;&#x679C;&#x4E0D;&#x5C06;A&#x51FD;&#x6570;Fake&#x6389;&#xFF0C;&#x5219;testA&#x548C;testB&#x4E4B;&#x95F4;&#x5C31;&#x662F;&#x6709;overlap&#x3002;&#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x6709;&#x53D6;&#x820D;&#xFF0C;&#x6700;&#x4F73;&#x72B6;&#x6001;&#x5E94;&#x5F53;&#x662F;&#x6B64;&#x65F6;&#xFF0C;&#x5C06;testA&#x5220;&#x9664;&#xFF0C;&#x53EA;&#x4FDD;&#x7559;testB&#x3002;&#x4F46;&#x4ECD;&#x5E94;&#x6839;&#x636E;&#x5177;&#x4F53;&#x60C5;&#x51B5;&#x800C;&#x5B9A;&#x3002;</p></li><li style=\"line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; margin-bottom: 0; line-height: 1.6;\">&#x5982;&#x4F55;&#x9488;&#x5BF9;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x8FDB;&#x884C;mock&#x5316;&#x3002; <br>&#x4F8B;&#x5982;&#x51FA;&#x73B0;&#x8FD9;&#x6837;&#x7684;&#x8BED;&#x53E5;: <code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">B = new A</code>&#xFF0C;&#x5219;&#x7C7B;B&#x4F9D;&#x8D56;&#x4E8E;&#x7C7B;A&#x3002;&#x4F46;&#x7C7B;A&#x5E76;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x7F16;&#x8BD1;&#x8FDB;test&#x3002;&#x56E0;&#x4E3A;&#x4E00;&#x65E6;&#x52A0;&#x5165;A&#xFF0C;&#x5219;&#x52BF;&#x5FC5;&#x4F1A;&#x5F15;&#x5165;&#x66F4;&#x591A;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x800C;&#x5BFC;&#x81F4;test&#x7F16;&#x8BD1;&#x5D29;&#x6E83;&#x3002;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x7684;&#x89E3;&#x51B3;&#x65E0;&#x7A77;&#x65E0;&#x5C3D;&#x3002;&#x5728;&#x505A;Android&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;PowerMock&#x53D6;&#x4EE3;Mockito&#x6765;Mock&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x5C06;&#x6784;&#x9020;&#x51FD;&#x6570;Fake&#x5316;&#x6210;&#x7C7B;&#x4F3C;&#x5DE5;&#x5382;&#x51FD;&#x6570;&#xFF0C;&#x8FD4;&#x56DE;&#x7C7B;&#x5B9E;&#x4F8B;&#x3002;&#x5177;&#x4F53;&#x53C2;&#x770B;&#x8FD9;&#x7BC7;&#x535A;&#x6587;<a href=\"https://zhougy0717.github.io/2016/10/19/Android%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Android&#x5355;&#x5143;&#x6D4B;&#x8BD5;</a>&#x3002; <br>&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x6309;&#x7167;&#x73B0;&#x5728;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x5176;&#x5B9E;Mock&#x6784;&#x9020;&#x51FD;&#x6570;&#x662F;&#x4E0D;&#x53EF;&#x53D6;&#x7684;&#xFF0C;&#x9996;&#x5148;&#x9020;&#x6210;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;spec&#x4E0D;&#x6E05;&#x6670;&#xFF0C;&#x8BD5;&#x60F3;&#x4E00;&#x4E2A;&#x6784;&#x9020;&#x51FD;&#x6570;&#x600E;&#x4E48;&#x4F1A;&#x8FD4;&#x56DE;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x3002;&#x5176;&#x6B21;&#xFF0C;&#x5728;C++&#x4E2D;&#x5F88;&#x96BE;&#x505A;&#x5230;Mock&#x6784;&#x9020;&#x51FD;&#x6570;&#x3002;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x5E94;&#x5F53;&#x662F;&#x8FD0;&#x7528;Dependency Injection&#x3002;&#x4F8B;&#x5982;&#xFF1A;</p></li></ol><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">A</span></div><div style=\"line-height: 1.6;\">&#123;&#125;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">B</span></div><div style=\"line-height: 1.6;\">&#123;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">func</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">)</span></span></div><div style=\"line-height: 1.6;\">    &#123;</div><div style=\"line-height: 1.6;\">        A* a = <span style=\"display: inline; line-height: 1.6; color: #f92672;\">new</span> A;</div><div style=\"line-height: 1.6;\">    &#125;</div><div style=\"line-height: 1.6;\">&#125;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7C7B;B&#x5E94;&#x5F53;&#x6539;&#x5199;&#x4E3A;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">class</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e; font-style: italic;\">B</span></span></div><div style=\"line-height: 1.6;\">&#123;</div><div style=\"line-height: 1.6;\">    void <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">func</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(A*)</span></span></div><div style=\"line-height: 1.6;\">    &#123;</div><div style=\"line-height: 1.6;\">        ...</div><div style=\"line-height: 1.6;\">    &#125;</div><div style=\"line-height: 1.6;\">&#125;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5C06;&#x7C7B;A&#x6307;&#x9488;&#x4F20;&#x5165;&#xFF0C;&#x89E3;&#x51B3;dependency&#x7684;&#x95EE;&#x9898;&#x3002;</p><ol start=\"3\" style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; margin-bottom: 0; line-height: 1.6;\">&#x5982;&#x4F55;&#x80FD;&#x591F;&#x8BA9;&#x6D4B;&#x8BD5;&#x7A33;&#x5B9A;&#xFF0C;&#x5728;&#x4EFB;&#x610F;&#x73AF;&#x5883;&#x4E0B;&#x5747;&#x8FD4;&#x56DE;&#x540C;&#x6837;&#x7684;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x3002; <br>&#x8FD9;&#x4E2A;&#x4E00;&#x822C;&#x6D89;&#x53CA;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x4F8B;&#x5982;&#x8C03;&#x7528;&#x7F51;&#x7EDC;&#x76F8;&#x5173;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5728;&#x6CA1;&#x6709;&#x7F51;&#x7EDC;&#x7684;&#x73AF;&#x5883;&#x5C31;&#x6CA1;&#x6CD5;&#x8FDB;&#x884C;&#x3002;&#x518D;&#x4F8B;&#x5982;&#x6D4B;&#x8BD5;&#x65F6;&#x64CD;&#x4F5C;&#x771F;&#x5B9E;&#x5177;&#x4F53;&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x8BE5;&#x6587;&#x4EF6;&#x88AB;&#x6D4B;&#x8BD5;&#x5916;&#x4EBA;&#x4E3A;&#x6216;&#x4EE3;&#x7801;&#x4FEE;&#x6539;&#xFF0C;&#x5219;&#x6D4B;&#x8BD5;&#x53EF;&#x80FD;&#x5C31;&#x4F1A;&#x83AB;&#x540D;&#x5931;&#x8D25;&#x3002; <br>&#x9488;&#x5BF9;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x5F53;&#x5728;&#x6D4B;&#x8BD5;&#x4E2D;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x3002;&#x4F8B;&#x5982;&#x524D;&#x8005;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x5F53;&#x5BF9;&#x7F51;&#x7EDC;&#x63A5;&#x53E3;&#x8FDB;&#x884C;Mock&#x5316;&#xFF0C;&#x540E;&#x8005;&#x5E94;&#x5F53;&#x5728;&#x6D4B;&#x8BD5;&#x7684;setUp&#x548C;tearDown&#x4E2D;&#x751F;&#x6210;&#x865A;&#x5047;&#x6587;&#x4EF6;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#xFF0C;&#x5E76;&#x5728;&#x6D4B;&#x8BD5;&#x5B8C;&#x6210;&#x65F6;&#x505A;&#x6E05;&#x7406;&#x3002;</p></li><li style=\"line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; margin-bottom: 0; line-height: 1.6;\">&#x4F1A;&#x56E0;&#x4E3A;&#x5F88;&#x5C0F;&#x7684;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x6539;&#x52A8;&#xFF0C;&#x800C;&#x5BFC;&#x81F4;&#x5927;&#x9762;&#x79EF;&#x6D4B;&#x8BD5;&#x5931;&#x8D25;&#xFF0C;&#x751A;&#x81F3;&#x6D4B;&#x8BD5;&#x5D29;&#x6E83;&#x3002; <br>&#x8FD9;&#x4E2A;&#x5C31;&#x662F;gmock&#x6587;&#x6863;&#x4E2D;&#x63D0;&#x5230;&#x7684;&#x8981;&#x9488;&#x5BF9;&#x63A5;&#x53E3;&#x7F16;&#x7A0B;&#xFF0C;&#x9488;&#x5BF9;&#x63A5;&#x53E3;&#x6D4B;&#x8BD5;&#x3002;Robert C&#xB7;Martin&#x5728;&#x300A;&#x654F;&#x6377;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#xFF0D;&#x539F;&#x5219;&#x3001;&#x6A21;&#x5F0F;&#x4E0E;&#x5B9E;&#x8DF5;&#x300B;&#x4E00;&#x4E66;&#x4E2D;&#x6709;&#x63D0;&#x51FA;&#xFF1A;&#x6240;&#x6709;&#x7684;&#x4EE3;&#x7801;&#x90FD;&#x5E94;&#x4F9D;&#x8D56;&#x4E8E;&#x62BD;&#x8C61;&#x63A5;&#x53E3;&#x3002;&#x56E0;&#x4E3A;&#x62BD;&#x8C61;&#x63A5;&#x53E3;&#x662F;&#x7ECF;&#x8FC7;&#x62BD;&#x8C61;&#x7684;&#xFF0C;&#x76F8;&#x5BF9;&#x5177;&#x4F53;&#x7684;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x8F83;&#x4E3A;&#x7A33;&#x5B9A;&#x3002;&#x800C;&#x88AB;&#x4F9D;&#x8D56;&#x7684;&#x4EE3;&#x7801;&#x5E94;&#x8BE5;&#x5C3D;&#x53EF;&#x80FD;&#x4FDD;&#x6301;&#x7A33;&#x5B9A;&#xFF0C;&#x8FD9;&#x6837;&#x57FA;&#x4E8E;&#x4E4B;&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#x624D;&#x4E0D;&#x4F1A;&#x56E0;&#x4E3A;&#x4F9D;&#x8D56;&#x7684;&#x6539;&#x52A8;&#x800C;&#x6539;&#x52A8;&#x3002;</p></li></ol><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E0B;&#x9762;&#x5217;&#x51FA;&#x51E0;&#x79CD;&#x6211;&#x5728;&#x5B9E;&#x9645;&#x5199;test case&#x65F6;&#x9047;&#x5230;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5728;gmock&#x4E2D;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x6309;&#x7167;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x8FD4;&#x56DE;&#x7ED3;&#x679C; - Fake</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4F8B;&#x5982;:</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\">class A</div><div style=\"line-height: 1.6;\">&#123;</div><div style=\"line-height: 1.6;\">    virtual <span style=\"display: inline; line-height: 1.6; color: #f92672;\">int</span> <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">func</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(<span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> a, <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> b)</span>;</span></div><div style=\"line-height: 1.6;\">&#125;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">EXPECT_CALL</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(mockA, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">func</span>()</span>)</div><div style=\"line-height: 1.6;\">    .<span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">WillRepeatedly</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(a+b)</span>;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">gmock&#x4E2D;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x505A;&#xFF1A;Using Functions/Methods/Functors as Actions</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> ::testing::_;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> ::testing::Invoke;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> MockFoo : <span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span> Foo &#123;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span>:</div><div style=\"line-height: 1.6;\">    MOCK_METHOD2(Sum, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">int</span>(<span style=\"display: inline; line-height: 1.6; color: #f92672;\">int</span> x, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">int</span> y));</div><div style=\"line-height: 1.6;\">    MOCK_METHOD1(ComplexJob, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">bool</span>(<span style=\"display: inline; line-height: 1.6; color: #f92672;\">int</span> x));</div><div style=\"line-height: 1.6;\">&#125;;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">CalculateSum</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(<span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> x, <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> y)</span> </span>&#123; <span style=\"display: inline; line-height: 1.6; color: #f92672;\">return</span> x + y; &#125;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> Helper &#123;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span>:</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">bool</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">ComplexJob</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(<span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> x)</span></span>;</div><div style=\"line-height: 1.6;\">&#125;;</div><div style=\"line-height: 1.6;\">...</div><div style=\"line-height: 1.6;\">MockFoo foo;</div><div style=\"line-height: 1.6;\">Helper helper;</div><div style=\"line-height: 1.6;\">EXPECT_CALL(foo, Sum(_, _))</div><div style=\"line-height: 1.6;\">    .WillOnce(Invoke(CalculateSum));</div><div style=\"line-height: 1.6;\">EXPECT_CALL(foo, ComplexJob(_))</div><div style=\"line-height: 1.6;\">    .WillOnce(Invoke(&amp;helper, &amp;Helper::ComplexJob));</div><div style=\"line-height: 1.6;\">foo.Sum(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">5</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">6</span>); <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Invokes CalculateSum(5, 6).</span></div><div style=\"line-height: 1.6;\">foo.ComplexJob(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">10</span>); <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Invokes helper.ComplexJob(10);</span></div></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Mock non-virtual&#x51FD;&#x6570;</h3><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #75715e;\">// A simple packet stream class. None of its members is virtual.</span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> ConcretePacketStream &#123;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span>:</div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">AppendPacket</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(Packet* new_packet)</span></span>;</div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">const</span> Packet* <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">GetPacket</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(<span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">size_t</span> packet_number)</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">const</span></span>;</div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672;\">size_t</span> NumberOfPackets() <span style=\"display: inline; line-height: 1.6; color: #f92672;\">const</span>;</div><div style=\"line-height: 1.6;\">        ...</div><div style=\"line-height: 1.6;\">&#125;;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #75715e;\">// A mock packet stream class. It inherits from no other, but defines</span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #75715e;\">// GetPacket() and NumberOfPackets().</span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> MockPacketStream &#123;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span>:</div><div style=\"line-height: 1.6;\">        MOCK_CONST_METHOD1(GetPacket, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">const</span> Packet*(<span style=\"display: inline; line-height: 1.6; color: #f92672;\">size_t</span> packet_number));</div><div style=\"line-height: 1.6;\">        MOCK_CONST_METHOD0(NumberOfPackets, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">size_t</span>());</div><div style=\"line-height: 1.6;\">        ...</div><div style=\"line-height: 1.6;\">&#125;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">template</span> &lt;<span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> PacketStream&gt;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">CreateConnection</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(PacketStream* stream)</span> </span>&#123; ... &#125;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">template</span> &lt;<span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> PacketStream&gt;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> PacketReader &#123;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span>:</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">ReadPackets</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(PacketStream* stream, <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">size_t</span> packet_num)</span></span>;</div><div style=\"line-height: 1.6;\">&#125;;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\">MockPacketStream mock_stream;</div><div style=\"line-height: 1.6;\">EXPECT_CALL(mock_stream, ...)...;</div><div style=\"line-height: 1.6;\">.. <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">set</span> more expectations on mock_stream ...</div><div style=\"line-height: 1.6;\">PacketReader&lt;MockPacketStream&gt; reader(&amp;mock_stream);</div><div style=\"line-height: 1.6;\">... exercise reader ...</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x8FD9;&#x4E48;&#x505A;&#xFF1F; <br>&#x56E0;&#x4E3A;&#x53EA;&#x80FD;&#x8FD9;&#x4E48;&#x505A;&#x3002;&#x666E;&#x901A;&#x7684;mock&#xFF0C;&#x8981;&#x901A;&#x8FC7;&#x7EE7;&#x627F;&#x88AB;&#x6D4B;&#x8BD5;&#x7C7B;&#xFF0C;&#x5E76;&#x91CD;&#x5199;virtual&#x51FD;&#x6570;&#x6765;&#x5B9E;&#x73B0;&#x3002;&#x800C;&#x4E0A;&#x9762;&#x7684;ConcretePacketStream&#x548C;MockPacketStream&#x5E76;&#x4EFB;&#x4F55;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x4F20;&#x5165;&#x540E;&#x8005;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x4E0D;&#x7528;reinterpret_cast&#x662F;&#x4E0D;&#x80FD;&#x8F6C;&#x6210;&#x524D;&#x8005;&#x7684;&#x6307;&#x9488;&#x7684;&#x3002; <br>&#x6240;&#x4EE5;&#x60F3;&#x4E00;&#x4E2A;&#x53D8;&#x901A;&#x7684;&#x529E;&#x6CD5;&#xFF0C;&#x7528;&#x6A21;&#x677F;&#x7C7B;&#x6765;&#x5B9A;&#x4E49;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#xFF0C;&#x5728;&#x6D4B;&#x8BD5;&#x65F6;&#x4F20;&#x5165;mock&#x7C7B;&#xFF0C;&#x5728;&#x751F;&#x4EA7;&#x65F6;&#xFF0C;&#x4F20;&#x5165;&#x771F;&#x5B9E;&#x7C7B;&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Mocking Side Effects</h3><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\">EXPECT_CALL(mutator, MutateInt(_))</div><div style=\"line-height: 1.6;\">    .WillOnce(DoAll(SetArgPointee&lt;<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>&gt;(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">5</span>), Return(true)));</div><div style=\"line-height: 1.6;\">EXPECT_CALL(mutator, Mutate(NotNull(), <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">5</span>))</div><div style=\"line-height: 1.6;\">    .WillOnce(SetArrayArgument&lt;<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>&gt;(values, values + <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">5</span>));</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7B2C;&#x4E00;&#x4E2A;&#x5C06;MutateInt&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x9488;&#x6307;&#x5411;&#x7684;int&#xFF0C;&#x8BBE;&#x4E3A;5&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;true&#x3002; <br>&#x7B2C;&#x4E8C;&#x4E2A;&#x5C06;values&#x6570;&#x7EC4;&#x7684;[0,5)&#x62F7;&#x8D1D;&#x5230;&#x53C2;&#x6570;1&#x6307;&#x5411;&#x7684;&#x5730;&#x5740;&#x3002; <br>&#x5982;&#x679C;&#x4ECD;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#xFF0C;&#x5219;&#x7528;DoAll&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\">EXPECT_CALL(mutator, MutateInt(_))</div><div style=\"line-height: 1.6;\">      .WillOnce(DoAll(SetArgPointee&lt;<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>&gt;(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">5</span>),</div><div style=\"line-height: 1.6;\">                      <span style=\"display: inline; line-height: 1.6; color: #f92672;\">Return</span>(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">true</span>)));</div></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Selecting an Action&#x2019;s Arguments</h3><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> ::testing::_;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> ::testing::Invoke;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">bool</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">MyIsVisibleInQuadrant1</span><span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">(<span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">bool</span> visible, <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">const</span> <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">string</span>&amp; name, <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> x, <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> y,</span></span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">const</span> <span style=\"display: inline; line-height: 1.6; color: #e6db74;\">map</span>&lt;pair&lt;<span style=\"display: inline; line-height: 1.6; color: #f92672;\">int</span>, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">int</span>&gt;, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">double</span>&gt;&amp; weight,</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">double</span> min_weight, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">double</span> max_wight) &#123;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\">return</span> IsVisibleInQuadrant1(visible, x, y);</div><div style=\"line-height: 1.6;\">&#125;.</div><div style=\"line-height: 1.6;\">..</div><div style=\"line-height: 1.6;\">EXPECT_CALL(mock, Foo(_, _, _, _, _, _, _))</div><div style=\"line-height: 1.6;\">    .WillOnce(Invoke(MyIsVisibleInQuadrant1)); <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Now it works.</span></div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5B9A;&#x4E49;&#x81EA;&#x5DF1;&#x7684;adaptor MyIsVisibleInQuadrant1&#xFF0C;&#x6216;&#x8005;&#x7528;gmock&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5;&#x4F18;&#x96C5;&#x7684;&#x89E3;&#x51B3;&#x3002;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> :<span style=\"display: inline; line-height: 1.6;\">:testing:<span style=\"display: inline; line-height: 1.6;\">:<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">_</span>;</span></span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> :<span style=\"display: inline; line-height: 1.6;\">:testing:<span style=\"display: inline; line-height: 1.6;\">:Invoke;</span></span></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">using</span> :<span style=\"display: inline; line-height: 1.6;\">:testing:<span style=\"display: inline; line-height: 1.6;\">:WithArgs;</span></span></div><div style=\"line-height: 1.6;\">...</div><div style=\"line-height: 1.6;\">EXPECT_CALL(mock, Foo(<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">_</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">_</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">_</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">_</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">_</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">_</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">_</span>))</div><div style=\"line-height: 1.6;\">.WillOnce(WithArgs&lt;<span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">2</span>, <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">3</span>&gt;(Invoke(IsVisibleInQuadrant1)));</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #75715e;\">// No need to define your own adaptor.</span></div></code></pre><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Mocking Private or Protected Methods</h4><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">Foo</span> &#123;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span>:</div><div style=\"line-height: 1.6;\">        ...</div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">virtual</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">bool</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">Transform</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">Gadget* g</span>) </span>= <span style=\"display: inline; line-height: 1.6; color: #ae81ff;\">0</span>;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\">protected</span>:</div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">virtual</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">Resume</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">)</span>;</span></div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\">private</span>:</div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6; color: #f92672;\"><span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">virtual</span> <span style=\"display: inline; line-height: 1.6; color: #66d9ef;\">int</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">GetTimeOut</span>(<span style=\"display: inline; line-height: 1.6; color: #f8f8f2;\">)</span>;</span></div><div style=\"line-height: 1.6;\">&#125;;</div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">MockFoo</span> : <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">public</span> <span style=\"display: inline; line-height: 1.6; color: #a6e22e;\">Foo</span> &#123;</div><div style=\"line-height: 1.6;\">    <span style=\"display: inline; line-height: 1.6; color: #f92672;\">public</span>:</div><div style=\"line-height: 1.6;\">        ...</div><div style=\"line-height: 1.6;\">        MOCK_METHOD1(Transform, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">bool</span>(Gadget* g));</div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// The following must be in the public section, even though the</span></div><div style=\"line-height: 1.6;\">        <span style=\"display: inline; line-height: 1.6; color: #75715e;\">// methods are protected or private in the base class.</span></div><div style=\"line-height: 1.6;\">        MOCK_METHOD0(Resume, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">void</span>());</div><div style=\"line-height: 1.6;\">        MOCK_METHOD0(GetTimeOut, <span style=\"display: inline; line-height: 1.6; color: #f92672;\">int</span>());</div><div style=\"line-height: 1.6;\">&#125;;</div></code></pre><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">C++ allows a subclass to specify a different access level than the base class on a virtual function.</p></blockquote><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 20px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Misc</h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Keep in mind that one doesn&#x2019;t have to verify more than one property in one test. In fact, it&#x2019;s a good style to verify only one <br>thing in one test. If you do that, a bug will likely break only one or two tests instead of dozens</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">When it&#x2019;s being destroyed, your friendly mock object will automatically verify that all expectations on it have been satisfied, <br>and will generate Google Test failures if not. </p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Currently these are only platforms that support the pthreads library (this includes Linux and Mac). </p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x52A0;&#x4E0A;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x2013;gmock_verbose=info&#x53EF;&#x4EE5;&#x663E;&#x793A;&#x6240;&#x6709;EXPECT_CALL&#x7684;&#x5177;&#x4F53;&#x8C03;&#x7528;&#x60C5;&#x51B5;&#x3002;</p><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 34.4px; margin: 1.2em 0 .6em 0; text-align: start;\">Some useful tips in gtest</h2><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Selecting Tests</h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">If you set the <strong style=\"font-weight: bold; line-height: 1.6;\">GTEST_FILTER</strong> environment variable or the <strong style=\"font-weight: bold; line-height: 1.6;\">&#x2013;gtest_filter</strong> flag to a filter string, Google Test will only run the tests whose full names (in the form of TestCaseName.TestName) match the filter. <br>The format of a filter is a &#x2018;:&#x2019;-separated list of wildcard patterns (called the positive patterns) optionally followed by a &#x2018;-&#x2019; and another &#x2018;:&#x2019;-separated pattern list (called the negative patterns).</p></blockquote><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">./foo_test Has no flag, and thus runs all its tests.</li><li style=\"line-height: 1.6;\">./foo_test &#x2013;gtest_filter=* Also runs everything, due to the single match-everything * value.</li><li style=\"line-height: 1.6;\">./foo_test &#x2013;gtest_filter=FooTest.* Runs everything in test case FooTest.</li><li style=\"line-height: 1.6;\">./foo_test &#x2013;gtest_filter=<em style=\"line-height: 1.6;\">Null</em>:<em style=\"line-height: 1.6;\">Constructor</em> Runs any test whose full name contains either &#x201C;Null&#x201D; or &#x201C;Constructor&#x201D;.</li><li style=\"line-height: 1.6;\">./foo_test &#x2013;gtest_filter=-<em style=\"line-height: 1.6;\">DeathTest.</em> Runs all non-death tests.</li><li style=\"line-height: 1.6;\">./foo_test &#x2013;gtest_filter=FooTest.*-FooTest.Bar Runs everything in test case FooTest except FooTest.Bar</li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Temporarily Disabling Tests</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Tests that Foo does Abc.</span></div><div style=\"line-height: 1.6;\">TEST(FooTest, DISABLED_DoesAbc) &#123; ... &#125;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #f92672;\">class</span> DISABLED_BarTest : public ::testing::Test &#123; ... &#125;;</div><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><span style=\"display: inline; line-height: 1.6; color: #75715e;\">// Tests that Bar does Xyz.</span></div><div style=\"line-height: 1.6;\">TEST_F(DISABLED_BarTest, DoesXyz) &#123; ... &#125;</div></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Temporarily Enabling Disabled Tests</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">just invoke the test program with the <strong style=\"font-weight: bold; line-height: 1.6;\">&#x2013;gtest_also_run_disabled_tests</strong> flag or set the <strong style=\"font-weight: bold; line-height: 1.6;\">GTEST_ALSO_RUN_DISABLED_TESTS</strong> environment variable to a value other than 0.</p></blockquote><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 27.2px; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Repeating the Tests</h3><table style=\"border-collapse: collapse; border-spacing: 0; margin-bottom: 20px; line-height: 1.6;\"><thead style=\"line-height: 1.6;\"><tr style=\"line-height: 1.6;\"><th align=\"center\" style=\"font-weight: bold; vertical-align: bottom; padding: .5em; border-top: 0; border: 1px solid #ddd; line-height: 1.6; text-align: center;\"></th><th align=\"center\" style=\"font-weight: bold; vertical-align: bottom; padding: .5em; border-top: 0; border: 1px solid #ddd; line-height: 1.6; text-align: center;\"></th></tr></thead><tbody style=\"line-height: 1.6;\"><tr style=\"line-height: 1.6;\"><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\"><span style=\"line-height: 1.6;\">$</span> foo_test &#x2013;gtest_repeat=1000</td><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">Repeat foo_test 1000 times and don&#x2019;t stop at failures.</td></tr><tr style=\"line-height: 1.6;\"><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\"><span style=\"line-height: 1.6;\">$</span> foo_test &#x2013;gtest_repeat=-1</td><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">A negative count means repeating forever.</td></tr><tr style=\"line-height: 1.6;\"><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\"><span style=\"line-height: 1.6;\">$</span> foo_test &#x2013;gtest_repeat=1000 &#x2013;gtest_break_on_failure</td><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">Repeat foo_test 1000 times, stopping at the first failure. This is especially useful when running under a debugger: when the testfails, it will drop into the debugger and you can then inspect variables and stacks.</td></tr><tr style=\"line-height: 1.6;\"><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">$ foo_test &#x2013;gtest_repeat=1000 &#x2013;gtest_filter=FooBar</td><td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">Repeat the tests whose name matches the filter 1000 times.</td></tr></tbody></table></div><center style=\"display:none\">%23%20C/C++%20Test%20Framework%20-%20Google%20Test%20%26%20Google%20Mock%0A@%28myblog%29%5BTDD%2C%20gtest%2C%20gmock%5D%0A%0AGoogle%20Test%uFF0CGoogle%20Mock%u4EE5%u4E0B%u7B80%u79F0gtest%uFF0Cgmock%u3002%0A%u5728%u63A5%u89E6gtest%uFF0Cgmock%u4E4B%u524D%uFF0C%u6D4B%u8BD5C/C++%20code%u4F7F%u7528%5BUnitTest++%5D%28https%3A//github.com/unittest-cpp/unittest-cpp%29%u3002%u8FD9%u662F%u4E00%u4E2A%u5F88%u7B80%u6D01%u7684%u6846%u67B6%uFF0C%u4E0A%u624B%u5F88%u5FEB%u3002%u53C2%u770B%u53E6%u4E00%u7BC7%u535A%u6587%5BUnitTest++%u7B80%u4ECB%5D%28https%3A//zhougy0717.github.io/2016/02/29/UnitTest++%25E7%25AE%2580%25E4%25BB%258B/%29%u3002%u6D4B%u8BD5%u76F8%u5173%u7684%u529F%u80FD%u591F%u7528%uFF0C%u4F46%u662F%u6CA1%u6709mock%u5E93%u3002%u8FD9%u5E26%u6765%u7684%u95EE%u9898%u662F%uFF1A%0A1.%20%u6D4B%u8BD5%u9057%u7559%u4EE3%u7801%u7684%u65F6%u5019%uFF0C%u9700%u8981%u81EA%u884Cfake%u76F8%u5173%u4EE3%u7801%u3002%u8FD9%u4E2A%u5728%u9057%u7559%u7CFB%u7EDF%u5F88%u5E9E%u5927%u65F6%uFF0C%u8981%u9887%u8D39%u5FC3%u529B%u3002%u800C%u4E14%u8FC7%u591A%u6D89%u53CA%u7EC6%u8282%uFF0C%u5BFC%u81F4%u6D4B%u8BD5%u6781%u4E0D%u7A33%u5B9A%uFF0C%u7CFB%u7EDF%u4EE3%u7801%u4EFB%u610F%u7684%u6F14%u8FDB%uFF0C%u90FD%u4F1A%u5BFC%u81F4%u5927%u5806%u7684%u6D4B%u8BD5%u5931%u8D25%uFF0C%u751A%u81F3%u6D4B%u8BD5%u65E0%u6CD5%u8FDB%u884C%u3002%0A2.%20%u6D4B%u8BD5case%u4E4B%u95F4%u65E0%u6CD5%u5F88%u597D%u7684%u89E3%u8026%u3002%u7ED3%u679C%u540C%u6837%u662F%u6D4B%u8BD5%u4E0D%u591F%u7A33%u5B9A%u3002%u672F%u8BED%u662F%u6D4B%u8BD5%u4EE3%u7801%u5F88%u201C%u8106%u5F31%u201D%u3002%0A%0AJava%uFF0CPython%uFF0CJavaScript%u90FD%u6709%u81EA%u5DF1%u7684mock%u5E93%u3002Python%u7684Mock%u7C7B%uFF0CJava%u7684Mockito/PowerMock%uFF0CJavaScript%u7684Sinon%u3002%u4E8E%u662F%uFF0C%u5728%u7F51%u4E0A%u641C%u7D22%u4E86%u4E00%u4E0BC/C++%u7684Mock%u5E93%uFF0C%u4E8E%u662F%u770B%u5230%u4E86gtest%uFF0Cgmock%u3002%u7136%u540E%u5C31%u6709%u4E86%u8FD9%u4E00%u7BC7%u3002%0A%0A%23%23%20%u7B80%u4ECB%0A%u4E0D%u7528%u53BB%u7F51%u4E0A%u8D39%u5FC3%u627E%u6559%u7A0B%uFF0C%u4E24%u4E2A%u9879%u76EE%u7684%u6587%u6863%u90FD%u975E%u5E38%u68D2%u3002%u5165%u53E3%u7EDF%u4E00%u5728%5Bgtest%20GitHub%u9879%u76EE%u4E3B%u9875%5D%28https%3A//github.com/google/googletest%29%u4E0A%u3002%u800C%u4E14%u8BE5%u6587%u6863%u4E0D%u4EC5%u5F88%u597D%u7684%u4ECB%u7ECD%u4E86gtest%uFF0Cgmock%u7684%u7528%u6CD5%uFF0C%u5176%u4E2D%u8FD8%u6D89%u53CA%u4E86%u5F88%u591ATDD%u6216%u8005UnitTest%u7684%u771F%u77E5%u707C%u89C1%uFF0C%u5F88%u503C%u5F97%u8BFB%u4E00%u8BFB%u3002%0A%u8981%u4F7F%u7528gtest%u975E%u5E38%u7B80%u5355%uFF1A%u7F16%u8BD1%u51FAgtest%uFF0Cgmock%uFF0C%u518D%u94FE%u5165%u4F60%u7684%u6D4B%u8BD5%u7A0B%u5E8F%u3002%0A%0A%23%23%23%20%u7F16%u8BD1gtest/gmock%0Agtest%uFF0Cgmock%u5747%u7528cmake%u6765%u7BA1%u7406%u8DE8%u5E73%u53F0%uFF0C%u5148%u7528cmake%u6765%u751F%u6210Makefile%u3002%u7528%u547D%u4EE4%60cmake%20-G%20%22Unix%20Makefiles%22%20/path/to/CMakeList.txt%60%0A%0A%23%23%23%20Makefile%0A%u7136%u540E%u6309%u7167%u4E0B%u9762%u7F16%u5199Makefile%u3002%u6CE8%u610Fgmock_main%u662F%u4E00%u4E2Amain%u51FD%u6570%u6765%u8C03%u7528%u6240%u6709%u7684test%20case%uFF0C%u7701%u5F97%u81EA%u5DF1%u5199main%u51FD%u6570%u4E86%u3002%0A%60%60%60%0ACC%20%3D%20gcc%0ACPP%20%3D%20g++%0ALINK%20%3D%20g++%0ACFLAGS%20%3D%20-g%20-Wall%20-Werror%20-Wextra%20-std%3Dgnu99%0ACPPFLAGS%20%3D%20-g%20-Wall%20-Werror%20-Wextra%0ALIBS%20%3D%20-L./lib%20-lgtest%20-lgmock%20-lgmock_main%20-lpthread%0A%0AC__SOURCES%20%3D%20%24%28wildcard%20*.c%29%0ACPPSOURCES%20%3D%20%24%28wildcard%20*.cpp%29%0AOBJECTS%20%3D%20%24%28patsubst%20%25.c%2C%20%25.o%2C%20%24%28C__SOURCES%29%29%20%24%28patsubst%20%25.cpp%2C%20%25.o%2C%20%24%28CPPSOURCES%29%29%0ATARGET%20%3D%20test_exe%0A%0Afirst%3A%20all%0A%0A%25.o%3A%20%25.c%0A%20%20%20%20%24%28CC%29%20%24%28INCLUDES%29%20-c%20%24%28CFLAGS%29%20-o%20%24@%20%24%3C%0A%0A%25.o%3A%20%25.cpp%0A%20%20%20%20%24%28CPP%29%20%24%28INCLUDES%29%20-c%20%24%28CPPFLAGS%29%20-o%20%24@%20%24%3C%0A%0Aall%3A%20%24%28TARGET%29%0A%0A%24%28TARGET%29%3A%20%24%28OBJECTS%29%0A%20%20%20%20%24%28LINK%29%20%24%28CPPFLAGS%29%20%24%28LIBS%29%20-o%20%24%28TARGET%29%20%24%28OBJECTS%29%0A%0A.PHONY%20%3A%20clean%0A%0Aclean%3A%0A%20%20%20%20rm%20-f%20%24%28TARGET%29%20%24%28OBJECTS%29%0A%60%60%60%0A%0A%23%23%23%20Terms%0A%7C%20Meaning%20%20%20%20%7C%20Google%20Test%20Term%20%7C%20ISTQB%20Term%20%7C%0A%7C%20%3A--------%3A%20%7C%20%3A--------------%3A%20%7C%20%3A--------%3A%20%7C%0A%7C%20Exercise%20a%20particular%20program%20path%20with%20specific%20input%20values%20and%20verify%20the%20results%20%7C%20TEST%28%29%20%7C%20Test%20Case%0A%7CA%20set%20of%20several%20tests%20related%20to%20one%20component%20%7C%20Test%20Case%20%7C%20Test%20Suite%0A%0A%23%23%23%20Test%0A%60%60%60%0A%23include%20%22gtest/gtest.h%22%0A%23include%20%22gmock/gmock.h%22%0A%0Ausing%20%3A%3Atesting%3A%3AReturn%3B%0Ausing%20%3A%3Atesting%3A%3ATest%3B%0Ausing%20%3A%3Atesting%3A%3A_%3B%0Ausing%20%3A%3Atesting%3A%3AAtLeast%3B%0A%0ATEST%28TestCaseName%2C%20should_this_test_do%29%0A%7B%0A%09...%0A%20%20%20%20EXPECT_STREQ%28%22%7B%7D%22%2C%20str%29%3B%0A%7D%0A%60%60%60%0A%u4E2D%u95F4%u7684%u90A3%u5806namespace%u90FD%u662Fgtest/gmock%u5E93%u91CC%u5B9A%u4E49%u7684matcher%u5B8F%u6216%u8005%u5404%u79CD%u6709%u7528%u7684%u5B8F%u3002%0A%0A%23%23%23%20Test%20Fixture%0A%u5728%u6D4B%u8BD5%u6709%u91CD%u590D%u7684%u65F6%u5019%uFF0C%u5C31%u8981%u7528%u5230Test%20Fixture%u4E86%uFF0C%u4E5F%u5C31%u662FsetUp%20/%20tearDown%u3002%0A%60%60%60%0Aclass%20QueueTest%20%3A%20public%20%3A%3Atesting%3A%3ATest%20%7B%0A%20protected%3A%0A%20%20virtual%20void%20SetUp%28%29%20%7B%0A%20%20%20%20q1_.Enqueue%281%29%3B%0A%20%20%20%20q2_.Enqueue%282%29%3B%0A%20%20%20%20q2_.Enqueue%283%29%3B%0A%20%20%7D%0A%0A%20%20//%20virtual%20void%20TearDown%28%29%20%7B%7D%0A%0A%20%20Queue%3Cint%3E%20q0_%3B%0A%20%20Queue%3Cint%3E%20q1_%3B%0A%20%20Queue%3Cint%3E%20q2_%3B%0A%7D%3B%0A%0ATEST_F%28QueueTest%2C%20IsEmptyInitially%29%20%7B%0A%20%20EXPECT_EQ%280%2C%20q0_.size%28%29%29%3B%0A%7D%0A%0ATEST_F%28QueueTest%2C%20DequeueWorks%29%20%7B%0A%20%20int*%20n%20%3D%20q0_.Dequeue%28%29%3B%0A%20%20EXPECT_EQ%28NULL%2C%20n%29%3B%0A%0A%20%20n%20%3D%20q1_.Dequeue%28%29%3B%0A%20%20ASSERT_TRUE%28n%20%21%3D%20NULL%29%3B%0A%20%20EXPECT_EQ%281%2C%20*n%29%3B%0A%20%20EXPECT_EQ%280%2C%20q1_.size%28%29%29%3B%0A%20%20delete%20n%3B%0A%0A%20%20n%20%3D%20q2_.Dequeue%28%29%3B%0A%20%20ASSERT_TRUE%28n%20%21%3D%20NULL%29%3B%0A%20%20EXPECT_EQ%282%2C%20*n%29%3B%0A%20%20EXPECT_EQ%281%2C%20q2_.size%28%29%29%3B%0A%20%20delete%20n%3B%0A%7D%0A%60%60%60%0A%23%23%23%23%20constructor/destructor%20vs.%20SetUp/TearDown%0A%3EWhen%20you%20need%20to%20write%20per-test%20set-up%20and%20tear-down%20logic%2C%20you%20have%20the%20choice%20between%20using%20the%20test%20fixture%20constructor/destructor%20or%20SetUp%28%29/TearDown%28%29.%20The%20former%20is%20usually%20preferred%2C%20as%20it%20has%20the%20following%20benefits%3A%0A%0A%3E-%20By%20initializing%20a%20member%20variable%20in%20the%20constructor%2C%20we%20have%20the%20option%20to%20make%20it%20const%2C%20which%20helps%20prevent%20accidental%20changes%20to%20its%20value%20and%20makes%20the%20tests%20more%20obviously%20correct.%0A-%20**In%20case%20we%20need%20to%20subclass%20the%20test%20fixture%20class%2C%20the%20subclass%27%20constructor%20is%20guaranteed%20to%20call%20the%20base%20class%27%20constructor%20first%2C%20and%20the%20subclass%27%20destructor%20is%20guaranteed%20to%20call%20the%20base%20class%27%20destructor%20afterward.%20**With%20SetUp%28%29/TearDown%28%29%2C%20a%20subclass%20may%20make%20the%20mistake%20of%20forgetting%20to%20call%20the%20base%20class%27%20SetUp%28%29/TearDown%28%29%20or%20call%20them%20at%20the%20wrong%20moment.%0A%0A%3E%20Benefit%20for%20using%20SetUp/TearDown%3A%0A%0A%3E-%20If%20the%20tear-down%20operation%20could%20throw%20an%20exception%2C%20you%20must%20use%20TearDown%28%29%20as%20opposed%20to%20the%20destructor%2C%20as%20throwing%20in%20a%20destructor%20leads%20to%20undefined%20behavior%20and%20usually%20will%20kill%20your%20program%20right%20away.%20Note%20that%20many%20standard%20libraries%20%28like%20STL%29%20may%20throw%20when%20exceptions%20are%20enabled%20in%20the%20compiler.%20Therefore%20you%20should%20prefer%20TearDown%28%29%20if%20you%20want%20to%20write%20portable%20tests%20that%20work%20with%20or%20without%20exceptions.%0A-%20The%20assertion%20macros%20throw%20an%20exception%20when%20flag%20--gtest_throw_on_failure%20is%20specified.%20Therefore%2C%20you%20shouldn%27t%20use%20Google%20Test%20assertions%20in%20a%20destructor%20if%20you%20plan%20to%20run%20your%20tests%20with%20this%20flag.%0A-%20In%20a%20constructor%20or%20destructor%2C%20you%20cannot%20make%20a%20virtual%20function%20call%20on%20this%20object.%20%28You%20can%20call%20a%20method%20declared%20as%20virtual%2C%20but%20it%20will%20be%20statically%20bound.%29%20Therefore%2C%20if%20you%20need%20to%20call%20a%20method%20that%20will%20be%20overriden%20in%20a%20derived%20class%2C%20you%20have%20to%20use%20SetUp%28%29/TearDown%28%29.%0A%0A%u7B80%u8A00%u4E4B%uFF0C%u5728%u903B%u8F91%u4E0A%uFF0C%u8FD9%u4E24%u7EC4%u7684%u4F5C%u7528%u76F8%u540C%uFF0C%u90FD%u662F%u6BCF%u4E2A%u6D4B%u8BD5%u4E4B%u524D%u4E4B%u540E%u4F1A%u505A%u4E00%u4E9B%u5904%u7406%u5DE5%u4F5C%u3002Constructor/Destructor%u7684%u597D%u5904%u662F%u63D0%u4F9B%u4E86%u7EE7%u627F%u3002setUp/tearDown%u7684%u597D%u5904%u662F%u53EF%u4EE5%u5904%u7406exception%uFF0C%u8FD9%u662F%u4E0D%u80FD%u653E%u5728%u6790%u6784%u51FD%u6570%u91CC%u7684%u3002%0A%23%23%23%20SetUpTestCase%20/%20TearDownTestCase%0ATest%20Case%u7EA7%u522B%u7684SetUp/TearDown%0A%60%60%60%0Aclass%20FooTest%20%3A%20public%20%3A%3Atesting%3A%3ATest%20%7B%0A%20protected%3A%0A%20%20//%20Per-test-case%20set-up.%0A%20%20//%20Called%20before%20the%20first%20test%20in%20this%20test%20case.%0A%20%20//%20Can%20be%20omitted%20if%20not%20needed.%0A%20%20static%20void%20SetUpTestCase%28%29%20%7B%0A%20%20%20%20shared_resource_%20%3D%20new%20...%3B%0A%20%20%7D%0A%0A%20%20//%20Per-test-case%20tear-down.%0A%20%20//%20Called%20after%20the%20last%20test%20in%20this%20test%20case.%0A%20%20//%20Can%20be%20omitted%20if%20not%20needed.%0A%20%20static%20void%20TearDownTestCase%28%29%20%7B%0A%20%20%20%20delete%20shared_resource_%3B%0A%20%20%20%20shared_resource_%20%3D%20NULL%3B%0A%20%20%7D%0A%0A%20%20//%20You%20can%20define%20per-test%20set-up%20and%20tear-down%20logic%20as%20usual.%0A%20%20virtual%20void%20SetUp%28%29%20%7B%20...%20%7D%0A%20%20virtual%20void%20TearDown%28%29%20%7B%20...%20%7D%0A%0A%20%20//%20Some%20expensive%20resource%20shared%20by%20all%20tests.%0A%20%20static%20T*%20shared_resource_%3B%0A%7D%3B%0A%60%60%60%0A%23%23%23%20SetUp/TearDown%20Environment%20%0A%3E-%20First%2C%20you%20subclass%20the%20%3A%3Atesting%3A%3AEnvironment%20class%20to%20define%20a%20test%20environment%2C%20which%20knows%20how%20to%20set-up%20and%20tear-down%3A%0A%3E-%20Then%2C%20you%20register%20an%20instance%20of%20your%20environment%20class%20with%20Google%20Test%20by%20calling%20the%20%60%3A%3Atesting%3A%3AAddGlobalTestEnvironment%28%29%60%20function%3A%0A%3ENow%2C%20when%20RUN_ALL_TESTS%28%29%20is%20called%2C%20it%20first%20calls%20the%20SetUp%28%29%20method%20of%20the%20environment%20object%2C%20then%20runs%20the%20tests%20if%20there%20was%20no%20fatal%20failures%2C%20and%20finally%20calls%20TearDown%28%29%20of%20the%20environment%20object.%0A-%20It%27s%20OK%20to%20register%20multiple%20environment%20objects.%20In%20this%20case%2C%20their%20SetUp%28%29%20will%20be%20called%20in%20the%20order%20they%20are%20registered%2C%20and%20their%20TearDown%28%29%20will%20be%20called%20in%20the%20reverse%20order.%0A-%20Note%20that%20Google%20Test%20takes%20ownership%20of%20the%20registered%20environment%20objects.%20Therefore%20do%20not%20delete%20them%20by%20yourself.%0A%0A%60%60%60%0Aclass%20Environment%20%7B%0A%20public%3A%0A%20%20virtual%20%7EEnvironment%28%29%20%7B%7D%0A%20%20//%20Override%20this%20to%20define%20how%20to%20set%20up%20the%20environment.%0A%20%20virtual%20void%20SetUp%28%29%20%7B%7D%0A%20%20//%20Override%20this%20to%20define%20how%20to%20tear%20down%20the%20environment.%0A%20%20virtual%20void%20TearDown%28%29%20%7B%7D%0A%7D%3B%0A%0AEnvironment*%20AddGlobalTestEnvironment%28Environment*%20env%29%3B%0A%60%60%60%0A%23%23%23%20%u65AD%u8A00%0A%u6709%u4E24%u79CD%u65AD%u8A00EXPECT%5C_xxx%u548CASSERT%5C_xxx%u3002%u524D%u8005%u4F1A%u8BA9%u6D4B%u8BD5%u7EC8%u6B62%uFF0C%u540E%u8005%u4E0D%u4F1A%uFF0C%u53EA%u4F1A%u8BA9%u6D4B%u8BD5fail%u3002%0A%0A%0A%23%23%20gmock%0A%u4E4B%u6240%u4EE5%u8981%u5207%u5230gtest%uFF0C%u552F%u4E00%u7684%u539F%u56E0%u5C31%u662Fgmock%uFF0C%u6240%u4EE5%u8981%u4E13%u5F00%u4E00%u7AE0%u91CD%u70B9%u4ECB%u7ECD%u4E00%u4E0B%u3002%u6240%u6709%u5185%u5BB9%u5747%u6765%u81EA%u4E8E%u5B98%u65B9%u6587%u6863%u3002%u5185%u5BB9%u6DF1%u5EA6%u7531%u6D45%u5165%u6DF1%uFF0C%u4F9D%u6B21%u5982%u4E0B%uFF1A%0A-%20%5BGoogle%20Mock%20for%20Dummies%5D%28https%3A//github.com/google/googletest/blob/master/googlemock/docs/ForDummies.md%29%0A-%20%5BCookBook%5D%28https%3A//github.com/google/googletest/blob/master/googlemock/docs/CookBook.md%29%0A%0A%u6700%u540E%u8FD8%u6709%u53C2%u8003%u624B%u518C%3A%0A-%20%5BCheat%20Sheet%5D%28https%3A//github.com/google/googletest/blob/master/googlemock/docs/CheatSheet.md%29%0A%0A%23%23%23%20%u7B80%u4ECB%0A%3EGoogle%20C++%20Mocking%20Framework%20%28or%20Google%20Mock%20for%20short%29%20is%20a%20library%20%28sometimes%20we%20also%20call%20it%20a%20%22framework%22%20to%20make%20it%20sound%20cool%29%20for%20creating%20mock%20classes%20and%20using%20them.%20It%20does%20to%20C++%20what%20jMock%20and%20EasyMock%20do%20to%20Java.%0A%0A%23%23%23%23%20%u4F55%u4E3AMock%uFF1F%0A%3E**Mocks**%20are%20objects%20pre-programmed%20with%20expectations%2C%20which%20form%20a%20specification%20of%20the%20calls%20they%20are%20expected%20to%20receive.%0A%0A%u76F8%u5E94%u7684%u8FD8%u6709Fake%u548CStub%0A%3E**Fake**%20objects%20have%20working%20implementations%2C%20but%20usually%20take%20some%20shortcut%20%28perhaps%20to%20make%20the%20operations%20less%20expensive%29%2C%20which%20makes%20them%20not%20suitable%20for%20production.%20An%20in-memory%20file%20system%20would%20be%20an%20example%20of%20a%20fake.%0A%0Agmock%u7684%u6587%u6863%u91CC%u53EA%u63D0%u5230%u4E86Fake%uFF0C%u4ECEMartin%20Fowler%u7684%u6587%u7AE0%5BMocks%20Aren%27t%20Stubs%5D%28https%3A//martinfowler.com/articles/mocksArentStubs.html%29%u4E2D%u6458%u5F55%u5982%u4E0B%3A%0A%3E**Stubs**%20provide%20canned%20answers%20to%20calls%20made%20during%20the%20test%2C%20usually%20not%20responding%20at%20all%20to%20anything%20outside%20what%27s%20programmed%20in%20for%20the%20test.%0A%0A%u4E09%u8005%u4F5C%u7528%u76F8%u540C%uFF0C%u90FD%u662F%u6A21%u62DF%u7CFB%u7EDF%u5176%u4ED6%u90E8%u5206%u7684%u529F%u80FD%uFF0C%u8FBE%u5230%u4EE3%u7801%u9694%u79BB%u7684%u6548%u679C%uFF0C%u65B9%u4FBF%u6D4B%u8BD5%u3002%u4F46%u662FMock%u7684%u7279%u70B9%u662F%u66F4OO%u5316%uFF0C%u4E5F%u7B26%u5408TDD%u6216%u8005BDD%u7684%u601D%u60F3%u2014%u2014%u9488%u5BF9%u4E00%u4E2Aobject%u8BBE%u7F6E%u671F%u5F85%uFF0C%u518D%u5BF9%u9F50verify%u3002%0A%0AMocks%20vs.%20Stubs%20-%20from%20Martin%20Fowler%0A%3EIn%20order%20to%20use%20state%20verification%20on%20the%20stub%2C%20I%20need%20to%20make%20some%20extra%20methods%20on%20the%20stub%20to%20help%20with%20verification.%20As%20a%20result%20the%20stub%20implements%20MailService%20but%20adds%20extra%20test%20methods.%0A%0A%3EMock%20objects%20always%20use%20behavior%20verification%2C%20a%20stub%20can%20go%20either%20way.%20Meszaros%20refers%20to%20stubs%20that%20use%20behavior%20verification%20as%20a%20Test%20Spy.%20The%20difference%20is%20in%20how%20exactly%20the%20double%20runs%20and%20verifies%20and%20I%27ll%20leave%20that%20for%20you%20to%20explore%20on%20your%20own.%0A%0A%23%23%23%23%20Getting%20Started%0AClass%20to%20Mock%0A%60%60%60%0Aclass%20Turtle%20%7B%0A%20%20...%0A%20%20virtual%20%7ETurtle%28%29%20%7B%7D%0A%20%20virtual%20void%20PenUp%28%29%20%3D%200%3B%0A%20%20virtual%20void%20PenDown%28%29%20%3D%200%3B%0A%20%20virtual%20void%20Forward%28int%20distance%29%20%3D%200%3B%0A%7D%3B%0A%60%60%60%0AMock%20class%0A%60%60%60%0A%23include%20%22gmock/gmock.h%22%20%20//%20Brings%20in%20Google%20Mock.%0Aclass%20MockTurtle%20%3A%20public%20Turtle%20%7B%0A%20public%3A%0A%20%20...%0A%20%20MOCK_METHOD0%28PenUp%2C%20void%28%29%29%3B%0A%20%20MOCK_METHOD0%28PenDown%2C%20void%28%29%29%3B%0A%20%20MOCK_METHOD1%28Forward%2C%20void%28int%20distance%29%29%3B%0A%7D%3B%0A%60%60%60%0A%u9488%u5BF9%u5F85Mock%u7684Turtle%20class%u8981%u6CE8%u610F%u7684%u662F%3A%0A%3ENote%20that%20the%20**destructor%20of%20Turtle%20must%20be%20virtual**%2C%20as%20is%20the%20case%20for%20all%20classes%20you%20intend%20to%20inherit%20from%20-%20otherwise%20the%20destructor%20of%20the%20derived%20class%20will%20not%20be%20called%20when%20you%20delete%20an%20object%20through%20a%20base%20pointer%2C%20and%20you%27ll%20get%20corrupted%20program%20states%20like%20memory%20leaks.%0A%0AUse%20it%0A%60%60%60%0A%23include%20%22path/to/mock-turtle.h%22%0A%23include%20%22gmock/gmock.h%22%0A%23include%20%22gtest/gtest.h%22%0Ausing%20%3A%3Atesting%3A%3AAtLeast%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20//%20%231%0A%0ATEST%28PainterTest%2C%20CanDrawSomething%29%20%7B%0A%20%20MockTurtle%20turtle%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20//%20%232%0A%20%20EXPECT_CALL%28turtle%2C%20PenDown%28%29%29%20%20%20%20%20%20%20%20%20%20%20%20%20%20//%20%233%0A%20%20%20%20%20%20.Times%28AtLeast%281%29%29%3B%0A%0A%20%20Painter%20painter%28%26turtle%29%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20//%20%234%0A%0A%20%20EXPECT_TRUE%28painter.DrawCircle%280%2C%200%2C%2010%29%29%3B%0A%7D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20//%20%235%0A%0Aint%20main%28int%20argc%2C%20char**%20argv%29%20%7B%0A%20%20//%20The%20following%20line%20must%20be%20executed%20to%20initialize%20Google%20Mock%0A%20%20//%20%28and%20Google%20Test%29%20before%20running%20the%20tests.%0A%20%20%3A%3Atesting%3A%3AInitGoogleMock%28%26argc%2C%20argv%29%3B%0A%20%20return%20RUN_ALL_TESTS%28%29%3B%0A%7D%0A%60%60%60%0A%u5982%u679C%u4F60%u613F%u610F%u7684%u8BDD%uFF0C%u53EF%u4EE5%u81EA%u5DF1%u5199main%uFF0C%u5982%u679C%u4F60%u60F3%u5077%u61D2%uFF0C%u8BB0%u5F97%u5728Makefile%u91CClink%20gmock_main%u3002%0A%u6309Google%u7684%u8BF4%u6CD5%uFF0Cgmock%u4E5F%u53EF%u4EE5%u548C%u5176%u4ED6%u6D4B%u8BD5%u6846%u67B6%u517C%u5BB9%uFF0C%u4F46%u603B%u611F%u89C9%u633A%u60AC%u7684%u3002%0A%0A%23%23%23%23%20%u4E00%u4E9B%u6709%u7528%u7684%u5DE5%u5177%0A**Marcher**%0A%60EXPECT_CALL%28turtle%2C%20Forward%28_%29%29%3B%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20%u4EE5%u4EFB%u610F%u53C2%u6570%u8C03%u7528Forward%0A%60EXPECT_CALL%28turtle%2C%20Forward%28Ge%28100%29%29%29%3B%60%0A%26nbsp%3B%26nbsp%3B%26nbsp%3B%26nbsp%3B%20%u4EE5%u5927%u4E8E100%u7684%u6574%u6570%u8C03%u7528Forward%0A%09%0A**Cardinalities%3A%20How%20Many%20Times%20Will%20It%20Be%20Called%3F**%0A%3E-%20If%20neither%20WillOnce%28%29%20nor%20WillRepeatedly%28%29%20is%20in%20the%20EXPECT_CALL%28%29%2C%20the%20inferred%20cardinality%20is%20Times%281%29.%0A-%20If%20there%20are%20n%20WillOnce%28%29%27s%20but%20no%20WillRepeatedly%28%29%2C%20where%20n%20%3E%3D%201%2C%20the%20cardinality%20is%20Times%28n%29.%0A-%20If%20there%20are%20n%20WillOnce%28%29%27s%20and%20one%20WillRepeatedly%28%29%2C%20where%20n%20%3E%3D%200%2C%20the%20cardinality%20is%20Times%28AtLeast%28n%29%29.%0A%0A%60%60%60%0AEXPECT_CALL%28mockObj%2C%20func%28%29%29%0A%09.Times%28AtLeast%281%29%29%0A%09.WillOnce%28Return%28123%29%29%0A%09.WillRepeatedly%28Return%28456%29%29%0A%60%60%60%0A%u4E0A%u9762%u8FD9%u6BB5%u4EE3%u7801%u8981%u6C42func%u51FD%u6570%u81F3%u5C11%u8FD0%u884C%u4E00%u6B21%uFF0C%u7B2C%u4E00%u6B21%u8FD4%u56DE123%uFF0C%u4E4B%u540E%u6BCF%u6B21%u8FD4%u56DE456%u3002%0A%0A%3E**Important%20note**%3A%20The%20EXPECT_CALL%28%29%20statement%20evaluates%20the%20action%20clause%20only%20once%2C%20even%20though%20the%20action%20may%20be%20performed%20many%20times.%20Therefore%20you%20must%20be%20careful%20about%20side%20effects.%20The%20following%20may%20not%20do%20what%20you%20want%3A%0A%0A%60%60%60%0Aint%20n%20%3D%20100%3B%0AEXPECT_CALL%28turtle%2C%20GetX%28%29%29%0A.Times%284%29%0A.WillRepeatedly%28Return%28n++%29%29%3B%0A%60%60%60%0A%u56E0%u4E3AReturn%u662F%u5B8F%uFF0C%u6240%u4EE5%u53EA%u4F1A%u66FF%u6362%u4E00%u6B21%uFF0C%u6240%u4EE5%u4E0D%u7BA1GetX%u8C03%u7528%u51E0%u6B21%uFF0C%u8FD4%u56DE%u90FD%u662F101%uFF0C%u800C%u4E0D%u662F101%2C102%2C103%2C...%0A%0A**All%20Expectations%20Are%20Sticky**%0A%u6240%u8C13%u7684sticky%u5C31%u662FEXPECT%5C_CALL%u603B%u662F%u751F%u6548%u7684%uFF0C%u9664%u975E%u4F60%u663E%u793A%u7684%u5C06%u5176%u5931%u6548%u3002%u5982%u4E0B%uFF0C%u6240%u6709%u7684EXPECT%5C_CALL%u90FD%u4F1A%u751F%u6548%uFF0C%u90A3%u4E48%u6700%u540E%u4E00%u4E2A%u4F1A%u8986%u76D6%u524D%u9762%u6240%u6709%u7684%uFF0C%u4E5F%u5C31%u662FGetX%u603B%u4F1A%u8FD4%u56DE10%u3002%0A%60%60%60%0Ausing%20%3A%3Atesting%3A%3AReturn%3B%0A...%0Afor%20%28int%20i%20%3D%20n%3B%20i%20%3E%200%3B%20i--%29%20%7B%0A%20%20EXPECT_CALL%28turtle%2C%20GetX%28%29%29%0A%20%20%20%20%20%20.WillOnce%28Return%2810*i%29%29%3B%0A%7D%0A%60%60%60%0A%u5982%u679C%u5E0C%u671B%u4ED6%u8FD4%u56DE%uFF0C30%2C20%2C10%uFF0C...%uFF0C%u5E94%u8BE5%u8FD9%u4E48%u5199%0A%60%60%60%0Ausing%20%3A%3Atesting%3A%3AReturn%3B%0A...%0Afor%20%28int%20i%20%3D%20n%3B%20i%20%3E%200%3B%20i--%29%20%7B%0A%20%20EXPECT_CALL%28turtle%2C%20GetX%28%29%29%0A%20%20%20%20.WillOnce%28Return%2810*i%29%29%0A%20%20%20%20.RetiresOnSaturation%28%29%3B%0A%7D%0A%60%60%60%0A%60RetireOnSaturation%60%u5C31%u662F%u663E%u793A%u7684%u8BA9%u5176%u5931%u6548%u3002%u8FD8%u6709%u4E00%u4E2A%u529E%u6CD5%uFF1A%0A%60%60%60%0Ausing%20%3A%3Atesting%3A%3AInSequence%3B%0Ausing%20%3A%3Atesting%3A%3AReturn%3B%0A...%0A%7B%0A%20%20InSequence%20s%3B%0A%0A%20%20for%20%28int%20i%20%3D%201%3B%20i%20%3C%3D%20n%3B%20i++%29%20%7B%0A%20%20%20%20EXPECT_CALL%28turtle%2C%20GetX%28%29%29%0A%20%20%20%20%20%20%20%20.WillOnce%28Return%2810*i%29%29%0A%20%20%20%20%20%20%20%20.RetiresOnSaturation%28%29%3B%0A%20%20%7D%0A%7D%0A%60%60%60%0A%u56E0%u4E3AInSequence%u7684%u5173%u7CFB%uFF0C%u5728%u524D%u9762%u7684EXPECT%5C_CALL%u751F%u6548%u4EE5%u540E%uFF0C%u5C31%u4F1A%u81EA%u52A8%u5931%u6548%uFF0C%u6240%u4EE5%u4E0D%u4F1A%u4EA7%u751F%u8986%u76D6%u7684%u6548%u679C%u3002%0A**Ordered%20vs%20Unordered%20Calls**%0A%60%60%60%0Ausing%20%3A%3Atesting%3A%3AInSequence%3B...%0ATEST%28FooTest%2C%20DrawsLineSegment%29%20%7B%0A%20%20...%0A%20%20%7B%0A%20%20%20%20InSequence%20dummy%3B%0A%0A%20%20%20%20EXPECT_CALL%28turtle%2C%20PenDown%28%29%29%3B%0A%20%20%20%20EXPECT_CALL%28turtle%2C%20Forward%28100%29%29%3B%0A%20%20%20%20EXPECT_CALL%28turtle%2C%20PenUp%28%29%29%3B%0A%20%20%7D%0A%20%20Foo%28%29%3B%0A%7D%0A%60%60%60%0A**Expecting%20Partially%20Ordered%20Calls**%0AGoogle%20Mock%20allows%20you%20to%20impose%20an%20arbitrary%20DAG%20%28directed%20acyclic%20graph%29%20on%20the%20calls.%20One%20way%20to%20express%20the%20DAG%20is%20to%0Ause%20the%20After%20clause%20of%20EXPECT_CALL%20.%0A%60%60%60%0Ausing%20%3A%3Atesting%3A%3ASequence%3B%0ASequence%20s1%2C%20s2%3B%0AEXPECT_CALL%28foo%2C%20A%28%29%29%0A%09.InSequence%28s1%2C%20s2%29%3B%0AEXPECT_CALL%28bar%2C%20B%28%29%29%0A%09.InSequence%28s1%29%3B%0AEXPECT_CALL%28bar%2C%20C%28%29%29%0A%09.InSequence%28s2%29%3B%0AEXPECT_CALL%28foo%2C%20D%28%29%29%0A%09.InSequence%28s2%29%3B%0A%60%60%60%0Aspecifies%20the%20following%20DAG%20%28where%20s1%20is%20A%20-%3E%20B%20%2C%20and%20s2%20is%20A%20-%3E%20C%20-%3E%20D%20%29%3A%0A%60%60%60%0A%09%20+---%3E%20B%0A%20%20%20%20%20%7C%0AA%20---%7C%0A%09%20%7C%0A%09%20+---%3E%20C%20---%3E%20D%0A%60%60%60%0A**Uninteresting%20Calls**%0A%u8FD9%u662Fgmock%u62A5%u7684warning%u3002%u5F53%u9488%u5BF9%u67D0%u4E00%u4E2A%u5F85%u6D4B%u51FD%u6570%u8BBE%u7F6E%u4E86EXPECT%20spec%uFF0C%u5374%u5E76%u6CA1%u6709%u8C03%u7528%u7684%u65F6%u5019%uFF0C%u5C31%u4F1A%u62A5%u8FD9%u4E2Awarning%u3002%u6B64%u65F6gmock%u8BA4%u4E3A%u4F60%u5BF9%u8BE5%u51FD%u6570%u5E76%u6CA1%u6709%u5174%u8DA3%uFF0C%u6240%u4EE5%u5C31%u4E0D%u9700%u8981%u8FD9%u4E2AEXPECT%20spec%u3002%u5F53%u7136%u4F60%u53EF%u4EE5%u9009%u62E9%u5FFD%u7565%u8FD9%u4E2Awarning%uFF0C%u4F46%u6211%u8BA4%u4E3A%u51FA%u8FD9%u4E2Awarning%u7684%u65F6%u5019%uFF0C%u591A%u534A%u662Ftest%u6F0F%u5199%u4E86%u4EC0%u4E48%u3002%0A%0A**Returning%20Live%20Values%20from%20Mock%20Methods**%0A%60%60%60%0Ausing%20testing%3A%3AByRef%3B%0Ausing%20testing%3A%3AReturn%3B%0Aclass%20MockFoo%20%3A%20public%20Foo%20%7B%0A%09public%3A%0A%09%09MOCK_METHOD0%28GetValue%2C%20int%28%29%29%3B%0A%7D%3B%0A...%0Aint%20x%20%3D%200%3B%0AMockFoo%20foo%3B%0AEXPECT_CALL%28foo%2C%20GetValue%28%29%29%0A%09//%20.WillRepeatedly%28Return%28ByRef%28x%29%29%29%3B%20X%20error%0A%09.WillRepeatedly%28ReturnPointee%28x%29%29%3B%0Ax%20%3D%2042%3B%0AEXPECT_EQ%2842%2C%20foo.GetValue%28%29%29%3B%0A%60%60%60%0A%0A%23%23%23%20%u4E00%u4E9B%u6D4B%u8BD5case%0A%u5199Unit%20Test%u5E76%u4E0D%u50CF%u60F3%u50CF%u7684%u90A3%u4E48%u7B80%u5355%uFF0C%u5E76%u4E0D%u662F%u8C03%u7528%u4E86%u6846%u67B6%uFF0C%u9488%u5BF9%u6BCF%u4E2A%u51FD%u6570%u5199test%20case%u5C31%u53EF%u4EE5%u3002%u6309%u6211%u76EE%u524D%u7684%u7406%u89E3%u6709%u4EE5%u4E0B%u51E0%u79CD%u6311%u6218%uFF1A%0A1.%20Test%20Case%u5982%u4F55%u89E3%u8026%u3002%u4E0D%u8981%u6709%u91CD%u590D%u6D4B%u8BD5%28overlap%29%u3002%0A%u4F8B%u5982%uFF1A%u5728%u5199A%u51FD%u6570%u7684%u65F6%u5019%uFF0C%u5199%u4E86%u6D4B%u8BD5testA%uFF0CB%u51FD%u6570%u4F1A%u8C03%u7528A%u51FD%u6570%uFF0C%u90A3%u4E48%u5728%u5199%u5B8CA%u4E4B%u540E%u5199B%u7684%u6D4B%u8BD5testB%u65F6%uFF0C%u662F%u5426%u8981%u5C06A%20mock/fake/stub%u6389%3F%20%u5982%u679C%u4E0D%u5C06A%u51FD%u6570Fake%u6389%uFF0C%u5219testA%u548CtestB%u4E4B%u95F4%u5C31%u662F%u6709overlap%u3002%u6211%u8BA4%u4E3A%u8FD9%u4E4B%u95F4%u53EF%u4EE5%u6709%u53D6%u820D%uFF0C%u6700%u4F73%u72B6%u6001%u5E94%u5F53%u662F%u6B64%u65F6%uFF0C%u5C06testA%u5220%u9664%uFF0C%u53EA%u4FDD%u7559testB%u3002%u4F46%u4ECD%u5E94%u6839%u636E%u5177%u4F53%u60C5%u51B5%u800C%u5B9A%u3002%0A%0A2.%20%u5982%u4F55%u9488%u5BF9%u4F9D%u8D56%u5173%u7CFB%u8FDB%u884Cmock%u5316%u3002%0A%u4F8B%u5982%u51FA%u73B0%u8FD9%u6837%u7684%u8BED%u53E5%3A%20%60B%20%3D%20new%20A%60%uFF0C%u5219%u7C7BB%u4F9D%u8D56%u4E8E%u7C7BA%u3002%u4F46%u7C7BA%u5E76%u6CA1%u6709%u5FC5%u8981%u7F16%u8BD1%u8FDBtest%u3002%u56E0%u4E3A%u4E00%u65E6%u52A0%u5165A%uFF0C%u5219%u52BF%u5FC5%u4F1A%u5F15%u5165%u66F4%u591A%u4F9D%u8D56%u5173%u7CFB%uFF0C%u800C%u5BFC%u81F4test%u7F16%u8BD1%u5D29%u6E83%u3002%u4F9D%u8D56%u5173%u7CFB%u7684%u89E3%u51B3%u65E0%u7A77%u65E0%u5C3D%u3002%u5728%u505AAndroid%u7684%u5355%u5143%u6D4B%u8BD5%u65F6%uFF0C%u53EF%u4EE5%u7528PowerMock%u53D6%u4EE3Mockito%u6765Mock%u6784%u9020%u51FD%u6570%uFF0C%u5C06%u6784%u9020%u51FD%u6570Fake%u5316%u6210%u7C7B%u4F3C%u5DE5%u5382%u51FD%u6570%uFF0C%u8FD4%u56DE%u7C7B%u5B9E%u4F8B%u3002%u5177%u4F53%u53C2%u770B%u8FD9%u7BC7%u535A%u6587%5BAndroid%u5355%u5143%u6D4B%u8BD5%5D%28https%3A//zhougy0717.github.io/2016/10/19/Android%25E5%258D%2595%25E5%2585%2583%25E6%25B5%258B%25E8%25AF%2595/%29%u3002%0A%u4F46%u5B9E%u9645%u4E0A%uFF0C%u6309%u7167%u73B0%u5728%u7684%u7406%u89E3%uFF0C%u5176%u5B9EMock%u6784%u9020%u51FD%u6570%u662F%u4E0D%u53EF%u53D6%u7684%uFF0C%u9996%u5148%u9020%u6210%u88AB%u6D4B%u4EE3%u7801spec%u4E0D%u6E05%u6670%uFF0C%u8BD5%u60F3%u4E00%u4E2A%u6784%u9020%u51FD%u6570%u600E%u4E48%u4F1A%u8FD4%u56DE%u53E6%u4E00%u4E2A%u7C7B%u7684%u5B9E%u4F8B%u3002%u5176%u6B21%uFF0C%u5728C++%u4E2D%u5F88%u96BE%u505A%u5230Mock%u6784%u9020%u51FD%u6570%u3002%u597D%u7684%u505A%u6CD5%u5E94%u5F53%u662F%u8FD0%u7528Dependency%20Injection%u3002%u4F8B%u5982%uFF1A%0A%60%60%60%0Aclass%20A%20%0A%7B%7D%0A%0Aclass%20B%0A%7B%0A%09void%20func%28%29%0A%09%7B%0A%09%09A*%20a%20%3D%20new%20A%3B%0A%09%7D%0A%7D%0A%60%60%60%0A%u7C7BB%u5E94%u5F53%u6539%u5199%u4E3A%uFF1A%0A%60%60%60%0Aclass%20B%0A%7B%0A%09void%20func%28A*%29%0A%09%7B%0A%09%09...%0A%09%7D%0A%7D%0A%60%60%60%0A%u5C06%u7C7BA%u6307%u9488%u4F20%u5165%uFF0C%u89E3%u51B3dependency%u7684%u95EE%u9898%u3002%0A%0A3.%20%u5982%u4F55%u80FD%u591F%u8BA9%u6D4B%u8BD5%u7A33%u5B9A%uFF0C%u5728%u4EFB%u610F%u73AF%u5883%u4E0B%u5747%u8FD4%u56DE%u540C%u6837%u7684%u6D4B%u8BD5%u7ED3%u679C%u3002%0A%u8FD9%u4E2A%u4E00%u822C%u6D89%u53CA%u6D4B%u8BD5%u73AF%u5883%u7684%u5F71%u54CD%u3002%u4F8B%u5982%u8C03%u7528%u7F51%u7EDC%u76F8%u5173%u7684%u529F%u80FD%uFF0C%u5728%u6CA1%u6709%u7F51%u7EDC%u7684%u73AF%u5883%u5C31%u6CA1%u6CD5%u8FDB%u884C%u3002%u518D%u4F8B%u5982%u6D4B%u8BD5%u65F6%u64CD%u4F5C%u771F%u5B9E%u5177%u4F53%u6587%u4EF6%uFF0C%u5219%u8BE5%u6587%u4EF6%u88AB%u6D4B%u8BD5%u5916%u4EBA%u4E3A%u6216%u4EE3%u7801%u4FEE%u6539%uFF0C%u5219%u6D4B%u8BD5%u53EF%u80FD%u5C31%u4F1A%u83AB%u540D%u5931%u8D25%u3002%0A%u9488%u5BF9%u8FD9%u4E9B%u60C5%u51B5%uFF0C%u6211%u4EEC%u5E94%u5F53%u5728%u6D4B%u8BD5%u4E2D%u5C3D%u91CF%u907F%u514D%u3002%u4F8B%u5982%u524D%u8005%uFF0C%u6211%u4EEC%u5E94%u5F53%u5BF9%u7F51%u7EDC%u63A5%u53E3%u8FDB%u884CMock%u5316%uFF0C%u540E%u8005%u5E94%u5F53%u5728%u6D4B%u8BD5%u7684setUp%u548CtearDown%u4E2D%u751F%u6210%u865A%u5047%u6587%u4EF6%u7528%u4E8E%u6D4B%u8BD5%uFF0C%u5E76%u5728%u6D4B%u8BD5%u5B8C%u6210%u65F6%u505A%u6E05%u7406%u3002%0A%0A4.%20%u4F1A%u56E0%u4E3A%u5F88%u5C0F%u7684%u88AB%u6D4B%u4EE3%u7801%u6539%u52A8%uFF0C%u800C%u5BFC%u81F4%u5927%u9762%u79EF%u6D4B%u8BD5%u5931%u8D25%uFF0C%u751A%u81F3%u6D4B%u8BD5%u5D29%u6E83%u3002%0A%u8FD9%u4E2A%u5C31%u662Fgmock%u6587%u6863%u4E2D%u63D0%u5230%u7684%u8981%u9488%u5BF9%u63A5%u53E3%u7F16%u7A0B%uFF0C%u9488%u5BF9%u63A5%u53E3%u6D4B%u8BD5%u3002Robert%20C%B7Martin%u5728%u300A%u654F%u6377%u8F6F%u4EF6%u5F00%u53D1%uFF0D%u539F%u5219%u3001%u6A21%u5F0F%u4E0E%u5B9E%u8DF5%u300B%u4E00%u4E66%u4E2D%u6709%u63D0%u51FA%uFF1A%u6240%u6709%u7684%u4EE3%u7801%u90FD%u5E94%u4F9D%u8D56%u4E8E%u62BD%u8C61%u63A5%u53E3%u3002%u56E0%u4E3A%u62BD%u8C61%u63A5%u53E3%u662F%u7ECF%u8FC7%u62BD%u8C61%u7684%uFF0C%u76F8%u5BF9%u5177%u4F53%u7684%u5B9E%u73B0%u4EE3%u7801%u8F83%u4E3A%u7A33%u5B9A%u3002%u800C%u88AB%u4F9D%u8D56%u7684%u4EE3%u7801%u5E94%u8BE5%u5C3D%u53EF%u80FD%u4FDD%u6301%u7A33%u5B9A%uFF0C%u8FD9%u6837%u57FA%u4E8E%u4E4B%u4E0A%u7684%u4EE3%u7801%u624D%u4E0D%u4F1A%u56E0%u4E3A%u4F9D%u8D56%u7684%u6539%u52A8%u800C%u6539%u52A8%u3002%0A%0A%u4E0B%u9762%u5217%u51FA%u51E0%u79CD%u6211%u5728%u5B9E%u9645%u5199test%20case%u65F6%u9047%u5230%u7684%u60C5%u51B5%uFF0C%u5728gmock%u4E2D%u7684%u89E3%u51B3%u65B9%u6848%u3002%0A%0A%23%23%23%20%u6309%u7167%u51FD%u6570%u53C2%u6570%u8FD4%u56DE%u7ED3%u679C%20-%20Fake%0A%u4F8B%u5982%3A%0A%60%60%60%0Aclass%20A%0A%7B%0A%09virtual%20int%20func%28int%20a%2C%20int%20b%29%3B%0A%7D%0A%0AEXPECT_CALL%28mockA%2C%20func%28%29%29%0A%09.WillRepeatedly%28a+b%29%3B%0A%60%60%60%0Agmock%u4E2D%u53EF%u4EE5%u8FD9%u6837%u505A%uFF1AUsing%20Functions/Methods/Functors%20as%20Actions%0A%60%60%60%0Ausing%20%3A%3Atesting%3A%3A_%3B%0Ausing%20%3A%3Atesting%3A%3AInvoke%3B%0Aclass%20MockFoo%20%3A%20public%20Foo%20%7B%0Apublic%3A%0A%09MOCK_METHOD2%28Sum%2C%20int%28int%20x%2C%20int%20y%29%29%3B%0A%09MOCK_METHOD1%28ComplexJob%2C%20bool%28int%20x%29%29%3B%0A%7D%3B%0Aint%20CalculateSum%28int%20x%2C%20int%20y%29%20%7B%20return%20x%20+%20y%3B%20%7D%0Aclass%20Helper%20%7B%0Apublic%3A%0A%09bool%20ComplexJob%28int%20x%29%3B%0A%7D%3B%0A...%0AMockFoo%20foo%3B%0AHelper%20helper%3B%0AEXPECT_CALL%28foo%2C%20Sum%28_%2C%20_%29%29%0A%09.WillOnce%28Invoke%28CalculateSum%29%29%3B%0AEXPECT_CALL%28foo%2C%20ComplexJob%28_%29%29%0A%09.WillOnce%28Invoke%28%26helper%2C%20%26Helper%3A%3AComplexJob%29%29%3B%0Afoo.Sum%285%2C%206%29%3B%20//%20Invokes%20CalculateSum%285%2C%206%29.%0Afoo.ComplexJob%2810%29%3B%20//%20Invokes%20helper.ComplexJob%2810%29%3B%0A%60%60%60%0A%0A%23%23%23%20Mock%20non-virtual%u51FD%u6570%0A%60%60%60%0A//%20A%20simple%20packet%20stream%20class.%20None%20of%20its%20members%20is%20virtual.%0Aclass%20ConcretePacketStream%20%7B%0A%09public%3A%0A%09%09void%20AppendPacket%28Packet*%20new_packet%29%3B%0A%09%09const%20Packet*%20GetPacket%28size_t%20packet_number%29%20const%3B%0A%09%09size_t%20NumberOfPackets%28%29%20const%3B%0A%09%09...%0A%7D%3B%0A//%20A%20mock%20packet%20stream%20class.%20It%20inherits%20from%20no%20other%2C%20but%20defines%0A//%20GetPacket%28%29%20and%20NumberOfPackets%28%29.%0Aclass%20MockPacketStream%20%7B%0A%09public%3A%0A%09%09MOCK_CONST_METHOD1%28GetPacket%2C%20const%20Packet*%28size_t%20packet_number%29%29%3B%0A%09%09MOCK_CONST_METHOD0%28NumberOfPackets%2C%20size_t%28%29%29%3B%0A%09%09...%0A%7D%0A%0Atemplate%20%3Cclass%20PacketStream%3E%0Avoid%20CreateConnection%28PacketStream*%20stream%29%20%7B%20...%20%7D%0Atemplate%20%3Cclass%20PacketStream%3E%0Aclass%20PacketReader%20%7B%0A%09public%3A%0A%09void%20ReadPackets%28PacketStream*%20stream%2C%20size_t%20packet_num%29%3B%0A%7D%3B%0A%0AMockPacketStream%20mock_stream%3B%0AEXPECT_CALL%28mock_stream%2C%20...%29...%3B%0A..%20set%20more%20expectations%20on%20mock_stream%20...%0APacketReader%3CMockPacketStream%3E%20reader%28%26mock_stream%29%3B%0A...%20exercise%20reader%20...%0A%60%60%60%0A%u4E3A%u4EC0%u4E48%u8981%u8FD9%u4E48%u505A%uFF1F%0A%u56E0%u4E3A%u53EA%u80FD%u8FD9%u4E48%u505A%u3002%u666E%u901A%u7684mock%uFF0C%u8981%u901A%u8FC7%u7EE7%u627F%u88AB%u6D4B%u8BD5%u7C7B%uFF0C%u5E76%u91CD%u5199virtual%u51FD%u6570%u6765%u5B9E%u73B0%u3002%u800C%u4E0A%u9762%u7684ConcretePacketStream%u548CMockPacketStream%u5E76%u4EFB%u4F55%u6CA1%u6709%u5173%u7CFB%uFF0C%u4E5F%u5C31%u662F%u8BF4%uFF0C%u5982%u679C%u4F20%u5165%u540E%u8005%u7684%u6307%u9488%uFF0C%u4E0D%u7528reinterpret_cast%u662F%u4E0D%u80FD%u8F6C%u6210%u524D%u8005%u7684%u6307%u9488%u7684%u3002%0A%u6240%u4EE5%u60F3%u4E00%u4E2A%u53D8%u901A%u7684%u529E%u6CD5%uFF0C%u7528%u6A21%u677F%u7C7B%u6765%u5B9A%u4E49%u88AB%u6D4B%u4EE3%u7801%uFF0C%u5728%u6D4B%u8BD5%u65F6%u4F20%u5165mock%u7C7B%uFF0C%u5728%u751F%u4EA7%u65F6%uFF0C%u4F20%u5165%u771F%u5B9E%u7C7B%u3002%0A%0A%23%23%23%20Mocking%20Side%20Effects%0A%60%60%60%0AEXPECT_CALL%28mutator%2C%20MutateInt%28_%29%29%0A%09.WillOnce%28DoAll%28SetArgPointee%3C0%3E%285%29%2C%20Return%28true%29%29%29%3B%0AEXPECT_CALL%28mutator%2C%20Mutate%28NotNull%28%29%2C%205%29%29%0A%09.WillOnce%28SetArrayArgument%3C0%3E%28values%2C%20values%20+%205%29%29%3B%0A%60%60%60%0A%u7B2C%u4E00%u4E2A%u5C06MutateInt%u7B2C%u4E00%u4E2A%u53C2%u6570%u6307%u9488%u6307%u5411%u7684int%uFF0C%u8BBE%u4E3A5%uFF0C%u5E76%u8FD4%u56DEtrue%u3002%0A%u7B2C%u4E8C%u4E2A%u5C06values%u6570%u7EC4%u7684%5B0%2C5%29%u62F7%u8D1D%u5230%u53C2%u65701%u6307%u5411%u7684%u5730%u5740%u3002%0A%u5982%u679C%u4ECD%u9700%u8981%u8FD4%u56DE%uFF0C%u5219%u7528DoAll%uFF0C%u5982%u4E0B%uFF1A%0A%60%60%60%0AEXPECT_CALL%28mutator%2C%20MutateInt%28_%29%29%0A%20%20%20%20%20%20.WillOnce%28DoAll%28SetArgPointee%3C0%3E%285%29%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Return%28true%29%29%29%3B%0A%60%60%60%0A%0A%23%23%23%20Selecting%20an%20Action%27s%20Arguments%0A%60%60%60%0Ausing%20%3A%3Atesting%3A%3A_%3B%0Ausing%20%3A%3Atesting%3A%3AInvoke%3B%0Abool%20MyIsVisibleInQuadrant1%28bool%20visible%2C%20const%20string%26%20name%2C%20int%20x%2C%20int%20y%2C%0Aconst%20map%3Cpair%3Cint%2C%20int%3E%2C%20double%3E%26%20weight%2C%0Adouble%20min_weight%2C%20double%20max_wight%29%20%7B%0A%09return%20IsVisibleInQuadrant1%28visible%2C%20x%2C%20y%29%3B%0A%7D.%0A..%0AEXPECT_CALL%28mock%2C%20Foo%28_%2C%20_%2C%20_%2C%20_%2C%20_%2C%20_%2C%20_%29%29%0A%09.WillOnce%28Invoke%28MyIsVisibleInQuadrant1%29%29%3B%20//%20Now%20it%20works.%0A%60%60%60%0A%u5B9A%u4E49%u81EA%u5DF1%u7684adaptor%20MyIsVisibleInQuadrant1%uFF0C%u6216%u8005%u7528gmock%u63D0%u4F9B%u7684%u65B9%u6CD5%u4F18%u96C5%u7684%u89E3%u51B3%u3002%0A%60%60%60%0Ausing%20%3A%3Atesting%3A%3A_%3B%0Ausing%20%3A%3Atesting%3A%3AInvoke%3B%0Ausing%20%3A%3Atesting%3A%3AWithArgs%3B%0A...%0AEXPECT_CALL%28mock%2C%20Foo%28_%2C%20_%2C%20_%2C%20_%2C%20_%2C%20_%2C%20_%29%29%0A.WillOnce%28WithArgs%3C0%2C%202%2C%203%3E%28Invoke%28IsVisibleInQuadrant1%29%29%29%3B%0A//%20No%20need%20to%20define%20your%20own%20adaptor.%0A%60%60%60%0A%0A%23%23%23%23%20Mocking%20Private%20or%20Protected%20Methods%0A%60%60%60%0Aclass%20Foo%20%7B%0A%09public%3A%0A%09%09...%0A%09%09virtual%20bool%20Transform%28Gadget*%20g%29%20%3D%200%3B%0A%09protected%3A%0A%09%09virtual%20void%20Resume%28%29%3B%0A%09private%3A%0A%09%09virtual%20int%20GetTimeOut%28%29%3B%0A%7D%3B%0Aclass%20MockFoo%20%3A%20public%20Foo%20%7B%0A%09public%3A%0A%09%09...%0A%09%09MOCK_METHOD1%28Transform%2C%20bool%28Gadget*%20g%29%29%3B%0A%09%09//%20The%20following%20must%20be%20in%20the%20public%20section%2C%20even%20though%20the%0A%09%09//%20methods%20are%20protected%20or%20private%20in%20the%20base%20class.%0A%09%09MOCK_METHOD0%28Resume%2C%20void%28%29%29%3B%0A%09%09MOCK_METHOD0%28GetTimeOut%2C%20int%28%29%29%3B%0A%7D%3B%0A%60%60%60%0A%3EC++%20allows%20a%20subclass%20to%20specify%20a%20different%20access%20level%20than%20the%20base%20class%20on%20a%20virtual%20function.%0A%0A%23%23%23%23%20Misc%0AKeep%20in%20mind%20that%20one%20doesn%27t%20have%20to%20verify%20more%20than%20one%20property%20in%20one%20test.%20In%20fact%2C%20it%27s%20a%20good%20style%20to%20verify%20only%20one%0Athing%20in%20one%20test.%20If%20you%20do%20that%2C%20a%20bug%20will%20likely%20break%20only%20one%20or%20two%20tests%20instead%20of%20dozens%0A%0AWhen%20it%27s%20being%20destroyed%2C%20your%20friendly%20mock%20object%20will%20automatically%20verify%20that%20all%20expectations%20on%20it%20have%20been%20satisfied%2C%0Aand%20will%20generate%20Google%20Test%20failures%20if%20not.%20%0A%0ACurrently%20these%20are%20only%20platforms%20that%20support%20the%20pthreads%20library%20%28this%20includes%20Linux%20and%20Mac%29.%20%0A%0A%u52A0%u4E0A%u547D%u4EE4%u884C%u53C2%u6570--gmock_verbose%3Dinfo%u53EF%u4EE5%u663E%u793A%u6240%u6709EXPECT%5C_CALL%u7684%u5177%u4F53%u8C03%u7528%u60C5%u51B5%u3002%0A%0A%23%23%20Some%20useful%20tips%20in%20gtest%0A%23%23%23%20Selecting%20Tests%0A%3E%20If%20you%20set%20the%20**GTEST_FILTER**%20environment%20variable%20or%20the%20**--gtest_filter**%20flag%20to%20a%20filter%20string%2C%20Google%20Test%20will%20only%20run%20the%20tests%20whose%20full%20names%20%28in%20the%20form%20of%20TestCaseName.TestName%29%20match%20the%20filter.%0A%3E%20The%20format%20of%20a%20filter%20is%20a%20%27%3A%27-separated%20list%20of%20wildcard%20patterns%20%28called%20the%20positive%20patterns%29%20optionally%20followed%20by%20a%20%27-%27%20and%20another%20%27%3A%27-separated%20pattern%20list%20%28called%20the%20negative%20patterns%29.%0A%0A-%20./foo_test%20Has%20no%20flag%2C%20and%20thus%20runs%20all%20its%20tests.%0A-%20./foo_test%20--gtest_filter%3D*%20Also%20runs%20everything%2C%20due%20to%20the%20single%20match-everything%20*%20value.%0A-%20./foo_test%20--gtest_filter%3DFooTest.*%20Runs%20everything%20in%20test%20case%20FooTest.%0A-%20./foo_test%20--gtest_filter%3D*Null*%3A*Constructor*%20Runs%20any%20test%20whose%20full%20name%20contains%20either%20%22Null%22%20or%20%22Constructor%22.%0A-%20./foo_test%20--gtest_filter%3D-*DeathTest.*%20Runs%20all%20non-death%20tests.%0A-%20./foo_test%20--gtest_filter%3DFooTest.*-FooTest.Bar%20Runs%20everything%20in%20test%20case%20FooTest%20except%20FooTest.Bar%0A%0ATemporarily%20Disabling%20Tests%0A%60%60%60%0A//%20Tests%20that%20Foo%20does%20Abc.%0ATEST%28FooTest%2C%20DISABLED_DoesAbc%29%20%7B%20...%20%7D%0A%0Aclass%20DISABLED_BarTest%20%3A%20public%20%3A%3Atesting%3A%3ATest%20%7B%20...%20%7D%3B%0A%0A//%20Tests%20that%20Bar%20does%20Xyz.%0ATEST_F%28DISABLED_BarTest%2C%20DoesXyz%29%20%7B%20...%20%7D%0A%60%60%60%0A%0ATemporarily%20Enabling%20Disabled%20Tests%0A%3Ejust%20invoke%20the%20test%20program%20with%20the%20**--gtest_also_run_disabled_tests**%20flag%20or%20set%20the%20**GTEST_ALSO_RUN_DISABLED_TESTS**%20environment%20variable%20to%20a%20value%20other%20than%200.%0A%0A%23%23%23%20Repeating%20the%20Tests%0A%7C%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A%7C%20%3A--------%3A%20%7C%20%3A--------------%3A%20%7C%20%3A--------%3A%20%7C%0A%7C%5C%24%20foo_test%20--gtest_repeat%3D1000%20%7C%09Repeat%20foo_test%201000%20times%20and%20don%27t%20stop%20at%20failures.%7C%0A%7C%5C%24%20foo_test%20--gtest_repeat%3D-1%09%7CA%20negative%20count%20means%20repeating%20forever.%7C%0A%7C%5C%24%20foo_test%20--gtest_repeat%3D1000%20--gtest_break_on_failure%09%7C%20Repeat%20foo_test%201000%20times%2C%20stopping%20at%20the%20first%20failure.%20This%20is%20especially%20useful%20when%20running%20under%20a%20debugger%3A%20when%20the%20testfails%2C%20it%20will%20drop%20into%20the%20debugger%20and%20you%20can%20then%20inspect%20variables%20and%20stacks.%7C%0A%7C%24%20foo_test%20--gtest_repeat%3D1000%20--gtest_filter%3DFooBar%09%7C%20Repeat%20the%20tests%20whose%20name%20matches%20the%20filter%201000%20times.%7C</center><br></div>",
            "tags": [
                "TDD",
                "unittest",
                "gtest",
                "gmock"
            ]
        },
        {
            "id": "https://zhougy0717.github.io/2017/02/06/python_mock%E5%88%9D%E6%AD%A5/",
            "url": "https://zhougy0717.github.io/2017/02/06/python_mock%E5%88%9D%E6%AD%A5/",
            "title": "python mock初步",
            "date_published": "2017-02-06T07:51:41.000Z",
            "content_html": "<!DOCTYPE en-note SYSTEM 'http://xml.evernote.com/pub/enml2.dtd'><div class=\"enNote\" style=\"color: #2c3f51; font-family: &apos;Helvetica Neue&apos;, Arial, &apos;Hiragino Sans GB&apos;, STHeiti, &apos;Microsoft YaHei&apos;, &apos;WenQuanYi Micro Hei&apos;, SimSun, Song, sans-serif; line-height: 1.6;\" title lang=\"v2\" xml:lang dir><del style=\"position:relative;display:block;z-index:10;\"><a style=\"position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;\" href=\"http://maxiang.info/#/?provider=evernote&amp;guid=2e06d783-e10e-4944-8f60-e6607adbd12f&amp;notebook=%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0\">Edit</a></del><div style=\"color: #2c3f51; font-family: &apos;Helvetica Neue&apos;, Arial, &apos;Hiragino Sans GB&apos;, STHeiti, &apos;Microsoft YaHei&apos;, &apos;WenQuanYi Micro Hei&apos;, SimSun, Song, sans-serif; line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><div style=\"line-height: 1.6;\"><div style=\"line-height: 1.6;\"><div style=\"line-height: 1.6;\"><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#python-mock&#x521D;&#x6B65;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">python mock&#x521D;&#x6B65;</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#&#x7B80;&#x4ECB;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x7B80;&#x4ECB;</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#mock-vs-stubfake\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mock vs. Stub/Fake</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;mock\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;Mock&#xFF1F;</a></li><li style=\"line-height: 1.6;\"><a href=\"#stubs-fake\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Stubs &amp; Fake</a></li><li style=\"line-height: 1.6;\"><a href=\"#&#x4F55;&#x65F6;&#x4F7F;&#x7528;mock\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x4F55;&#x65F6;&#x4F7F;&#x7528;Mock</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#&#x5982;&#x4F55;&#x4F7F;&#x7528;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x5982;&#x4F55;&#x4F7F;&#x7528;</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#constructor\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">constructor</a></li><li style=\"line-height: 1.6;\"><a href=\"#&#x5BF9;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x68C0;&#x6D4B;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x5BF9;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x68C0;&#x6D4B;</a></li><li style=\"line-height: 1.6;\"><a href=\"#assert\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">assert</a></li></ul></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#&#x9AD8;&#x9636;&#x7279;&#x6027;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x9AD8;&#x9636;&#x7279;&#x6027;</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#magicmock-vs-mock\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">MagicMock vs. Mock</a></li><li style=\"line-height: 1.6;\"><a href=\"#mock-import\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">mock import</a></li><li style=\"line-height: 1.6;\"><a href=\"#mock-class-constructor\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">mock class constructor</a></li><li style=\"line-height: 1.6;\"><a href=\"#mock&#x5BF9;&#x8C61;&#x7684;&#x81EA;&#x52A8;&#x521B;&#x5EFA;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">mock&#x5BF9;&#x8C61;&#x7684;&#x81EA;&#x52A8;&#x521B;&#x5EFA;</a></li><li style=\"line-height: 1.6;\"><a href=\"#patch\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">patch</a></li><li style=\"line-height: 1.6;\"><a href=\"#&#x5176;&#x4ED6;&#x672A;&#x51B3;&#x7684;&#x95EE;&#x9898;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x5176;&#x4ED6;&#x672A;&#x51B3;&#x7684;&#x95EE;&#x9898;</a></li></ul></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#&#x603B;&#x7ED3;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x603B;&#x7ED3;</a></li></ul></div></div></div></p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4ECE;Android&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E2D;&#xFF0C;&#x63A5;&#x89E6;&#x5230;Java&#x7684;mock&#x6846;&#x67B6;&#x3002;&#x53C2;&#x770B;&#x8FD9;&#x7BC7;&#x7B14;&#x8BB0;&#x300A;<a href=\"https://app.yinxiang.com/shard/s10/nl/161681/4769d75d-17cc-4dcc-96b8-b746bcae53c1\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Android&#x5355;&#x5143;&#x6D4B;&#x8BD5;</a>&#x300B;&#x3002;&#x6700;&#x8FD1;&#x5728;&#x505A;Dashboard Generator&#xFF0C;&#x8981;&#x7528;python&#x89E3;&#x6790;excel&#xFF0C;ppt&#x548C;&#x7F51;&#x9875;&#xFF0C;&#x6D4B;&#x8BD5;&#x6548;&#x7387;&#x6781;&#x4F4E;&#x3002;&#x6240;&#x4EE5;&#x8003;&#x8651;&#x5230;&#x53EF;&#x4EE5;&#x7528;mock&#x6765;&#x4EE3;&#x66FF;&#x4E00;&#x4E9B;&#x8017;&#x65F6;&#x7684;&#x64CD;&#x4F5C;&#x548C;&#x8D44;&#x6E90;&#x3002;&#x4E8E;&#x662F;&#x63A5;&#x89E6;&#x5230;python&#x7684;mock&#x6846;&#x67B6;&#x3002; <br>python mock&#x5728;3.0&#x4E2D;&#x5DF2;&#x7ECF;&#x96C6;&#x6210;&#x4E3A;&#x5185;&#x7F6E;&#x7C7B;&#xFF0C;&#x4F46;&#x662F;2.7&#x4ECD;&#x7136;&#x9700;&#x8981;&#x7528;pip&#x6765;&#x5B89;&#x88C5;&#x3002;&#x8FD9;&#x4E5F;&#x4E0D;&#x96BE;&#x3002;&#x7136;&#x540E;&#x5728;&#x7F51;&#x4E0A;&#x641C;&#x96C6;&#x4E86;&#x51E0;&#x7BC7;&#x8FD8;&#x4E0D;&#x9519;&#x7684;&#x6587;&#x7AE0;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"https://app.yinxiang.com/shard/s10/nl/161681/1cb1675b-d132-408e-a88a-0eeb3d81fcc2\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Python Mock&#x7684;&#x5165;&#x95E8;</a></li><li style=\"line-height: 1.6;\"><a href=\"https://app.yinxiang.com/shard/s10/nl/161681/d063563d-dc7d-4373-96a9-a0759de8e970\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mocking Python imports</a></li><li style=\"line-height: 1.6;\"><a href=\"https://app.yinxiang.com/shard/s10/nl/161681/b12c60d1-416d-44da-8d6d-9ad1f39803dd\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Using Mocks in Python</a></li><li style=\"line-height: 1.6;\"><a href=\"http://www.voidspace.org.uk/python/mock/mock.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mock&#x5B98;&#x65B9;&#x6587;&#x6863;</a></li></ul><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"&#x7B80;&#x4ECB;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x7B80;&#x4ECB;</a></h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x56E0;&#x4E3A;&#x662F;python&#x8BED;&#x8A00;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x6240;&#x4EE5;Mock&#x4E0A;&#x624B;&#x975E;&#x5E38;&#x5BB9;&#x6613;&#x3002;&#x7A83;&#x4EE5;&#x4E3A;&#x6BD4;Java(Android) Mock&#x8981;&#x5BB9;&#x6613;&#x7684;&#x591A;&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"mock-vs-stubfake\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mock vs. Stub/Fake</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x53C2;&#x770B;<a href=\"https://app.yinxiang.com/shard/s10/nl/161681/b12c60d1-416d-44da-8d6d-9ad1f39803dd\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Using Mocks in Python</a>&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x53C2;&#x770B;Martin Fowler&#x7684;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;<a href=\"https://martinfowler.com/articles/mocksArentStubs.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mocks Aren&#x2019;t Stubs</a>&#x3002; <br>&#x8FD9;&#x91CC;&#x63D0;&#x5230;&#x4E86;Mock&#x548C;Stub/Fake&#x7684;&#x533A;&#x522B;&#x3002;&#x8FD9;&#x662F;&#x6211;&#x4EE5;&#x524D;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x6CE8;&#x610F;&#x5230;&#x7684;&#x3002;</p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;mock\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;Mock&#xFF1F;</a></h4><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">A good unit test has to be <strong style=\"font-weight: bold; line-height: 1.6;\">repeatable</strong>, allowing you to <strong style=\"font-weight: bold; line-height: 1.6;\">isolate</strong> and identify a fault. But the test resource might give out stochastic results, or it might have widely varying response times. And as a result, you end up glossing over a potential showstopper.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6D4B;&#x8BD5;&#x5FC5;&#x987B;&#x662F;&#x53EF;&#x91CD;&#x590D;&#x7684;&#xFF0C;&#x89E3;&#x8026;&#x7684;&#x3002;&#x4F46;&#x4EE3;&#x7801;&#x7528;&#x5230;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x8D44;&#x6E90;&#x5F80;&#x5F80;&#x662F;&#x968F;&#x673A;&#x7684;&#xFF0C;&#x6216;&#x8005;&#x6602;&#x8D35;&#x7684;&#xFF08;&#x6BD4;&#x5982;&#x7F51;&#x9875;&#xFF0C;&#x603B;&#x662F;&#x5728;&#x53D8;&#x5316;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;download&#x6587;&#x4EF6;&#xFF0C;&#x975E;&#x5E38;&#x8017;&#x65F6;&#xFF09;&#x3002;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x8BA9;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x9996;&#x5148;&#x4E0D;&#x80FD;&#x4F9D;&#x8D56;&#x4E8E;&#x6D4B;&#x8BD5;&#x8D44;&#x6E90;&#xFF0C;&#x5176;&#x6B21;&#x9700;&#x8981;&#x6709;&#x6BD4;&#x8F83;&#x9AD8;&#x7684;&#x6548;&#x7387;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">These are some of the reasons why you might want to use a mock in place of a <strong style=\"font-weight: bold; line-height: 1.6;\">test resource</strong>. A mock can present the same set of method interfaces as the resource to the test subject. But a mock is easier to setup, easier to manage. It can deliver deterministic results, and it can be customized to suit a particular test. And it can be easily updated to reflect changes in the actual resource.</p></blockquote><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"stubs-fake\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Stubs &amp; Fake</a></h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Stub</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">A stub presents a set of method interfaces to the test subject, the same set the subject would see in an actual test resource. When the test subject calls a stub method, the stub may respond with a predetermined set of results. It may raise an error or exception, also predetermined. A stub may track its interactions with the test subject, but it performs no tasks outside the narrow scope of its programming.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Fake</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">A fake also presents a set of method interfaces and tracks its interactions with the test subject. But unlike a stub, a fake actually processes input data from the test subject and produces results based on that data. In short, a fake is a functional, but non-production version of the actual test resource. It lacks the checks and balances found in resource, it uses simpler algorithms, and it seldom, if ever, stores or transports data.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Stub&#x548C;Fake&#x90FD;&#x662F;&#x9488;&#x5BF9;&#x63A5;&#x53E3;&#x7684;&#x6A21;&#x62DF;&#xFF0C;&#x5728;&#x9700;&#x8981;&#x5BF9;&#x72B6;&#x6001;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x7684;&#x60C5;&#x51B5;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;Stub&#x6216;&#x8005;Fake&#x3002;&#x4F8B;&#x5982;UnitTest++&#xFF0C;&#x5C31;&#x662F;&#x7528;&#x7684;Stub&#x3002; <br>&#x4F46;&#x662F;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x8981;&#x6D4B;&#x8BD5;&#x5177;&#x4F53;&#x7684;&#x4EE3;&#x7801;&#x884C;&#x4E3A;&#xFF0C;&#x6211;&#x4EEC;&#x5F80;&#x5F80;&#x8981;&#x7528;&#x5230;Mock&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x4E86;&#x51E0;&#x6B21;&#xFF0C;&#x7528;&#x7684;&#x4EC0;&#x4E48;&#x53C2;&#x6570;&#xFF0C;&#x7B49;&#x7B49;&#x3002;</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6211;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x5176;&#x5B9E;&#x4ED6;&#x4EEC;&#x4E09;&#x8005;&#x4E4B;&#x95F4;&#x5E76;&#x6CA1;&#x6709;&#x5F88;&#x660E;&#x663E;&#x7684;&#x754C;&#x9650;&#x3002;&#x7528;Mock&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9488;&#x5BF9;&#x4E00;&#x4E9B;&#x9700;&#x8981;&#x6A21;&#x62DF;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x6709;&#x529E;&#x6CD5;&#x5C06;&#x4E4B;stub out&#x3002;&#x53EA;&#x662F;Mock&#x5E76;&#x4E0D;&#x64C5;&#x957F;&#xFF0C;&#x65B9;&#x6CD5;&#x4E0D;&#x591F;&#x76F4;&#x89C9;&#x3002;&#x540C;&#x7406;Stub&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x6765;mock&#x6389;&#x4E00;&#x4E9B;&#x5BF9;&#x8C61;&#x3002; <br>Stub/Fake&#x66F4;&#x50CF;&#x662F;&#x5E94;&#x7528;&#x4E8E;&#x9762;&#x5411;&#x63A5;&#x53E3;&#x7F16;&#x7A0B;&#xFF0C;&#x800C;Mock&#x66F4;&#x64C5;&#x957F;&#x4E8E;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7F16;&#x7A0B;&#x3002;</p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"&#x4F55;&#x65F6;&#x4F7F;&#x7528;mock\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x4F55;&#x65F6;&#x4F7F;&#x7528;Mock</a></h4><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\">Of course, mocks are not without issues. Designing an accurate mock is difficult, especially if you have no reliable information on the test resource. You can try and find an open-source match, or you can make a guesstimate on the resource&#x2019;s method interface. Whichever you choose, you can update the mock easily later on, should you get more detailed information on the preferred resource. Too many mocks can complicate a test, making it harder for you to track down a failure.  <br><strong style=\"font-weight: bold; line-height: 1.6;\">Best practice</strong> </p><ul style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">is to limit a test case to <strong style=\"font-weight: bold; line-height: 1.6;\">one or two mocks</strong></li><li style=\"line-height: 1.6;\">or use <strong style=\"font-weight: bold; line-height: 1.6;\">separate test cases</strong> for each mock/subject pairing.</li></ul></blockquote><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"&#x5982;&#x4F55;&#x4F7F;&#x7528;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x5982;&#x4F55;&#x4F7F;&#x7528;</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><img class=\"enMedia\" src=\"/images/python mock&#x521D;&#x6B65;/1486178612793.png\" hash=\"11c88f50b094604bf9326b9a80c22465\" align alt longdesc width=\"400\" height border hspace vspace usemap style=\"border: 0; vertical-align: middle; max-width: 100%;\" title lang xml:lang dir></p><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"constructor\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">constructor</a></h4><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #f92672;\">class</span> Mock(spec=<span style=\"line-height: 1.6;\">None</span>, side_effect=<span style=\"line-height: 1.6;\">None</span>, return_value=<span style=\"line-height: 1.6; color: #f92672;\">DEFAULT</span>, wraps=<span style=\"line-height: 1.6;\">None</span>, <span style=\"line-height: 1.6; color: #f92672;\">name</span>=<span style=\"line-height: 1.6;\">None</span>, spec_set=<span style=\"line-height: 1.6;\">None</span>, **kwargs)<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E3B;&#x8981;&#x53C2;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">name: &#x53EA;&#x6709;&#x6807;&#x8BB0;&#x4F5C;&#x7528;&#xFF0C;&#x5728;print&#x6216;&#x8005;repr&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x8C03;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x6709;&#x7528;</li><li style=\"line-height: 1.6;\">return_value: &#x6700;&#x7B80;&#x5355;&#x7684;&#x5BF9;&#x63A5;&#x53E3;&#x7684;stub&#x5316;</li><li style=\"line-height: 1.6;\">side_effect: &#x5176;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x4E3A;&#x5217;&#x8868;&#x6216;&#x51FD;&#x6570;&#xFF0C;&#x82E5;&#x5176;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;DEFAULT&#xFF0C;&#x5219;&#x91C7;&#x7528;return_value&#x7684;&#x503C;&#xFF0C;&#x82E5;&#x5176;&#x8FD4;&#x56DE;&#x503C;&#x4E0D;&#x662F;DEFAULT&#xFF0C;&#x5219;&#x5176;&#x4F1A;&#x8986;&#x76D6;return_value&#x7684;&#x503C;</li><li style=\"line-height: 1.6;\">spec:  &#x53EF;&#x4EE5;&#x662F;string&#x5217;&#x8868;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4E3A;class&#x6216;instance&#x3002;Accessing any attribute not in this list will raise an AttributeError.</li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">side_effect&#x4E3A;&#x5217;&#x8868;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">&gt;&gt;&gt; mock = <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">Mock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span><br>&gt;&gt;&gt; mock<span style=\"line-height: 1.6;\">.side_effect</span> = [<span style=\"line-height: 1.6; color: #ae81ff;\">3</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">2</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">1</span>]<br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">mock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span>, <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">mock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span>, <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">mock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span><br>(<span style=\"line-height: 1.6; color: #ae81ff;\">3</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">2</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">1</span>)<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">side_effect&#x4E3A;&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x53C2;&#x6570;&#x4E0E;&#x771F;&#x5B9E;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#x76F8;&#x540C;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">&gt;&gt;&gt; side_effect = lambda value: value + <span style=\"line-height: 1.6; color: #ae81ff;\">1</span><br>&gt;&gt;&gt; mock = <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">Mock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(side_effect=side_effect)</span></span><br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">mock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(<span style=\"line-height: 1.6; color: #ae81ff;\">3</span>)</span></span><br><span style=\"line-height: 1.6; color: #ae81ff;\">4</span><br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">mock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(-<span style=\"line-height: 1.6; color: #ae81ff;\">8</span>)</span></span><br>-<span style=\"line-height: 1.6; color: #ae81ff;\">7</span><br></code></pre><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"&#x5BF9;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x68C0;&#x6D4B;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x5BF9;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x68C0;&#x6D4B;</a></h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">mock&#x5305;&#x542B;&#x4EE5;&#x4E0B;&#x5C5E;&#x6027;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">called</li><li style=\"line-height: 1.6;\">call_count</li><li style=\"line-height: 1.6;\">call_args</li><li style=\"line-height: 1.6;\">call_args_list <br>&#x542B;&#x4E49;&#x663E;&#x800C;&#x6613;&#x89C1;&#xFF0C;&#x7528;&#x6CD5;&#x53C2;&#x8003;<a href=\"http://www.voidspace.org.uk/python/mock/mock.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x5B98;&#x65B9;&#x6587;&#x6863;</a></li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">method_calls &amp; mock_calls</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">&gt;&gt;&gt; mock = <span style=\"line-height: 1.6;\">Mock</span>()<br>&gt;&gt;&gt; mock.<span style=\"line-height: 1.6; color: #f92672;\">method</span>()<br>&lt;<span style=\"line-height: 1.6;\">Mock</span> name=&apos;mock.<span style=\"line-height: 1.6; color: #f92672;\">method</span>()&apos; id=&apos;...&apos;&gt;<br>&gt;&gt;&gt; mock.property.<span style=\"line-height: 1.6; color: #f92672;\">method</span>.attribute()<br>&lt;<span style=\"line-height: 1.6;\">Mock</span> name=&apos;mock.property.<span style=\"line-height: 1.6; color: #f92672;\">method</span>.attribute()&apos; id=&apos;...&apos;&gt;<br>&gt;&gt;&gt; mock.method_calls<br>[call.<span style=\"line-height: 1.6; color: #f92672;\">method</span>(), call.property.<span style=\"line-height: 1.6; color: #f92672;\">method</span>.attribute()]<br><br>&gt;&gt;&gt; mock = <span style=\"line-height: 1.6;\">MagicMock</span>()<br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #ae81ff;\">result</span> = mock(<span style=\"line-height: 1.6; color: #ae81ff;\">1</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">2</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">3</span>)<br>&gt;&gt;&gt; mock.first(a=<span style=\"line-height: 1.6; color: #ae81ff;\">3</span>)<br>&lt;<span style=\"line-height: 1.6;\">MagicMock</span> name=&apos;mock.first()&apos; id=&apos;...&apos;&gt;<br>&gt;&gt;&gt; mock.second()<br>&lt;<span style=\"line-height: 1.6;\">MagicMock</span> name=&apos;mock.second()&apos; id=&apos;...&apos;&gt;<br>&gt;&gt;&gt; <span style=\"line-height: 1.6;\">int</span>(mock)<br><span style=\"line-height: 1.6; color: #ae81ff;\">1</span><br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #ae81ff;\">result</span>(<span style=\"line-height: 1.6; color: #ae81ff;\">1</span>)<br>&lt;<span style=\"line-height: 1.6;\">MagicMock</span> name=&apos;mock()()&apos; id=&apos;...&apos;&gt;<br>&gt;&gt;&gt; expected = [call(<span style=\"line-height: 1.6; color: #ae81ff;\">1</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">2</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">3</span>), call.first(a=<span style=\"line-height: 1.6; color: #ae81ff;\">3</span>), call.second(),<br>... call.__int__(), call()(<span style=\"line-height: 1.6; color: #ae81ff;\">1</span>)]<br>&gt;&gt;&gt; mock.mock_calls == expected<br><span style=\"line-height: 1.6;\">True</span><br></code></pre><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"assert\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">assert</a></h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Mock&#x63D0;&#x4F9B;&#x4E86;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;assert&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">assert_called_once</li><li style=\"line-height: 1.6;\">assert_called_with</li><li style=\"line-height: 1.6;\">assert_called_once_with</li><li style=\"line-height: 1.6;\">assert_has_calls</li><li style=\"line-height: 1.6;\">assert_any_calls <br>&#x524D;&#x9762;&#x4E09;&#x4E2A;&#x5F88;&#x76F4;&#x89C9;&#xFF0C;&#x540E;&#x9762;&#x4E24;&#x4E2A;&#x7A0D;&#x4F5C;&#x89E3;&#x91CA;&#x3002;</li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">assert_any_call</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">The assert assert_any_call() checks if the test subject called a mocked method at any point of the test routine. This is regardless of how many other calls were made between the mocked method and the assert. </p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">assert_has_calls</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">This one looks at a sequence of method calls, checks if they are in the right order and with the right arguments.</p></blockquote><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #f92672;\">from</span> mock <span style=\"line-height: 1.6; color: #f92672;\">import</span> Mock, call<br><br><span style=\"line-height: 1.6; color: #75715e;\"># The mock specification</span><br><span style=\"line-height: 1.6;\"><span style=\"line-height: 1.6; color: #66d9ef;\">class</span> <span style=\"line-height: 1.6; color: #f8f8f2;\">Foo</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(object)</span>:</span><br>    _fooValue = <span style=\"line-height: 1.6; color: #ae81ff;\">123</span><br><br>    <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">def</span> <span style=\"line-height: 1.6; color: #a6e22e;\">callFoo</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(self)</span>:</span><br>        <span style=\"line-height: 1.6; color: #f92672;\">pass</span><br><br>    <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">def</span> <span style=\"line-height: 1.6; color: #a6e22e;\">doFoo</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(self, argValue)</span>:</span><br>        <span style=\"line-height: 1.6; color: #f92672;\">pass</span><br><br><span style=\"line-height: 1.6; color: #75715e;\"># create the mock object</span><br>mockFoo = Mock(spec = Foo)<br><span style=\"line-height: 1.6; color: #f92672;\">print</span> mockFoo<br><span style=\"line-height: 1.6; color: #75715e;\"># returns &lt;Mock spec=&apos;Foo&apos; id=&apos;507120&apos;&gt;</span><br><br>mockFoo.callFoo()<br>mockFoo.doFoo(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;narf&quot;</span>)<br>mockFoo.doFoo(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;zort&quot;</span>)<br><br>fooCalls = [call.callFoo(), call.dooFoo(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;narf&quot;</span>), call.doFoo(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;zort&quot;</span>)]<br><br>mockFoo.assert_has_calls(fooCalls)<br><span style=\"line-height: 1.6; color: #75715e;\"># AssertionError: Calls not found.</span><br><span style=\"line-height: 1.6; color: #75715e;\"># Expected: [call.callFoo(), call.dooFoo(&apos;narf&apos;), call.doFoo(&apos;zort&apos;)]</span><br><span style=\"line-height: 1.6; color: #75715e;\"># Actual: [call.callFoo(), call.doFoo(&apos;narf&apos;), call.doFoo(&apos;zort&apos;)]</span><br><br>fooCalls = [call.callFoo(), call.dooFoo(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;narf&quot;</span>), call.doFoo(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;zort&quot;</span>)]<br>mockFoo.assert_has_calls(fooCalls, any_order = <span style=\"line-height: 1.6; color: #f92672;\">True</span>)<br><span style=\"line-height: 1.6; color: #75715e;\"># AssertionError: (call.dooFoo(&apos;narf&apos;),) not all found in call list</span><br></code></pre><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"&#x9AD8;&#x9636;&#x7279;&#x6027;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x9AD8;&#x9636;&#x7279;&#x6027;</a></h2><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"magicmock-vs-mock\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">MagicMock vs. Mock</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">With Mock you can mock magic methods but you have to define them. MagicMock has &#x201C;<a href=\"http://www.voidspace.org.uk/python/mock/magicmock.html#mock.MagicMock\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">default implementations of most of the <strong style=\"font-weight: bold; line-height: 1.6;\">magic methods</strong></a>&#x201C;. <br>If you don&#x2019;t need to test any magic methods, Mock is adequate and doesn&#x2019;t bring a lot of extraneous things into your tests. If you need to test a lot of magic methods MagicMock will save you some time.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x54EA;&#x4E9B;magic methods&#xFF1F;&#x770B;&#x4E0B;&#x9762;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">lt</strong>: NotImplemented</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">gt</strong>: NotImplemented</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">le</strong>: NotImplemented</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">ge</strong>: NotImplemented</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">int</strong> : 1</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">contains</strong> : False</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">len</strong> : 1</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">iter</strong> : iter([])</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">exit</strong> : False</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">complex</strong> : 1j</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">float</strong> : 1.0</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">bool</strong> : True</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">nonzero</strong> : True</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">oct</strong> : &#x2018;1&#x2019;</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">hex</strong> : &#x2018;0x1&#x2019;</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">long</strong> : long(1)</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">index</strong> : 1</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">hash</strong> : default hash for the mock</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">str</strong> : default str for the mock</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">unicode</strong> : default unicode for the mock</li><li style=\"line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">sizeof</strong>: default sizeof for the mock</li></ul><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">&gt;&gt;&gt; mock = <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">MagicMock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span><br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">int</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(mock)</span></span><br><span style=\"line-height: 1.6; color: #ae81ff;\">1</span><br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">len</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(mock)</span></span><br><span style=\"line-height: 1.6; color: #ae81ff;\">0</span><br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">hex</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(mock)</span></span><br><span style=\"line-height: 1.6; color: #e6db74;\">&apos;0x1&apos;</span><br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">list</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(mock)</span></span><br>[]<br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">object</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span> <span style=\"line-height: 1.6; color: #f92672;\">in</span> mock<br>False<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6240;&#x8C13;magic methods&#x5C31;&#x662F;&#x4E00;&#x4E9B;&#x5185;&#x7F6E;&#x7684;python&#x8FD0;&#x7B97;&#x7B26;&#xFF0C;&#x800C;MagicMock&#x652F;&#x6301;&#x8FD9;&#x4E9B;&#x8FD0;&#x7B97;&#x7B26;&#xFF0C;Mock&#x4E0D;&#x652F;&#x6301;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"mock-import\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">mock import</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><a href=\"https://app.yinxiang.com/shard/s10/nl/161681/d063563d-dc7d-4373-96a9-a0759de8e970\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mocking Python imports</a>&#x8FD9;&#x91CC;&#x6709;&#x63D0;&#x5230;&#x3002;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x770B;&#x4EE3;&#x7801;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #75715e;\"># A.py</span><br><span style=\"line-height: 1.6; color: #f92672;\">import</span> B<br>B.foo()<br><br><span style=\"line-height: 1.6; color: #75715e;\"># test.py</span><br>A.B = mock.Mock()<br>A.B.foo.return_value = <span style=\"line-height: 1.6; color: #ae81ff;\">123</span><br></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"mock-class-constructor\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">mock class constructor</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x76F4;&#x63A5;&#x8D34;&#x4E0A;&#x5B9E;&#x9645;&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">mockSMBConnObj = mock.Mock()<br>mockSMBConn = mock.Mock(return_value=mockSMBConnObj) <span style=\"line-height: 1.6; color: #75715e;\"># mock constructor</span><br></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"mock&#x5BF9;&#x8C61;&#x7684;&#x81EA;&#x52A8;&#x521B;&#x5EFA;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">mock&#x5BF9;&#x8C61;&#x7684;&#x81EA;&#x52A8;&#x521B;&#x5EFA;</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5F53;&#x8BBF;&#x95EE;&#x4E00;&#x4E2A;mock&#x5BF9;&#x8C61;&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x5C5E;&#x6027;&#x65F6;&#xFF0C;mock&#x4F1A;&#x81EA;&#x52A8;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x5B50;mock&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4E14;&#x628A;&#x6B63;&#x5728;&#x8BBF;&#x95EE;&#x7684;&#x5C5E;&#x6027;&#x6307;&#x5411;&#x5B83;&#xFF0C;&#x8FD9;&#x4E2A;&#x529F;&#x80FD;&#x5BF9;&#x4E8E;&#x5B9E;&#x73B0;&#x591A;&#x7EA7;&#x5C5E;&#x6027;&#x7684;mock&#x5F88;&#x65B9;&#x4FBF;&#x3002;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">client = mock.<span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">Mock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span><br>client<span style=\"line-height: 1.6;\">.v2_client</span><span style=\"line-height: 1.6;\">.get</span><span style=\"line-height: 1.6;\">.return_value</span> = <span style=\"line-height: 1.6; color: #e6db74;\">&apos;200&apos;</span><br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E0A;&#x9762;&#x4F8B;&#x5B50;&#x4E2D;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">client.v2_client.get</code>&#x5C31;&#x662F;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x7684;mock&#x5BF9;&#x8C61; <br>&#x7C7B;&#x4F3C;&#x81EA;&#x52A8;&#x751F;&#x6210;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x91C7;&#x7528;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">attach_mock</code>&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;attach_mock&#x4F1A;&#x8BA9;&#x88AB;attach&#x7684;&#x53CC;&#x65B9;&#x5177;&#x6709;&#x7236;&#x5B50;&#x5173;&#x7CFB;&#xFF0C;&#x5219;&#x5BF9;&#x5B50;mock&#x7684;&#x8C03;&#x7528;&#x4F1A;&#x88AB;&#x8BA1;&#x5165;&#x7236;&#x7684;mock_calls&#x3002;&#x53C2;&#x8003;<a href=\"http://www.voidspace.org.uk/python/mock/mock.html#attaching-mocks-as-attributes\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Attaching Mocks as Attributes</a></p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"patch\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">patch</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x901A;&#x8FC7;patch&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x63A7;&#x5236;Mock&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x5B58;&#x5468;&#x671F;&#x3002;&#x610F;&#x601D;&#x5C31;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x6216;&#x8005;with&#x8BED;&#x53E5;&#x7684;&#x8303;&#x56F4;&#x5185;mock&#x6389;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x3002; <br>&#x6709;&#x4E0B;&#x9762;</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">decorator</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #e6db74;\">&gt;&gt;&gt; </span>@patch(<span style=\"line-height: 1.6; color: #e6db74;\">&apos;__main__.SomeClass&apos;</span>)<br><span style=\"line-height: 1.6; color: #e6db74;\">... </span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">def</span> <span style=\"line-height: 1.6; color: #a6e22e;\">function</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(normal_argument, mock_class)</span>:</span><br><span style=\"line-height: 1.6; color: #e6db74;\">... </span>    <span style=\"line-height: 1.6; color: #f92672;\">print</span> mock_class <span style=\"line-height: 1.6; color: #f92672;\">is</span> SomeClass<br>...<br><span style=\"line-height: 1.6; color: #e6db74;\">&gt;&gt;&gt; </span>function(<span style=\"line-height: 1.6; color: #f92672;\">None</span>)<br><span style=\"line-height: 1.6; color: #f92672;\">True</span><br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">context manager</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">&gt;&gt;&gt; class <span style=\"line-height: 1.6;\">Class</span>(<span style=\"line-height: 1.6; color: #f92672;\">object</span>):<br>...     def <span style=\"line-height: 1.6; color: #f92672;\">method</span>(self):<br>...         pass<br>...<br>&gt;&gt;&gt; <span style=\"line-height: 1.6; color: #f92672;\">with</span> patch(&apos;__main__.<span style=\"line-height: 1.6;\">Class</span>&apos;) <span style=\"line-height: 1.6; color: #f92672;\">as</span> <span style=\"line-height: 1.6;\">MockClass</span>:<br>...     instance = <span style=\"line-height: 1.6;\">MockClass</span>.return_value<br>...     instance.<span style=\"line-height: 1.6; color: #f92672;\">method</span>.return_value = &apos;foo&apos;<br>...     assert <span style=\"line-height: 1.6;\">Class</span>() <span style=\"line-height: 1.6; color: #f92672;\">is</span> instance<br>...     assert <span style=\"line-height: 1.6;\">Class</span>().<span style=\"line-height: 1.6; color: #f92672;\">method</span>() == &apos;foo&apos;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">patcher</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">&gt;&gt;&gt; Original = Class<br>&gt;&gt;&gt; patcher = <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">patch</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(<span style=\"line-height: 1.6; color: #e6db74;\">&apos;__main__.Class&apos;</span>, spec=True)</span></span><br>&gt;&gt;&gt; MockClass = patcher.<span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">start</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span><br>&gt;&gt;&gt; instance = <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">MockClass</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span><br>&gt;&gt;&gt; assert <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">isinstance</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(instance, Original)</span></span><br>&gt;&gt;&gt; patcher.<span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">stop</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span><br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">patch.object&#x548C;patch&#x7C7B;&#x4F3C;&#xFF0C;&#x53EA;&#x662F;&#x5199;&#x6CD5;&#x4E0D;&#x540C;&#xFF0C;&#x770B;&#x4E0B;&#x9762;&#x5BF9;&#x6BD4;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #f8f8f2;\">@patch</span>.<span style=\"line-height: 1.6; color: #f92672;\">object</span>(SomeClass, <span style=\"line-height: 1.6; color: #e6db74;\">&apos;class_method&apos;</span>)<br><span style=\"line-height: 1.6; color: #f8f8f2;\">@patch</span>(<span style=\"line-height: 1.6; color: #e6db74;\">&apos;SomeClass.class_method&apos;</span>)<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">patch&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x79CD;&#x5176;&#x4ED6;&#x7528;&#x6CD5;&#xFF0C;patch.multiple, patch.dict&#x7B49;&#x7B49;&#x3002;&#x53C2;&#x770B;<a href=\"http://www.voidspace.org.uk/python/mock/patch.html#patch-dict\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">More Patch</a></p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"&#x5176;&#x4ED6;&#x672A;&#x51B3;&#x7684;&#x95EE;&#x9898;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x5176;&#x4ED6;&#x672A;&#x51B3;&#x7684;&#x95EE;&#x9898;</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5176;&#x5B9E;&#x8FD8;&#x6709;&#x5F88;&#x591A;mock&#x9AD8;&#x7EA7;&#x7684;&#x7528;&#x6CD5;&#xFF0C;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x6211;&#x60F3;mock&#x6389;win32com&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x641C;&#x5230;&#x7684;&#x8FD9;&#x4E2A;&#x7F51;&#x9875;<a href=\"http://ilostmynotes.blogspot.com/2014/10/mocking-out-python-os-specific-imports.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mocking out python OS specific imports</a>&#x3002;&#x5176;&#x4E2D;&#x6709;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"> modules = &#123;<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;_winreg&quot;</span>: mock.MagicMock(),<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;pythoncom&quot;</span>: mock.MagicMock(),<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;pywintypes&quot;</span>: mock.MagicMock(),<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;win32api&quot;</span>: mock.MagicMock(),<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;win32com&quot;</span>: self.win32com,<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;win32com.client&quot;</span>: self.win32com.client,<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;win32file&quot;</span>: mock.MagicMock(),<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;win32service&quot;</span>: mock.MagicMock(),<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;win32serviceutil&quot;</span>: mock.MagicMock(),<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;winerror&quot;</span>: mock.MagicMock(),<br>        <span style=\"line-height: 1.6; color: #e6db74;\">&quot;wmi&quot;</span>: self.wmimock<br>        &#125;<br><br>self.module_patcher = mock.patch.dict(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;sys.modules&quot;</span>, modules)<br>self.module_patcher.start()<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD8;&#x6709;&#x5982;&#x4F55;mock&#x6389;win32com.client&#x7684;&#x5BF9;&#x8C61;&#xFF1F;&#x4F8B;&#x5982;&#xFF0C;&#x5F85;&#x6D4B;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">Application = win32com<span style=\"line-height: 1.6;\">.client</span><span style=\"line-height: 1.6;\">.Dispatch</span>(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;PowerPoint.Application&quot;</span>)<br>source_ppt = Application<span style=\"line-height: 1.6;\">.Presentations</span><span style=\"line-height: 1.6;\">.Open</span>(path)<br>source_ppt<span style=\"line-height: 1.6;\">.Slides</span><span style=\"line-height: 1.6;\">.InsertFromFile</span>(os<span style=\"line-height: 1.6;\">.path</span><span style=\"line-height: 1.6;\">.abspath</span>(chart), index, <span style=\"line-height: 1.6; color: #ae81ff;\">1</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">1</span>)<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x56E0;&#x4E3A;&#x5BF9;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">win32com.client</code>&#x5B9E;&#x73B0;&#x4E00;&#x65E0;&#x6240;&#x77E5;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;mock&#xFF0C;&#x63A8;&#x6D4B;mock&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF0C;&#x8FD8;&#x672A;&#x9A8C;&#x8BC1;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">mockApp = mock.<span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">Mock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span><br>with mock.<span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">patch</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(<span style=\"line-height: 1.6; color: #e6db74;\">&apos;MyModule.win32com.client.Dispatch&apos;</span>, return_value=mockApp)</span></span> as mockWin32com:<br>    mockPpt = mock.<span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #a6e22e;\">Mock</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span><br>    mockApp<span style=\"line-height: 1.6;\">.Presnetations</span><span style=\"line-height: 1.6;\">.Open</span><span style=\"line-height: 1.6;\">.return_value</span> = mockPpt<br>    mockPpt<span style=\"line-height: 1.6;\">.Slides</span><span style=\"line-height: 1.6;\">.InsertFromFile</span><span style=\"line-height: 1.6;\">.assert_called_once_with</span>(...)<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x56E0;&#x4E3A;python&#x7684;&#x8BED;&#x8A00;&#x7279;&#x6027;&#xFF0C;python&#x7684;Mock&#x6846;&#x67B6;&#x8FD8;&#x662F;&#x6BD4;Java&#x7684;Mock&#x6846;&#x67B6;&#x8981;&#x7075;&#x6D3B;&#x5F88;&#x591A;&#x3002;&#x6BD4;&#x5982;&#xFF1A;&#x5BF9;&#x7C7B;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;Mock&#xFF0C;&#x975E;&#x5E38;&#x5BB9;&#x6613;&#xFF0C;&#x800C;Java&#x5219;&#x9700;&#x8981;&#x7ECF;&#x8FC7;&#x7279;&#x6B8A;&#x5904;&#x7406;&#x3002;&#x8FD8;&#x6709;&#x5BF9;&#x63A5;&#x53E3;&#x7684;fake&#x5316;&#xFF0C;&#x7528;side_effect&#x5F88;&#x5BB9;&#x6613;&#x5B9E;&#x73B0;&#xFF0C;&#x4F46;&#x662F;Java Mock&#x5219;&#x8981;&#x7528;&#x5230;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">when().thenAnswer()&#123;&#125;</code>&#x3002;&#x9EBB;&#x70E6;&#x53C8;&#x4E0D;&#x76F4;&#x89C9;&#x3002;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">when(...).thenAnswer(<span style=\"line-height: 1.6; color: #f92672;\">new</span> Answer() &#123;<br>    <span style=\"line-height: 1.6;\">@Override</span><br>    <span style=\"line-height: 1.6; color: #f92672;\">public</span> <span style=\"line-height: 1.6; color: #f92672;\">Object <span style=\"line-height: 1.6; color: #a6e22e;\">answer</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(InvocationOnMock invocation)</span> <span style=\"line-height: 1.6; color: #66d9ef;\">throws</span> Throwable </span>&#123;<br>        <span style=\"line-height: 1.6; color: #f92672;\">return</span> value;<br>    &#125;<br>&#125;);<br></code></pre></div><center style=\"display:none\">%23python%20mock%u521D%u6B65%0A@%28%u5B66%u4E60%u7B14%u8BB0%29%5Bpython%2C%20mock%2C%20unittest%5D%0A%0A%5BTOC%5D%0A%0A%u4ECEAndroid%u5355%u5143%u6D4B%u8BD5%u4E2D%uFF0C%u63A5%u89E6%u5230Java%u7684mock%u6846%u67B6%u3002%u53C2%u770B%u8FD9%u7BC7%u7B14%u8BB0%u300A%5BAndroid%u5355%u5143%u6D4B%u8BD5%5D%28https%3A//app.yinxiang.com/shard/s10/nl/161681/4769d75d-17cc-4dcc-96b8-b746bcae53c1%29%u300B%u3002%u6700%u8FD1%u5728%u505ADashboard%20Generator%uFF0C%u8981%u7528python%u89E3%u6790excel%uFF0Cppt%u548C%u7F51%u9875%uFF0C%u6D4B%u8BD5%u6548%u7387%u6781%u4F4E%u3002%u6240%u4EE5%u8003%u8651%u5230%u53EF%u4EE5%u7528mock%u6765%u4EE3%u66FF%u4E00%u4E9B%u8017%u65F6%u7684%u64CD%u4F5C%u548C%u8D44%u6E90%u3002%u4E8E%u662F%u63A5%u89E6%u5230python%u7684mock%u6846%u67B6%u3002%0Apython%20mock%u57283.0%u4E2D%u5DF2%u7ECF%u96C6%u6210%u4E3A%u5185%u7F6E%u7C7B%uFF0C%u4F46%u662F2.7%u4ECD%u7136%u9700%u8981%u7528pip%u6765%u5B89%u88C5%u3002%u8FD9%u4E5F%u4E0D%u96BE%u3002%u7136%u540E%u5728%u7F51%u4E0A%u641C%u96C6%u4E86%u51E0%u7BC7%u8FD8%u4E0D%u9519%u7684%u6587%u7AE0%uFF0C%u5982%u4E0B%uFF1A%0A-%20%5BPython%20Mock%u7684%u5165%u95E8%5D%28https%3A//app.yinxiang.com/shard/s10/nl/161681/1cb1675b-d132-408e-a88a-0eeb3d81fcc2%29%0A-%20%5BMocking%20Python%20imports%5D%28https%3A//app.yinxiang.com/shard/s10/nl/161681/d063563d-dc7d-4373-96a9-a0759de8e970%29%0A-%20%5BUsing%20Mocks%20in%20Python%5D%28https%3A//app.yinxiang.com/shard/s10/nl/161681/b12c60d1-416d-44da-8d6d-9ad1f39803dd%29%0A-%20%5BMock%u5B98%u65B9%u6587%u6863%5D%28http%3A//www.voidspace.org.uk/python/mock/mock.html%29%0A%0A%23%23%u7B80%u4ECB%0A%u56E0%u4E3A%u662Fpython%u8BED%u8A00%u7684%u7279%u6027%uFF0C%u6240%u4EE5Mock%u4E0A%u624B%u975E%u5E38%u5BB9%u6613%u3002%u7A83%u4EE5%u4E3A%u6BD4Java%28Android%29%20Mock%u8981%u5BB9%u6613%u7684%u591A%u3002%0A%23%23%23Mock%20vs.%20Stub/Fake%0A%u53C2%u770B%5BUsing%20Mocks%20in%20Python%5D%28https%3A//app.yinxiang.com/shard/s10/nl/161681/b12c60d1-416d-44da-8d6d-9ad1f39803dd%29%uFF0C%u4E5F%u53EF%u4EE5%u53C2%u770BMartin%20Fowler%u7684%u4E00%u7BC7%u6587%u7AE0%5BMocks%20Aren%27t%20Stubs%5D%28https%3A//martinfowler.com/articles/mocksArentStubs.html%29%u3002%0A%u8FD9%u91CC%u63D0%u5230%u4E86Mock%u548CStub/Fake%u7684%u533A%u522B%u3002%u8FD9%u662F%u6211%u4EE5%u524D%u4E00%u76F4%u6CA1%u6709%u6CE8%u610F%u5230%u7684%u3002%0A%0A%23%23%23%23%u4E3A%u4EC0%u4E48%u8981%u7528Mock%uFF1F%0A%3EA%20good%20unit%20test%20has%20to%20be%20**repeatable**%2C%20allowing%20you%20to%20**isolate**%20and%20identify%20a%20fault.%20But%20the%20test%20resource%20might%20give%20out%20stochastic%20results%2C%20or%20it%20might%20have%20widely%20varying%20response%20times.%20And%20as%20a%20result%2C%20you%20end%20up%20glossing%20over%20a%20potential%20showstopper.%0A%0A%u6D4B%u8BD5%u5FC5%u987B%u662F%u53EF%u91CD%u590D%u7684%uFF0C%u89E3%u8026%u7684%u3002%u4F46%u4EE3%u7801%u7528%u5230%u7684%u8FD0%u884C%u65F6%u8D44%u6E90%u5F80%u5F80%u662F%u968F%u673A%u7684%uFF0C%u6216%u8005%u6602%u8D35%u7684%uFF08%u6BD4%u5982%u7F51%u9875%uFF0C%u603B%u662F%u5728%u53D8%u5316%u7684%uFF0C%u6BD4%u5982%uFF0Cdownload%u6587%u4EF6%uFF0C%u975E%u5E38%u8017%u65F6%uFF09%u3002%u6211%u4EEC%u4E0D%u80FD%u8BA9%u6211%u4EEC%u7684%u6D4B%u8BD5%u9996%u5148%u4E0D%u80FD%u4F9D%u8D56%u4E8E%u6D4B%u8BD5%u8D44%u6E90%uFF0C%u5176%u6B21%u9700%u8981%u6709%u6BD4%u8F83%u9AD8%u7684%u6548%u7387%u3002%0A%0A%3EThese%20are%20some%20of%20the%20reasons%20why%20you%20might%20want%20to%20use%20a%20mock%20in%20place%20of%20a%20**test%20resource**.%20A%20mock%20can%20present%20the%20same%20set%20of%20method%20interfaces%20as%20the%20resource%20to%20the%20test%20subject.%20But%20a%20mock%20is%20easier%20to%20setup%2C%20easier%20to%20manage.%20It%20can%20deliver%20deterministic%20results%2C%20and%20it%20can%20be%20customized%20to%20suit%20a%20particular%20test.%20And%20it%20can%20be%20easily%20updated%20to%20reflect%20changes%20in%20the%20actual%20resource.%0A%0A%23%23%23%23Stubs%20%26%20Fake%0AStub%0A%3EA%20stub%20presents%20a%20set%20of%20method%20interfaces%20to%20the%20test%20subject%2C%20the%20same%20set%20the%20subject%20would%20see%20in%20an%20actual%20test%20resource.%20When%20the%20test%20subject%20calls%20a%20stub%20method%2C%20the%20stub%20may%20respond%20with%20a%20predetermined%20set%20of%20results.%20It%20may%20raise%20an%20error%20or%20exception%2C%20also%20predetermined.%20A%20stub%20may%20track%20its%20interactions%20with%20the%20test%20subject%2C%20but%20it%20performs%20no%20tasks%20outside%20the%20narrow%20scope%20of%20its%20programming.%0A%0AFake%0A%3EA%20fake%20also%20presents%20a%20set%20of%20method%20interfaces%20and%20tracks%20its%20interactions%20with%20the%20test%20subject.%20But%20unlike%20a%20stub%2C%20a%20fake%20actually%20processes%20input%20data%20from%20the%20test%20subject%20and%20produces%20results%20based%20on%20that%20data.%20In%20short%2C%20a%20fake%20is%20a%20functional%2C%20but%20non-production%20version%20of%20the%20actual%20test%20resource.%20It%20lacks%20the%20checks%20and%20balances%20found%20in%20resource%2C%20it%20uses%20simpler%20algorithms%2C%20and%20it%20seldom%2C%20if%20ever%2C%20stores%20or%20transports%20data.%0A%0AStub%u548CFake%u90FD%u662F%u9488%u5BF9%u63A5%u53E3%u7684%u6A21%u62DF%uFF0C%u5728%u9700%u8981%u5BF9%u72B6%u6001%u8FDB%u884C%u6D4B%u8BD5%u7684%u60C5%u51B5%u65F6%uFF0C%u6211%u4EEC%u53EF%u4EE5%u7528Stub%u6216%u8005Fake%u3002%u4F8B%u5982UnitTest++%uFF0C%u5C31%u662F%u7528%u7684Stub%u3002%0A%u4F46%u662F%u5982%u679C%u6211%u4EEC%u8981%u6D4B%u8BD5%u5177%u4F53%u7684%u4EE3%u7801%u884C%u4E3A%uFF0C%u6211%u4EEC%u5F80%u5F80%u8981%u7528%u5230Mock%u3002%u6BD4%u5982%uFF0C%u4E00%u4E2A%u51FD%u6570%u8C03%u7528%u4E86%u51E0%u6B21%uFF0C%u7528%u7684%u4EC0%u4E48%u53C2%u6570%uFF0C%u7B49%u7B49%u3002%0A%0A%u6211%u7684%u7406%u89E3%uFF0C%u5176%u5B9E%u4ED6%u4EEC%u4E09%u8005%u4E4B%u95F4%u5E76%u6CA1%u6709%u5F88%u660E%u663E%u7684%u754C%u9650%u3002%u7528Mock%u7684%u65F6%u5019%uFF0C%u9488%u5BF9%u4E00%u4E9B%u9700%u8981%u6A21%u62DF%u7684%u63A5%u53E3%uFF0C%u4ECD%u7136%u53EF%u4EE5%u6709%u529E%u6CD5%u5C06%u4E4Bstub%20out%u3002%u53EA%u662FMock%u5E76%u4E0D%u64C5%u957F%uFF0C%u65B9%u6CD5%u4E0D%u591F%u76F4%u89C9%u3002%u540C%u7406Stub%u4E5F%u53EF%u4EE5%u7528%u6765mock%u6389%u4E00%u4E9B%u5BF9%u8C61%u3002%0AStub/Fake%u66F4%u50CF%u662F%u5E94%u7528%u4E8E%u9762%u5411%u63A5%u53E3%u7F16%u7A0B%uFF0C%u800CMock%u66F4%u64C5%u957F%u4E8E%u9762%u5411%u5BF9%u8C61%u7F16%u7A0B%u3002%0A%0A%23%23%23%23%u4F55%u65F6%u4F7F%u7528Mock%0A%3EOf%20course%2C%20mocks%20are%20not%20without%20issues.%20Designing%20an%20accurate%20mock%20is%20difficult%2C%20especially%20if%20you%20have%20no%20reliable%20information%20on%20the%20test%20resource.%20You%20can%20try%20and%20find%20an%20open-source%20match%2C%20or%20you%20can%20make%20a%20guesstimate%20on%20the%20resource%27s%20method%20interface.%20Whichever%20you%20choose%2C%20you%20can%20update%20the%20mock%20easily%20later%20on%2C%20should%20you%20get%20more%20detailed%20information%20on%20the%20preferred%20resource.%20Too%20many%20mocks%20can%20complicate%20a%20test%2C%20making%20it%20harder%20for%20you%20to%20track%20down%20a%20failure.%20%0A%3E**Best%20practice**%20%0A%3E%20-%20is%20to%20limit%20a%20test%20case%20to%20**one%20or%20two%20mocks**%0A%3E%20-%20or%20use%20**separate%20test%20cases**%20for%20each%20mock/subject%20pairing.%0A%0A%0A%23%23%23%u5982%u4F55%u4F7F%u7528%0A%21%5BAlt%20text%7C400x0%5D%28./1486178612793.png%29%0A%0A%23%23%23%23constructor%0A%60%60%60%0Aclass%20Mock%28spec%3DNone%2C%20side_effect%3DNone%2C%20return_value%3DDEFAULT%2C%20wraps%3DNone%2C%20name%3DNone%2C%20spec_set%3DNone%2C%20**kwargs%29%0A%60%60%60%0A%u4E3B%u8981%u53C2%u6570%u5982%u4E0B%uFF1A%0A-%20name%3A%20%u53EA%u6709%u6807%u8BB0%u4F5C%u7528%uFF0C%u5728print%u6216%u8005repr%u7684%u65F6%u5019%u53EF%u4EE5%u770B%u5230%uFF0C%u8C03%u8BD5%u7684%u65F6%u5019%u6709%u7528%0A-%20return_value%3A%20%u6700%u7B80%u5355%u7684%u5BF9%u63A5%u53E3%u7684stub%u5316%0A-%20side_effect%3A%20%u5176%u53C2%u6570%u53EF%u4EE5%u4E3A%u5217%u8868%u6216%u51FD%u6570%uFF0C%u82E5%u5176%u8FD4%u56DE%u503C%u4E3ADEFAULT%uFF0C%u5219%u91C7%u7528return_value%u7684%u503C%uFF0C%u82E5%u5176%u8FD4%u56DE%u503C%u4E0D%u662FDEFAULT%uFF0C%u5219%u5176%u4F1A%u8986%u76D6return_value%u7684%u503C%0A-%20spec%3A%20%20%u53EF%u4EE5%u662Fstring%u5217%u8868%uFF0C%u4E5F%u53EF%u4EE5%u4E3Aclass%u6216instance%u3002Accessing%20any%20attribute%20not%20in%20this%20list%20will%20raise%20an%20AttributeError.%0A%0Aside_effect%u4E3A%u5217%u8868%0A%60%60%60%0A%3E%3E%3E%20mock%20%3D%20Mock%28%29%0A%3E%3E%3E%20mock.side_effect%20%3D%20%5B3%2C%202%2C%201%5D%0A%3E%3E%3E%20mock%28%29%2C%20mock%28%29%2C%20mock%28%29%0A%283%2C%202%2C%201%29%0A%60%60%60%0Aside_effect%u4E3A%u51FD%u6570%uFF0C%u5176%u53C2%u6570%u4E0E%u771F%u5B9E%u4F20%u5165%u7684%u53C2%u6570%u76F8%u540C%0A%60%60%60%0A%3E%3E%3E%20side_effect%20%3D%20lambda%20value%3A%20value%20+%201%0A%3E%3E%3E%20mock%20%3D%20Mock%28side_effect%3Dside_effect%29%0A%3E%3E%3E%20mock%283%29%0A4%0A%3E%3E%3E%20mock%28-8%29%0A-7%0A%60%60%60%0A%0A%23%23%23%23%u5BF9%u51FD%u6570%u8C03%u7528%u7684%u68C0%u6D4B%0Amock%u5305%u542B%u4EE5%u4E0B%u5C5E%u6027%uFF1A%0A-%20called%0A-%20call_count%0A-%20call_args%0A-%20call_args_list%0A%u542B%u4E49%u663E%u800C%u6613%u89C1%uFF0C%u7528%u6CD5%u53C2%u8003%5B%u5B98%u65B9%u6587%u6863%5D%28http%3A//www.voidspace.org.uk/python/mock/mock.html%29%0A%0Amethod_calls%20%26%20mock_calls%0A%60%60%60%0A%3E%3E%3E%20mock%20%3D%20Mock%28%29%0A%3E%3E%3E%20mock.method%28%29%0A%3CMock%20name%3D%27mock.method%28%29%27%20id%3D%27...%27%3E%0A%3E%3E%3E%20mock.property.method.attribute%28%29%0A%3CMock%20name%3D%27mock.property.method.attribute%28%29%27%20id%3D%27...%27%3E%0A%3E%3E%3E%20mock.method_calls%0A%5Bcall.method%28%29%2C%20call.property.method.attribute%28%29%5D%0A%0A%3E%3E%3E%20mock%20%3D%20MagicMock%28%29%0A%3E%3E%3E%20result%20%3D%20mock%281%2C%202%2C%203%29%0A%3E%3E%3E%20mock.first%28a%3D3%29%0A%3CMagicMock%20name%3D%27mock.first%28%29%27%20id%3D%27...%27%3E%0A%3E%3E%3E%20mock.second%28%29%0A%3CMagicMock%20name%3D%27mock.second%28%29%27%20id%3D%27...%27%3E%0A%3E%3E%3E%20int%28mock%29%0A1%0A%3E%3E%3E%20result%281%29%0A%3CMagicMock%20name%3D%27mock%28%29%28%29%27%20id%3D%27...%27%3E%0A%3E%3E%3E%20expected%20%3D%20%5Bcall%281%2C%202%2C%203%29%2C%20call.first%28a%3D3%29%2C%20call.second%28%29%2C%0A...%20call.__int__%28%29%2C%20call%28%29%281%29%5D%0A%3E%3E%3E%20mock.mock_calls%20%3D%3D%20expected%0ATrue%0A%60%60%60%0A%0A%23%23%23%23assert%0AMock%u63D0%u4F9B%u4E86%u4EE5%u4E0B%u51E0%u79CDassert%uFF1A%0A-%20assert_called_once%0A-%20assert_called_with%0A-%20assert_called_once_with%0A-%20assert_has_calls%0A-%20assert_any_calls%0A%u524D%u9762%u4E09%u4E2A%u5F88%u76F4%u89C9%uFF0C%u540E%u9762%u4E24%u4E2A%u7A0D%u4F5C%u89E3%u91CA%u3002%0A%0Aassert_any_call%0A%3EThe%20assert%20assert_any_call%28%29%20checks%20if%20the%20test%20subject%20called%20a%20mocked%20method%20at%20any%20point%20of%20the%20test%20routine.%20This%20is%20regardless%20of%20how%20many%20other%20calls%20were%20made%20between%20the%20mocked%20method%20and%20the%20assert.%20%0A%0Aassert_has_calls%0A%3EThis%20one%20looks%20at%20a%20sequence%20of%20method%20calls%2C%20checks%20if%20they%20are%20in%20the%20right%20order%20and%20with%20the%20right%20arguments.%0A%0A%60%60%60%0Afrom%20mock%20import%20Mock%2C%20call%0A%20%0A%23%20The%20mock%20specification%0Aclass%20Foo%28object%29%3A%0A%20%20%20%20_fooValue%20%3D%20123%0A%20%20%20%20%20%0A%20%20%20%20def%20callFoo%28self%29%3A%0A%20%20%20%20%20%20%20%20pass%0A%20%20%20%20%20%0A%20%20%20%20def%20doFoo%28self%2C%20argValue%29%3A%0A%20%20%20%20%20%20%20%20pass%0A%20%0A%23%20create%20the%20mock%20object%0AmockFoo%20%3D%20Mock%28spec%20%3D%20Foo%29%0Aprint%20mockFoo%0A%23%20returns%20%3CMock%20spec%3D%27Foo%27%20id%3D%27507120%27%3E%0A%20%0AmockFoo.callFoo%28%29%0AmockFoo.doFoo%28%22narf%22%29%0AmockFoo.doFoo%28%22zort%22%29%0A%20%0AfooCalls%20%3D%20%5Bcall.callFoo%28%29%2C%20call.dooFoo%28%22narf%22%29%2C%20call.doFoo%28%22zort%22%29%5D%0A%20%0AmockFoo.assert_has_calls%28fooCalls%29%0A%23%20AssertionError%3A%20Calls%20not%20found.%0A%23%20Expected%3A%20%5Bcall.callFoo%28%29%2C%20call.dooFoo%28%27narf%27%29%2C%20call.doFoo%28%27zort%27%29%5D%0A%23%20Actual%3A%20%5Bcall.callFoo%28%29%2C%20call.doFoo%28%27narf%27%29%2C%20call.doFoo%28%27zort%27%29%5D%0A%20%0AfooCalls%20%3D%20%5Bcall.callFoo%28%29%2C%20call.dooFoo%28%22narf%22%29%2C%20call.doFoo%28%22zort%22%29%5D%0AmockFoo.assert_has_calls%28fooCalls%2C%20any_order%20%3D%20True%29%0A%23%20AssertionError%3A%20%28call.dooFoo%28%27narf%27%29%2C%29%20not%20all%20found%20in%20call%20list%0A%60%60%60%0A%0A%23%23%u9AD8%u9636%u7279%u6027%0A%23%23%23MagicMock%20vs.%20Mock%0A%3EWith%20Mock%20you%20can%20mock%20magic%20methods%20but%20you%20have%20to%20define%20them.%20MagicMock%20has%20%22%5Bdefault%20implementations%20of%20most%20of%20the%20**magic%20methods**%5D%28http%3A//www.voidspace.org.uk/python/mock/magicmock.html%23mock.MagicMock%29%22.%0A%3EIf%20you%20don%27t%20need%20to%20test%20any%20magic%20methods%2C%20Mock%20is%20adequate%20and%20doesn%27t%20bring%20a%20lot%20of%20extraneous%20things%20into%20your%20tests.%20If%20you%20need%20to%20test%20a%20lot%20of%20magic%20methods%20MagicMock%20will%20save%20you%20some%20time.%0A%0A%u54EA%u4E9Bmagic%20methods%uFF1F%u770B%u4E0B%u9762%0A*%20__lt__%3A%20NotImplemented%0A*%20__gt__%3A%20NotImplemented%0A*%20__le__%3A%20NotImplemented%0A*%20__ge__%3A%20NotImplemented%0A*%20__int__%20%3A%201%0A*%20__contains__%20%3A%20False%0A*%20__len__%20%3A%201%0A*%20__iter__%20%3A%20iter%28%5B%5D%29%0A*%20__exit__%20%3A%20False%0A*%20__complex__%20%3A%201j%0A*%20__float__%20%3A%201.0%0A*%20__bool__%20%3A%20True%0A*%20__nonzero__%20%3A%20True%0A*%20__oct__%20%3A%20%u20181%u2019%0A*%20__hex__%20%3A%20%u20180x1%u2019%0A*%20__long__%20%3A%20long%281%29%0A*%20__index__%20%3A%201%0A*%20__hash__%20%3A%20default%20hash%20for%20the%20mock%0A*%20__str__%20%3A%20default%20str%20for%20the%20mock%0A*%20__unicode__%20%3A%20default%20unicode%20for%20the%20mock%0A*%20__sizeof__%3A%20default%20sizeof%20for%20the%20mock%0A%60%60%60%0A%3E%3E%3E%20mock%20%3D%20MagicMock%28%29%0A%3E%3E%3E%20int%28mock%29%0A1%0A%3E%3E%3E%20len%28mock%29%0A0%0A%3E%3E%3E%20hex%28mock%29%0A%270x1%27%0A%3E%3E%3E%20list%28mock%29%0A%5B%5D%0A%3E%3E%3E%20object%28%29%20in%20mock%0AFalse%0A%60%60%60%0A%u6240%u8C13magic%20methods%u5C31%u662F%u4E00%u4E9B%u5185%u7F6E%u7684python%u8FD0%u7B97%u7B26%uFF0C%u800CMagicMock%u652F%u6301%u8FD9%u4E9B%u8FD0%u7B97%u7B26%uFF0CMock%u4E0D%u652F%u6301%0A%0A%23%23%23mock%20import%0A%5BMocking%20Python%20imports%5D%28https%3A//app.yinxiang.com/shard/s10/nl/161681/d063563d-dc7d-4373-96a9-a0759de8e970%29%u8FD9%u91CC%u6709%u63D0%u5230%u3002%u5176%u5B9E%u5F88%u7B80%u5355%uFF0C%u770B%u4EE3%u7801%0A%60%60%60%0A%23%20A.py%0Aimport%20B%0AB.foo%28%29%0A%0A%23%20test.py%0AA.B%20%3D%20mock.Mock%28%29%0AA.B.foo.return_value%20%3D%20123%0A%60%60%60%0A%0A%23%23%23mock%20class%20constructor%0A%u76F4%u63A5%u8D34%u4E0A%u5B9E%u9645%u7684%u6D4B%u8BD5%u4EE3%u7801%0A%60%60%60python%0AmockSMBConnObj%20%3D%20mock.Mock%28%29%0AmockSMBConn%20%3D%20mock.Mock%28return_value%3DmockSMBConnObj%29%20%23%20mock%20constructor%0A%60%60%60%0A%0A%23%23%23mock%u5BF9%u8C61%u7684%u81EA%u52A8%u521B%u5EFA%0A%u5F53%u8BBF%u95EE%u4E00%u4E2Amock%u5BF9%u8C61%u4E2D%u4E0D%u5B58%u5728%u7684%u5C5E%u6027%u65F6%uFF0Cmock%u4F1A%u81EA%u52A8%u5EFA%u7ACB%u4E00%u4E2A%u5B50mock%u5BF9%u8C61%uFF0C%u5E76%u4E14%u628A%u6B63%u5728%u8BBF%u95EE%u7684%u5C5E%u6027%u6307%u5411%u5B83%uFF0C%u8FD9%u4E2A%u529F%u80FD%u5BF9%u4E8E%u5B9E%u73B0%u591A%u7EA7%u5C5E%u6027%u7684mock%u5F88%u65B9%u4FBF%u3002%0A%60%60%60%0Aclient%20%3D%20mock.Mock%28%29%0Aclient.v2_client.get.return_value%20%3D%20%27200%27%0A%60%60%60%0A%u4E0A%u9762%u4F8B%u5B50%u4E2D%60client.v2_client.get%60%u5C31%u662F%u81EA%u52A8%u751F%u6210%u7684mock%u5BF9%u8C61%0A%u7C7B%u4F3C%u81EA%u52A8%u751F%u6210%uFF0C%u6211%u4EEC%u8FD8%u53EF%u4EE5%u91C7%u7528%60attach_mock%60%u7684%u65B9%u6CD5%u3002%u4E0D%u540C%u7684%u662F%uFF0Cattach_mock%u4F1A%u8BA9%u88ABattach%u7684%u53CC%u65B9%u5177%u6709%u7236%u5B50%u5173%u7CFB%uFF0C%u5219%u5BF9%u5B50mock%u7684%u8C03%u7528%u4F1A%u88AB%u8BA1%u5165%u7236%u7684mock_calls%u3002%u53C2%u8003%5BAttaching%20Mocks%20as%20Attributes%5D%28http%3A//www.voidspace.org.uk/python/mock/mock.html%23attaching-mocks-as-attributes%29%0A%0A%23%23%23patch%0A%u901A%u8FC7patch%uFF0C%u6211%u4EEC%u53EF%u4EE5%u63A7%u5236Mock%u5BF9%u8C61%u7684%u751F%u5B58%u5468%u671F%u3002%u610F%u601D%u5C31%u662F%u5728%u4E00%u4E2A%u51FD%u6570%u8303%u56F4%u5185%uFF0C%u6216%u8005%u4E00%u4E2A%u7C7B%u7684%u8303%u56F4%u5185%uFF0C%u6216%u8005with%u8BED%u53E5%u7684%u8303%u56F4%u5185mock%u6389%u4E00%u4E2A%u5BF9%u8C61%u3002%0A%u6709%u4E0B%u9762%0A%0Adecorator%0A%60%60%60%0A%3E%3E%3E%20@patch%28%27__main__.SomeClass%27%29%0A...%20def%20function%28normal_argument%2C%20mock_class%29%3A%0A...%20%20%20%20%20print%20mock_class%20is%20SomeClass%0A...%0A%3E%3E%3E%20function%28None%29%0ATrue%0A%60%60%60%0A%0Acontext%20manager%0A%60%60%60%0A%3E%3E%3E%20class%20Class%28object%29%3A%0A...%20%20%20%20%20def%20method%28self%29%3A%0A...%20%20%20%20%20%20%20%20%20pass%0A...%0A%3E%3E%3E%20with%20patch%28%27__main__.Class%27%29%20as%20MockClass%3A%0A...%20%20%20%20%20instance%20%3D%20MockClass.return_value%0A...%20%20%20%20%20instance.method.return_value%20%3D%20%27foo%27%0A...%20%20%20%20%20assert%20Class%28%29%20is%20instance%0A...%20%20%20%20%20assert%20Class%28%29.method%28%29%20%3D%3D%20%27foo%27%0A%60%60%60%0A%0Apatcher%0A%60%60%60%0A%3E%3E%3E%20Original%20%3D%20Class%0A%3E%3E%3E%20patcher%20%3D%20patch%28%27__main__.Class%27%2C%20spec%3DTrue%29%0A%3E%3E%3E%20MockClass%20%3D%20patcher.start%28%29%0A%3E%3E%3E%20instance%20%3D%20MockClass%28%29%0A%3E%3E%3E%20assert%20isinstance%28instance%2C%20Original%29%0A%3E%3E%3E%20patcher.stop%28%29%0A%60%60%60%0A%0Apatch.object%u548Cpatch%u7C7B%u4F3C%uFF0C%u53EA%u662F%u5199%u6CD5%u4E0D%u540C%uFF0C%u770B%u4E0B%u9762%u5BF9%u6BD4%uFF1A%0A%60%60%60%0A@patch.object%28SomeClass%2C%20%27class_method%27%29%0A@patch%28%27SomeClass.class_method%27%29%0A%60%60%60%0A%0Apatch%u8FD8%u6709%u5F88%u591A%u79CD%u5176%u4ED6%u7528%u6CD5%uFF0Cpatch.multiple%2C%20patch.dict%u7B49%u7B49%u3002%u53C2%u770B%5BMore%20Patch%5D%28http%3A//www.voidspace.org.uk/python/mock/patch.html%23patch-dict%29%0A%0A%23%23%23%u5176%u4ED6%u672A%u51B3%u7684%u95EE%u9898%0A%u5176%u5B9E%u8FD8%u6709%u5F88%u591Amock%u9AD8%u7EA7%u7684%u7528%u6CD5%uFF0C%u4F8B%u5982%uFF0C%u5F53%u6211%u60F3mock%u6389win32com%u7684%u65F6%u5019%uFF0C%u641C%u5230%u7684%u8FD9%u4E2A%u7F51%u9875%5BMocking%20out%20python%20OS%20specific%20imports%5D%28http%3A//ilostmynotes.blogspot.com/2014/10/mocking-out-python-os-specific-imports.html%29%u3002%u5176%u4E2D%u6709%u4E00%u6BB5%u4EE3%u7801%uFF1A%0A%60%60%60%0A%20modules%20%3D%20%7B%0A%20%20%20%20%20%20%20%20%22_winreg%22%3A%20mock.MagicMock%28%29%2C%0A%20%20%20%20%20%20%20%20%22pythoncom%22%3A%20mock.MagicMock%28%29%2C%0A%20%20%20%20%20%20%20%20%22pywintypes%22%3A%20mock.MagicMock%28%29%2C%0A%20%20%20%20%20%20%20%20%22win32api%22%3A%20mock.MagicMock%28%29%2C%0A%20%20%20%20%20%20%20%20%22win32com%22%3A%20self.win32com%2C%0A%20%20%20%20%20%20%20%20%22win32com.client%22%3A%20self.win32com.client%2C%0A%20%20%20%20%20%20%20%20%22win32file%22%3A%20mock.MagicMock%28%29%2C%0A%20%20%20%20%20%20%20%20%22win32service%22%3A%20mock.MagicMock%28%29%2C%0A%20%20%20%20%20%20%20%20%22win32serviceutil%22%3A%20mock.MagicMock%28%29%2C%0A%20%20%20%20%20%20%20%20%22winerror%22%3A%20mock.MagicMock%28%29%2C%0A%20%20%20%20%20%20%20%20%22wmi%22%3A%20self.wmimock%0A%20%20%20%20%20%20%20%20%7D%0A%0Aself.module_patcher%20%3D%20mock.patch.dict%28%22sys.modules%22%2C%20modules%29%0Aself.module_patcher.start%28%29%0A%60%60%60%0A%u8FD8%u6709%u5982%u4F55mock%u6389win32com.client%u7684%u5BF9%u8C61%uFF1F%u4F8B%u5982%uFF0C%u5F85%u6D4B%u4EE3%u7801%u5982%u4E0B%0A%60%60%60%0AApplication%20%3D%20win32com.client.Dispatch%28%22PowerPoint.Application%22%29%0Asource_ppt%20%3D%20Application.Presentations.Open%28path%29%0Asource_ppt.Slides.InsertFromFile%28os.path.abspath%28chart%29%2C%20index%2C%201%2C%201%29%0A%60%60%60%0A%u56E0%u4E3A%u5BF9%60win32com.client%60%u5B9E%u73B0%u4E00%u65E0%u6240%u77E5%uFF0C%u4E0D%u77E5%u9053%u5982%u4F55mock%uFF0C%u63A8%u6D4Bmock%u4EE3%u7801%u5982%u4E0B%uFF0C%u8FD8%u672A%u9A8C%u8BC1%0A%60%60%60%0AmockApp%20%3D%20mock.Mock%28%29%0Awith%20mock.patch%28%27MyModule.win32com.client.Dispatch%27%2C%20return_value%3DmockApp%29%20as%20mockWin32com%3A%0A%09mockPpt%20%3D%20mock.Mock%28%29%0A%09mockApp.Presnetations.Open.return_value%20%3D%20mockPpt%0A%09mockPpt.Slides.InsertFromFile.assert_called_once_with%28...%29%0A%60%60%60%0A%0A%23%u603B%u7ED3%0A%u56E0%u4E3Apython%u7684%u8BED%u8A00%u7279%u6027%uFF0Cpython%u7684Mock%u6846%u67B6%u8FD8%u662F%u6BD4Java%u7684Mock%u6846%u67B6%u8981%u7075%u6D3B%u5F88%u591A%u3002%u6BD4%u5982%uFF1A%u5BF9%u7C7B%u6784%u9020%u51FD%u6570%u7684Mock%uFF0C%u975E%u5E38%u5BB9%u6613%uFF0C%u800CJava%u5219%u9700%u8981%u7ECF%u8FC7%u7279%u6B8A%u5904%u7406%u3002%u8FD8%u6709%u5BF9%u63A5%u53E3%u7684fake%u5316%uFF0C%u7528side_effect%u5F88%u5BB9%u6613%u5B9E%u73B0%uFF0C%u4F46%u662FJava%20Mock%u5219%u8981%u7528%u5230%60when%28%29.thenAnswer%28%29%7B%7D%60%u3002%u9EBB%u70E6%u53C8%u4E0D%u76F4%u89C9%u3002%0A%60%60%60%0Awhen%28...%29.thenAnswer%28new%20Answer%28%29%20%7B%0A%09@Override%0A%09public%20Object%20answer%28InvocationOnMock%20invocation%29%20throws%20Throwable%20%7B%0A%09%09return%20value%3B%0A%09%7D%0A%7D%29%3B%0A%60%60%60%0A</center><br></div>",
            "tags": [
                "python",
                "unittest",
                "mock"
            ]
        },
        {
            "id": "https://zhougy0717.github.io/2016/10/19/Android%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/",
            "url": "https://zhougy0717.github.io/2016/10/19/Android%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/",
            "title": "Android单元测试",
            "date_published": "2016-10-18T23:41:45.000Z",
            "content_html": "<!DOCTYPE en-note SYSTEM 'http://xml.evernote.com/pub/enml2.dtd'><div class=\"enNote\" style=\"color: #2c3f51; font-family: &apos;Helvetica Neue&apos;, Arial, &apos;Hiragino Sans GB&apos;, STHeiti, &apos;Microsoft YaHei&apos;, &apos;WenQuanYi Micro Hei&apos;, SimSun, Song, sans-serif; line-height: 1.6;\" title lang=\"v2\" xml:lang dir><del style=\"position:relative;display:block;z-index:10;\"><a style=\"position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;\" href=\"http://maxiang.info/#/?provider=evernote_int&amp;guid=ade7b067-6df9-46f4-a97e-71b9e0b2cff8&amp;notebook=%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0\">Edit</a></del><div style=\"color: #2c3f51; font-family: &apos;Helvetica Neue&apos;, Arial, &apos;Hiragino Sans GB&apos;, STHeiti, &apos;Microsoft YaHei&apos;, &apos;WenQuanYi Micro Hei&apos;, SimSun, Song, sans-serif; line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"> <br>&#x4ECA;&#x65E5;&#x5728;&#x505A;&#x5FAE;&#x4FE1;IoT&#x6253;&#x5370;&#x673A;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x5176;&#x4E2D;&#x6D89;&#x53CA;&#x5230;&#x7528;Android&#x7A0B;&#x5E8F;&#x8BBF;&#x95EE;WPS&#x670D;&#x52A1;&#x6765;&#x5B9E;&#x73B0;&#x5C06;word&#x6587;&#x6863;&#x53E6;&#x5B58;&#x4E3A;PDF&#x7684;&#x529F;&#x80FD;&#x3002;&#x4E8E;&#x662F;&#xFF0C;&#x79C9;&#x7740;TDD&#x7684;&#x7CBE;&#x795E;&#xFF0C;&#x5F00;&#x59CB;&#x5B66;&#x4E60;&#x5982;&#x4F55;&#x5728;Android&#x4E2D;&#x505A;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x3002;</p><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\">&#x5165;&#x95E8;</h2><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">JUnit</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x9996;&#x5148;&#x770B;&#x5230;&#x7684;&#x662F;Android&#x7684;&#x5B98;&#x7F51;&#x6587;&#x6863;<a href=\"https://developer.android.com/training/testing/start/index.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Getting Started with Testing</a>, <a href=\"https://developer.android.com/training/testing/unit-testing/local-unit-tests.html\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Building Local Unit Tests</a>&#x3002;&#x6709;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x8DD1;&#x5728;&#x4E3B;&#x673A;&#x4E0A;&#x7684;&#xFF0C;&#x53EB;Local Unit Test&#xFF0C;&#x53E6;&#x4E00;&#x79CD;&#x8DD1;&#x5728;&#x76EE;&#x6807;&#x673A;&#x4E0A;&#xFF0C;&#x53EB;Instrumented Unit Test&#x3002; <br>Local Unit Test&#x57FA;&#x4E8E;JUnit&#xFF0C;&#x4E0A;&#x9762;&#x7684;&#x5173;&#x4E8E;Local Unit Test&#x7684;&#x94FE;&#x63A5;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x5982;&#x4F55;&#x5728;Android Studio&#x4E2D;&#x4F7F;&#x80FD;JUnit&#x7684;&#x8303;&#x4F8B;&#x4E86;&#x3002;&#x914D;&#x7F6E;&#x597D;Dependencies&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;Android Studio&#x4F1A;&#x53BB;maven&#x5E93;&#x4E2D;&#x6293;&#x53D6;JUnit&#x7684;jar&#x5305;&#x5E76;&#x5BFC;&#x5165;&#x5230;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E86;&#x3002; <br>&#x9047;&#x5230;&#x9519;&#x8BEF;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">Error:(23, 17)&quot;Failed to resolve: junit:junit:4.12</code>&#xFF0C;&#x5728;build.gradle&#x4E0B;&#x9762;&#x52A0;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #f92672;\">repositories</span> &#123;<br>        <span style=\"line-height: 1.6; color: #f92672;\">maven</span> &#123; <span style=\"line-height: 1.6; color: #f92672;\">url</span> <span style=\"line-height: 1.6; color: #e6db74;\">&apos;http://repo1.maven.org/maven2&apos;</span> &#125;<br>        jcenter &#123; <span style=\"line-height: 1.6; color: #f92672;\">url</span> <span style=\"line-height: 1.6; color: #e6db74;\">&quot;http://jcenter.bintray.com/&quot;</span> &#125;<br>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6216;&#x8005;&#x81EA;&#x884C;&#x53BB;&#x4E0B;&#x8F7D;junit-4.12.jar&#xFF0C;&#x518D;&#x653E;&#x5230;libs&#x76EE;&#x5F55;&#x5E95;&#x4E0B;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">Mockito</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5728;C++&#x4E2D;&#x505A;Unit Test&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x5F80;&#x5F80;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x6784;&#x5EFA;stub&#xFF0C;&#x6765;&#x9694;&#x79BB;&#x9700;&#x8981;&#x6D4B;&#x8BD5;&#x7684;code&#x3002;&#x5728;Java&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x73B0;&#x6210;&#x7684;&#x6846;&#x67B6;&#x53EF;&#x4EE5;&#x7528;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;<a href=\"https://github.com/mockito/mockito\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mockito</a>&#x3002;&#x7F51;&#x4E0A;&#x5173;&#x4E8E;Mockito+Android&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7684;&#x6587;&#x7AE0;&#x4E00;&#x641C;&#x4E00;&#x5927;&#x645E;&#x3002;&#x6211;&#x4E5F;&#x7B80;&#x5355;&#x7684;&#x6458;&#x5F55;&#x4E86;&#x51E0;&#x4E2A;&#x3002;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"https://www.evernote.com/shard/s24/nl/2724128/360fa827-de1f-46e7-b815-465c074a5b9e\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Android&#x6D4B;&#x8BD5;&#x4E8C;&#xFF1A;Mockito&#x4E0E;&#x5355;&#x5143;&#x6D4B;&#x8BD5;</a></li><li style=\"line-height: 1.6;\"><a href=\"https://www.evernote.com/shard/s24/nl/2724128/beaaf776-621e-4fdb-9dca-e6eedc6a1029\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Android &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E4B;JUnit&#x548C;Mockito</a></li><li style=\"line-height: 1.6;\"><a href=\"https://www.evernote.com/shard/s24/nl/2724128/78565e6e-82eb-4f74-80c8-177863a6499c\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Android&#x6700;&#x4F73;Mock&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x65B9;&#x6848;:Junit + Mockito + Powermock</a> <br>Mockito&#x7684;&#x4E3B;&#x8981;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x6A21;&#x62DF;&#x5916;&#x90E8;&#x7C7B;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x8FBE;&#x5230;&#x9694;&#x79BB;&#x5F85;&#x6D4B;&#x4EE3;&#x7801;&#x7684;&#x76EE;&#x7684;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x3002;</li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><img class=\"enMedia\" src=\"/images/Android&#x5355;&#x5143;&#x6D4B;&#x8BD5;/1476833497231.png\" hash=\"24f2966fe93c86710a6f591544903ae1\" align alt longdesc width height border hspace vspace usemap style=\"border: 0; vertical-align: middle; max-width: 100%;\" title lang xml:lang dir></p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #f92672;\">import</span> android.os.classA<br><span style=\"line-height: 1.6;\"><span style=\"line-height: 1.6; color: #66d9ef;\">class</span> <span style=\"line-height: 1.6; color: #a6e22e; font-style: italic;\">B</span> </span>&#123;<br>    <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #a6e22e;\">methodC</span> <span style=\"line-height: 1.6; color: #f8f8f2;\">()</span></span>&#123;<br>        classA a = <span style=\"line-height: 1.6; color: #f92672;\">new</span> classA();<br>        a.methodA();<br>    &#125;<br>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8BF7;&#x95EE;&#x8FD9;&#x91CC;&#x6211;&#x8981;&#x600E;&#x4E48;&#x5728;methodC&#x4E2D;&#x6A21;&#x62DF;&#x5BF9;&#x8C61;A&#x7684;&#x884C;&#x4E3A;&#x3002;&#x8BF8;&#x5982;&#x6B64;&#x7C7B;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x4F1A;&#x5728;&#x4E0B;&#x9762;&#x4E00;&#x7AE0;&#x8FDB;&#x884C;&#x7F57;&#x5217;&#x3002;&#x4E8E;&#x662F;&#x5728;Google&#x4E4B;&#x4E2D;&#x5C31;&#x77E5;&#x9053;&#x4E86;PowerMock&#x3002;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">PowerMock</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">PowerMock&#x662F;Mock&#x6846;&#x67B6;&#x7684;&#x6269;&#x5C55;&#xFF0C;&#x4ED6;&#x540C;&#x65F6;&#x652F;&#x6301;EasyMock&#x548C;Mockito&#x3002;&#x7F51;&#x4E0A;&#x7684;&#x6587;&#x7AE0;&#x4E5F;&#x662F;&#x5343;&#x5343;&#x4E07;&#xFF0C;&#x5177;&#x4F53;&#x6D4B;&#x8BD5;&#x8BED;&#x53E5;&#x7684;&#x5199;&#x6CD5;&#x4E5F;&#x662F;&#x5404;&#x4E0D;&#x76F8;&#x540C;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x9760;&#x8C31;&#x7684;&#x8FD8;&#x662F;<a href=\"https://github.com/jayway/powermock\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x5B98;&#x7F51;</a>&#x3002;PowerMock&#x63D0;&#x4F9B;&#x4E86;&#x4EE5;&#x4E0B;&#x6A21;&#x62DF;&#x7684;&#x9014;&#x5F84;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x6A21;&#x62DF;&#x6784;&#x9020;&#x51FD;&#x6570;</li><li style=\"line-height: 1.6;\">&#x6A21;&#x62DF;&#x9759;&#x6001;&#x7C7B;</li><li style=\"line-height: 1.6;\">&#x7A81;&#x7834;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x63A7;&#x5236;&#xFF0C;&#x64CD;&#x7EB5;&#x79C1;&#x6709;&#x6210;&#x5458;&#xFF0C;&#x79C1;&#x6709;&#x9759;&#x6001;&#x6210;&#x5458;</li><li style=\"line-height: 1.6;\">&#x8C03;&#x7528;&#x79C1;&#x6709;&#x65B9;&#x6CD5;&#x3002;</li></ul><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\">&#x8FDB;&#x9636;</h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5728;&#x5B9E;&#x9645;&#x7684;&#x7F16;&#x7801;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9047;&#x5230;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;Google&#x4E86;&#x5F88;&#x4E45;&#xFF0C;&#x73B0;&#x5C06;&#x6240;&#x6709;&#x95EE;&#x9898;&#x4EE5;&#x53CA;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x7F57;&#x5217;&#x4E00;&#x4E0B;&#xFF1A;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x5BF9;static&#x65B9;&#x6CD5;&#x7684;&#x6A21;&#x62DF;</h3><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #66d9ef;\">Looper</span> mockLooper = mock(<span style=\"line-height: 1.6; color: #66d9ef;\">Looper</span>.<span style=\"line-height: 1.6; color: #f92672;\">class</span>);<br><span style=\"line-height: 1.6; color: #66d9ef;\">PowerMockito</span>.mockStatic(<span style=\"line-height: 1.6; color: #66d9ef;\">Looper</span>.<span style=\"line-height: 1.6; color: #f92672;\">class</span>);<br><span style=\"line-height: 1.6; color: #66d9ef;\">PowerMockito</span>.<span style=\"line-height: 1.6; color: #f92672;\">when</span>(<span style=\"line-height: 1.6; color: #66d9ef;\">Looper</span>.<span style=\"line-height: 1.6; color: #f92672;\">class</span>, <span style=\"line-height: 1.6; color: #e6db74;\">&quot;getMainLooper&quot;</span>).thenReturn(mockLooper);<br></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x5BF9;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x6A21;&#x62DF;</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x89E3;&#x51B3;&#x4E0A;&#x4E00;&#x7AE0;&#x63D0;&#x5230;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6A21;&#x62DF;classA&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x6765;&#x89E3;&#x51B3;&#xFF0C;&#x540C;&#x6837;&#x662F;&#x7528;&#x5230;PowerMockito</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #f92672;\">PowerMockito</span><span style=\"line-height: 1.6; color: #a6e22e;\">.whenNew</span>(<span style=\"line-height: 1.6; color: #f92672;\">Intent</span><span style=\"line-height: 1.6; color: #a6e22e;\">.class</span>)<span style=\"line-height: 1.6; color: #a6e22e;\">.withNoArguments</span>()<span style=\"line-height: 1.6; color: #a6e22e;\">.thenReturn</span>(<span style=\"line-height: 1.6; color: #f92672;\">mockIntent</span>);<br><span style=\"line-height: 1.6; color: #f92672;\">PowerMockito</span><span style=\"line-height: 1.6; color: #a6e22e;\">.whenNew</span>(<span style=\"line-height: 1.6; color: #f92672;\">Intent</span><span style=\"line-height: 1.6; color: #a6e22e;\">.class</span>)<span style=\"line-height: 1.6; color: #a6e22e;\">.withArguments</span>(<span style=\"line-height: 1.6; color: #f92672;\">anyString</span>())<span style=\"line-height: 1.6; color: #a6e22e;\">.thenReturn</span>(<span style=\"line-height: 1.6; color: #f92672;\">mockIntent</span>);<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x9488;&#x5BF9;&#x6709;&#x53C2;&#x6570;&#x548C;&#x6CA1;&#x6709;&#x53C2;&#x6570;&#x7684;&#x4E24;&#x79CD;&#x60C5;&#x51B5;</p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x64CD;&#x4F5C;private&#x6210;&#x5458;</h3><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #75715e;\">// &#x64CD;&#x4F5C;&#x79C1;&#x6709;&#x975E;&#x9759;&#x6001;&#x6210;&#x5458;</span><br>Whitebox.setInternalState(mockObj, <span style=\"line-height: 1.6; color: #e6db74;\">&quot;mPrivateStaticVariable&quot;</span>, <span style=\"line-height: 1.6; color: #f92672;\">value</span>);<br>Whitebox.getInternalState(mockObj, <span style=\"line-height: 1.6; color: #e6db74;\">&quot;mPrivateStaticVariable&quot;</span>);<br><br><span style=\"line-height: 1.6; color: #75715e;\">// &#x64CD;&#x4F5C;&#x79C1;&#x6709;&#x9759;&#x6001;&#x6210;&#x5458;</span><br>Whitebox.setInternalState(xxx.<span style=\"line-height: 1.6; color: #f92672;\">class</span>, <span style=\"line-height: 1.6; color: #e6db74;\">&quot;mPrivateStaticVariable&quot;</span>, <span style=\"line-height: 1.6; color: #f92672;\">value</span>, xxx.<span style=\"line-height: 1.6; color: #f92672;\">class</span>);<br>Whitebox.getInternalState(xxx.<span style=\"line-height: 1.6; color: #f92672;\">class</span>, <span style=\"line-height: 1.6; color: #e6db74;\">&quot;mPrivateStaticVariable&quot;</span>, xxx.<span style=\"line-height: 1.6; color: #f92672;\">class</span>);<br></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x5C40;&#x90E8;&#x6A21;&#x62DF;</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E2A;&#x4F1A;&#x7528;&#x5230;Mockito&#x4E2D;&#x7684;spy&#x5173;&#x952E;&#x5B57;&#x3002;&#x5728;&#x5F88;&#x591A;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x65E0;&#x6CD5;&#x5265;&#x79BB;&#x9700;&#x8981;&#x6A21;&#x62DF;&#x7684;&#x7C7B;&#x548C;&#x5F85;&#x6D4B;&#x8BD5;&#x7684;&#x7C7B;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5B9E;&#x9645;&#x4E2D;&#x7528;&#x5230;&#x7684;&#x4E0B;&#x9762;&#x7684;&#x7C7B;&#xFF1A;</p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">public <span style=\"line-height: 1.6;\"><span style=\"line-height: 1.6; color: #66d9ef;\">class</span> <span style=\"line-height: 1.6; color: #f8f8f2;\">ConverterFacade</span> <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">extends</span></span> <span style=\"line-height: 1.6; color: #a6e22e; font-style: italic;\">Service</span>&#123;</span><br>    <span style=\"line-height: 1.6; color: #f92672;\">private</span> void bindOfficeService()&#123;<br>        <span style=\"line-height: 1.6; color: #f92672;\">if</span> (bindService(intent, connection, <span style=\"line-height: 1.6;\">BIND_AUTO_CREATE</span>)) &#123;<br>            ...<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">ConverterFacade&#x7EE7;&#x627F;&#x81EA;Android&#x81EA;&#x6709;&#x7684;&#x7C7B;Service&#xFF0C;Service&#x7EE7;&#x627F;&#x81EA;Context&#xFF0C;bindService&#x662F;Context&#x63A5;&#x53E3;&#x7684;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x5BF9;&#x4E4B;&#x8FDB;&#x884C;mock&#xFF0C;&#x6D4B;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x62A5;&#x9519;&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x8981;&#x6D4B;&#x8BD5;ConverterFacade&#xFF0C;&#x53C8;&#x4E0D;&#x80FD;&#x5C06;&#x4E4B;mock&#x6389;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x80FD;&#x9000;&#x800C;&#x6C42;&#x5176;&#x6B21;&#xFF0C;&#x91C7;&#x7528;partial mock&#x3002;&#x63D2;&#x5165;&#x5B98;&#x7F51;&#x7684;&#x4ECB;&#x7ECD;&#xFF0C;<a href=\"http://site.mockito.org/mockito/docs/current/org/mockito/Mockito.html#spy%28T%29\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mockito.spy</a>&#x3002;&#x5B98;&#x65B9;&#x5E76;&#x4E0D;&#x63A8;&#x8350;&#x4F7F;&#x7528;spy&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x4F1A;&#x8BA9;&#x6A21;&#x62DF;&#x7684;code&#x548C;&#x771F;&#x5B9E;&#x7684;code&#x6DF7;&#x5728;&#x4E00;&#x8D77;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">Real spies should be used <strong style=\"font-weight: bold; line-height: 1.6;\">carefully and occasionally</strong>. <br>&#x4F8B;&#x5B50;&#xFF1A;</p></blockquote><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">   List list = <span style=\"line-height: 1.6; color: #f92672;\">new</span> LinkedList();<br>   List spy = spy(list);<br><br>   <span style=\"line-height: 1.6; color: #75715e;\">//optionally, you can stub out some methods:</span><br>   when(spy.<span style=\"line-height: 1.6; color: #e6db74;\">size</span>()).thenReturn(<span style=\"line-height: 1.6; color: #ae81ff;\">100</span>);<br><br>   <span style=\"line-height: 1.6; color: #75715e;\">//using the spy calls real methods</span><br>   spy.<span style=\"line-height: 1.6; color: #e6db74;\">add</span>(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;one&quot;</span>);<br>   spy.<span style=\"line-height: 1.6; color: #e6db74;\">add</span>(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;two&quot;</span>);<br><br>   <span style=\"line-height: 1.6; color: #75715e;\">//prints &quot;one&quot; - the first element of a list</span><br>   System.out.<span style=\"line-height: 1.6; color: #e6db74;\">println</span>(spy.<span style=\"line-height: 1.6; color: #e6db74;\">get</span>(<span style=\"line-height: 1.6; color: #ae81ff;\">0</span>));<br><br>   <span style=\"line-height: 1.6; color: #75715e;\">//size() method was stubbed - 100 is printed</span><br>   System.out.<span style=\"line-height: 1.6; color: #e6db74;\">println</span>(spy.<span style=\"line-height: 1.6; color: #e6db74;\">size</span>());<br><br>   <span style=\"line-height: 1.6; color: #75715e;\">//optionally, you can verify</span><br>   verify(spy).<span style=\"line-height: 1.6; color: #e6db74;\">add</span>(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;one&quot;</span>);<br>   verify(spy).<span style=\"line-height: 1.6; color: #e6db74;\">add</span>(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;two&quot;</span>);<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">doReturn().when()</code>&#x800C;&#x4E0D;&#x80FD;&#x7528;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">when().doReturn()</code></p><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"> //<span style=\"line-height: 1.6;\">Impossible</span>: real <span style=\"line-height: 1.6; color: #f92672;\">method</span> <span style=\"line-height: 1.6; color: #f92672;\">is</span> called so spy.get(<span style=\"line-height: 1.6; color: #ae81ff;\">0</span>) throws <span style=\"line-height: 1.6;\">IndexOutOfBoundsException</span> (the list <span style=\"line-height: 1.6; color: #f92672;\">is</span> yet empty)<br><span style=\"line-height: 1.6; color: #f92672;\">when</span>(spy.get(<span style=\"line-height: 1.6; color: #ae81ff;\">0</span>)).thenReturn(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;foo&quot;</span>);<br><br>//<span style=\"line-height: 1.6;\">You</span> have to use doReturn() <span style=\"line-height: 1.6; color: #f92672;\">for</span> stubbing<br>doReturn(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;foo&quot;</span>).<span style=\"line-height: 1.6; color: #f92672;\">when</span>(spy).get(<span style=\"line-height: 1.6; color: #ae81ff;\">0</span>);<br></code></pre><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">java.lang.NoClassDefFoundError</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x9047;&#x5230;&#x4E86;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x539F;&#x56E0;&#x662F;&#x6CA1;&#x6709;&#x5BFC;&#x5165;moffice-service-base&#x5305;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#x5F04;&#x597D;&#x5C31;&#x884C;&#x4E86;</p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><img class=\"enMedia\" src=\"/images/Android&#x5355;&#x5143;&#x6D4B;&#x8BD5;/1476841513603.png\" hash=\"3e0e82cf948615d59ce5b84bb1d626be\" align alt longdesc width height border hspace vspace usemap style=\"border: 0; vertical-align: middle; max-width: 100%;\" title lang xml:lang dir></p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">java.lang.ClassNotFoundException</strong> <br>This exception indicates that the class was not found on the classpath. This indicates that we were trying to load the class definition, and the class did not exist on the classpath. <br><strong style=\"font-weight: bold; line-height: 1.6;\">java.lang.NoClassDefFoundError</strong> <br>This exception indicates that the JVM looked in its internal class definition data structure for the definition of a class and did not find it. This is different than saying that it could not be loaded from the classpath. Usually this indicates that we previously attempted to load a class from the classpath, but it failed for some reason - now we&#x2019;re trying to use the class again (and thus need to load it, since it failed last time), but we&#x2019;re not even going to try to load it, because we failed loading it earlier (and reasonably suspect that we would fail again). The earlier failure could be a ClassNotFoundException or an ExceptionInInitializerError (indicating a failure in the static initialization block) or any number of other problems. The point is, a NoClassDefFoundError is not necessarily a classpath problem.</p></blockquote><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">mockStatic&#x5BFC;&#x81F4;&#x5185;&#x90E8;&#x7C7B;&#x65E0;&#x6CD5;&#x6709;&#x6548;&#x5F15;&#x7528;&#x5916;&#x90E8;&#x7C7B;&#x7684;&#x6210;&#x5458;</h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x662F;&#xFF0C;&#x4E0D;&#x8981;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">mockStatic(ConverterFacade.class);</code>&#x8981;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">mockStatic(ConverterFacade.class, CALLS_REAL_METHODS);</code></p><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\">&#x6355;&#x83B7;&#x53C2;&#x6570;</h3><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">Message <span style=\"line-height: 1.6; color: #f92672;\">m</span> = mock(Message.<span style=\"line-height: 1.6; color: #f92672;\">class</span>);<br><span style=\"line-height: 1.6; color: #f92672;\">m</span>.what = 1;<br>Handler mHandler = mock(Handler.<span style=\"line-height: 1.6; color: #f92672;\">class</span>);<br>mHandler.sendMessage(<span style=\"line-height: 1.6; color: #f92672;\">m</span>);<br><br><span style=\"line-height: 1.6; color: #f92672;\">m</span>.what = 2;<br>mHandler.sendMessage(<span style=\"line-height: 1.6; color: #f92672;\">m</span>);<br><br>ArgumentCaptor&lt;Message&gt; argumentCaptor2 = ArgumentCaptor.forClass(Message.<span style=\"line-height: 1.6; color: #f92672;\">class</span>);<br>verify(mHandler, times(2)).sendMessage(argumentCaptor2.<span style=\"line-height: 1.6; color: #f92672;\">capture</span>());<br><span style=\"line-height: 1.6; color: #f92672;\">List</span>&lt;Message&gt; msgList = argumentCaptor2.getAllValues();<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">ArgumentCaptor&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x6355;&#x83B7;&#x53C2;&#x6570;&#x8C03;&#x7528;&#x60C5;&#x51B5;&#x3002;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">argumentCaptor.getValue()</code>&#x53EF;&#x4EE5;&#x6355;&#x83B7;&#x6700;&#x540E;&#x4E00;&#x6B21;&#x8C03;&#x7528;&#x7684;&#x53C2;&#x6570;&#xFF0C;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">argumentCaptor.getAllValues()</code>&#x53EF;&#x4EE5;&#x6355;&#x83B7;&#x591A;&#x6B21;&#x8C03;&#x7528;&#x6216;&#x8005;&#x4E00;&#x6B21;&#x8C03;&#x7528;&#x4F20;&#x9012;&#x591A;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x60C5;&#x51B5;&#x3002; <br>&#x8FD9;&#x5176;&#x4E2D;&#x7275;&#x6D89;&#x5230;Java&#x5BF9;&#x8C61;&#x4F20;&#x9012;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x4E0A;&#x7A0B;&#x5E8F;&#x4EE3;&#x7801;&#xFF0C;&#x867D;&#x7136;&#x6700;&#x7EC8;&#x5F97;&#x5230;&#x7684;List&#x7684;size&#x662F;2&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E24;&#x4E2A;&#x8868;&#x9879;&#x7684;what&#x503C;&#x90FD;&#x6307;&#x5411;2&#xFF0C;&#x7528;Android Studio&#x67E5;&#x770B;&#x5BF9;&#x8C61;&#x5730;&#x5740;&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x4FE9;&#x90FD;&#x6307;&#x5411;&#x540C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;&#x5176;&#x503C;&#x76F8;&#x540C;&#x4E5F;&#x5C31;&#x4E0D;&#x96BE;&#x7406;&#x89E3;&#x4E86;&#x3002;&#x5982;&#x679C;&#x60F3;&#x8981;&#x6355;&#x83B7;&#x5230;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x503C;&#xFF0C;&#x5C31;&#x8981;new&#x4E24;&#x6B21;&#x3002;</p></div><center style=\"display:none\">%23Android%u5355%u5143%u6D4B%u8BD5%0A@%28%u5B66%u4E60%u7B14%u8BB0%29%5BAndroid%2C%20unittest%2C%20mockito%2C%20powermock%5D%0A%u4ECA%u65E5%u5728%u505A%u5FAE%u4FE1IoT%u6253%u5370%u673A%u7684%u9879%u76EE%uFF0C%u5176%u4E2D%u6D89%u53CA%u5230%u7528Android%u7A0B%u5E8F%u8BBF%u95EEWPS%u670D%u52A1%u6765%u5B9E%u73B0%u5C06word%u6587%u6863%u53E6%u5B58%u4E3APDF%u7684%u529F%u80FD%u3002%u4E8E%u662F%uFF0C%u79C9%u7740TDD%u7684%u7CBE%u795E%uFF0C%u5F00%u59CB%u5B66%u4E60%u5982%u4F55%u5728Android%u4E2D%u505A%u5355%u5143%u6D4B%u8BD5%u3002%0A%23%23%u5165%u95E8%0A%23%23%23JUnit%0A%u9996%u5148%u770B%u5230%u7684%u662FAndroid%u7684%u5B98%u7F51%u6587%u6863%5BGetting%20Started%20with%20Testing%5D%28https%3A//developer.android.com/training/testing/start/index.html%29%2C%20%5BBuilding%20Local%20Unit%20Tests%5D%28https%3A//developer.android.com/training/testing/unit-testing/local-unit-tests.html%29%u3002%u6709%u4E24%u79CD%u7C7B%u578B%u7684%u6D4B%u8BD5%uFF0C%u4E00%u79CD%u662F%u8DD1%u5728%u4E3B%u673A%u4E0A%u7684%uFF0C%u53EBLocal%20Unit%20Test%uFF0C%u53E6%u4E00%u79CD%u8DD1%u5728%u76EE%u6807%u673A%u4E0A%uFF0C%u53EBInstrumented%20Unit%20Test%u3002%0ALocal%20Unit%20Test%u57FA%u4E8EJUnit%uFF0C%u4E0A%u9762%u7684%u5173%u4E8ELocal%20Unit%20Test%u7684%u94FE%u63A5%u5DF2%u7ECF%u6709%u4E86%u5982%u4F55%u5728Android%20Studio%u4E2D%u4F7F%u80FDJUnit%u7684%u8303%u4F8B%u4E86%u3002%u914D%u7F6E%u597DDependencies%u5C31%u53EF%u4EE5%u4E86%u3002Android%20Studio%u4F1A%u53BBmaven%u5E93%u4E2D%u6293%u53D6JUnit%u7684jar%u5305%u5E76%u5BFC%u5165%u5230%u9879%u76EE%u4E2D%uFF0C%u4E4B%u540E%u5C31%u53EF%u4EE5%u4F7F%u7528%u4E86%u3002%0A%u9047%u5230%u9519%u8BEF%60Error%3A%2823%2C%2017%29%22Failed%20to%20resolve%3A%20junit%3Ajunit%3A4.12%60%uFF0C%u5728build.gradle%u4E0B%u9762%u52A0%0A%60%60%60%0Arepositories%20%7B%0A%20%20%20%20%20%20%20%20maven%20%7B%20url%20%27http%3A//repo1.maven.org/maven2%27%20%7D%0A%20%20%20%20%20%20%20%20jcenter%20%7B%20url%20%22http%3A//jcenter.bintray.com/%22%20%7D%0A%7D%0A%60%60%60%0A%u6216%u8005%u81EA%u884C%u53BB%u4E0B%u8F7Djunit-4.12.jar%uFF0C%u518D%u653E%u5230libs%u76EE%u5F55%u5E95%u4E0B%u5C31%u53EF%u4EE5%u4E86%u3002%0A%0A%23%23%23Mockito%0A%u5728C++%u4E2D%u505AUnit%20Test%u7684%u65F6%u5019%uFF0C%u6211%u4EEC%u5F80%u5F80%u9700%u8981%u81EA%u5DF1%u6784%u5EFAstub%uFF0C%u6765%u9694%u79BB%u9700%u8981%u6D4B%u8BD5%u7684code%u3002%u5728Java%u4E2D%uFF0C%u6211%u4EEC%u6709%u73B0%u6210%u7684%u6846%u67B6%u53EF%u4EE5%u7528%uFF0C%u8FD9%u5C31%u662F%5BMockito%5D%28https%3A//github.com/mockito/mockito%29%u3002%u7F51%u4E0A%u5173%u4E8EMockito+Android%u5355%u5143%u6D4B%u8BD5%u7684%u6587%u7AE0%u4E00%u641C%u4E00%u5927%u645E%u3002%u6211%u4E5F%u7B80%u5355%u7684%u6458%u5F55%u4E86%u51E0%u4E2A%u3002%0A-%20%5BAndroid%u6D4B%u8BD5%u4E8C%uFF1AMockito%u4E0E%u5355%u5143%u6D4B%u8BD5%5D%28https%3A//www.evernote.com/shard/s24/nl/2724128/360fa827-de1f-46e7-b815-465c074a5b9e%29%0A-%20%5BAndroid%20%u5355%u5143%u6D4B%u8BD5%u4E4BJUnit%u548CMockito%5D%28https%3A//www.evernote.com/shard/s24/nl/2724128/beaaf776-621e-4fdb-9dca-e6eedc6a1029%29%0A-%20%5BAndroid%u6700%u4F73Mock%u5355%u5143%u6D4B%u8BD5%u65B9%u6848%3AJunit%20+%20Mockito%20+%20Powermock%5D%28https%3A//www.evernote.com/shard/s24/nl/2724128/78565e6e-82eb-4f74-80c8-177863a6499c%29%0AMockito%u7684%u4E3B%u8981%u4F5C%u7528%u5C31%u662F%u6A21%u62DF%u5916%u90E8%u7C7B%u7684%u884C%u4E3A%uFF0C%u8FBE%u5230%u9694%u79BB%u5F85%u6D4B%u4EE3%u7801%u7684%u76EE%u7684%u3002%u5982%u4E0B%u56FE%u3002%0A%21%5BAlt%20text%5D%28./1476833497231.png%29%0A%u5728Android%u7684%u6D4B%u8BD5%u4E2D%uFF0CMockito%u7684%u4E3B%u8981%u4F5C%u7528%u5C31%u662F%u6A21%u62DF%u6240%u6709Android%u7684%u7C7B%u3002%60ClassA%20mockObj%20%3D%20mock%28ClassA%29%60%u5C31%u4F1A%u751F%u6210%u4E00%u4E2Amock%u7684%u5BF9%u8C61%u3002%u7136%u540E%u6211%u4EEC%u5C31%u53EF%u4EE5%u901A%u8FC7Mockito%u63D0%u4F9B%u7684%u5404%u79CD%u624B%u6BB5%u6765%u5B9A%u5236%u8FD9%u4E2A%u5BF9%u8C61%u7684%u5404%u79CD%u884C%u4E3A%u3002%u4F46%u8FD9%u6709%u5F88%u5927%u7684%u5C40%u9650%u6027%u3002%u770B%u4E0B%u9762%u7684%u4EE3%u7801%0A%60%60%60%0Aimport%20android.os.classA%0Aclass%20B%20%7B%0A%09public%20void%20methodC%20%28%29%7B%0A%09%09classA%20a%20%3D%20new%20classA%28%29%3B%0A%09%09a.methodA%28%29%3B%0A%09%7D%0A%7D%0A%60%60%60%0A%u8BF7%u95EE%u8FD9%u91CC%u6211%u8981%u600E%u4E48%u5728methodC%u4E2D%u6A21%u62DF%u5BF9%u8C61A%u7684%u884C%u4E3A%u3002%u8BF8%u5982%u6B64%u7C7B%u5F88%u591A%u95EE%u9898%uFF0C%u4F1A%u5728%u4E0B%u9762%u4E00%u7AE0%u8FDB%u884C%u7F57%u5217%u3002%u4E8E%u662F%u5728Google%u4E4B%u4E2D%u5C31%u77E5%u9053%u4E86PowerMock%u3002%0A%0A%23%23%23PowerMock%0APowerMock%u662FMock%u6846%u67B6%u7684%u6269%u5C55%uFF0C%u4ED6%u540C%u65F6%u652F%u6301EasyMock%u548CMockito%u3002%u7F51%u4E0A%u7684%u6587%u7AE0%u4E5F%u662F%u5343%u5343%u4E07%uFF0C%u5177%u4F53%u6D4B%u8BD5%u8BED%u53E5%u7684%u5199%u6CD5%u4E5F%u662F%u5404%u4E0D%u76F8%u540C%uFF0C%u6240%u4EE5%u6700%u9760%u8C31%u7684%u8FD8%u662F%5B%u5B98%u7F51%5D%28https%3A//github.com/jayway/powermock%29%u3002PowerMock%u63D0%u4F9B%u4E86%u4EE5%u4E0B%u6A21%u62DF%u7684%u9014%u5F84%uFF1A%0A-%20%u6A21%u62DF%u6784%u9020%u51FD%u6570%0A-%20%u6A21%u62DF%u9759%u6001%u7C7B%0A-%20%u7A81%u7834%u8BBF%u95EE%u6743%u9650%u63A7%u5236%uFF0C%u64CD%u7EB5%u79C1%u6709%u6210%u5458%uFF0C%u79C1%u6709%u9759%u6001%u6210%u5458%0A-%20%u8C03%u7528%u79C1%u6709%u65B9%u6CD5%u3002%0A%0A%23%23%u8FDB%u9636%0A%u5728%u5B9E%u9645%u7684%u7F16%u7801%u8FC7%u7A0B%u4E2D%uFF0C%u9047%u5230%u5F88%u591A%u95EE%u9898%uFF0CGoogle%u4E86%u5F88%u4E45%uFF0C%u73B0%u5C06%u6240%u6709%u95EE%u9898%u4EE5%u53CA%u89E3%u51B3%u65B9%u6848%u7F57%u5217%u4E00%u4E0B%uFF1A%0A%23%23%23%20%u5BF9static%u65B9%u6CD5%u7684%u6A21%u62DF%0A%60%60%60%0ALooper%20mockLooper%20%3D%20mock%28Looper.class%29%3B%0APowerMockito.mockStatic%28Looper.class%29%3B%0APowerMockito.when%28Looper.class%2C%20%22getMainLooper%22%29.thenReturn%28mockLooper%29%3B%0A%60%60%60%0A%0A%23%23%23%u5BF9%u6784%u9020%u51FD%u6570%u7684%u6A21%u62DF%0A%u89E3%u51B3%u4E0A%u4E00%u7AE0%u63D0%u5230%u7684%u95EE%u9898%uFF0C%u53EF%u4EE5%u7528%u6A21%u62DFclassA%u7684%u6784%u9020%u51FD%u6570%u6765%u89E3%u51B3%uFF0C%u540C%u6837%u662F%u7528%u5230PowerMockito%0A%60%60%60%0APowerMockito.whenNew%28Intent.class%29.withNoArguments%28%29.thenReturn%28mockIntent%29%3B%0APowerMockito.whenNew%28Intent.class%29.withArguments%28anyString%28%29%29.thenReturn%28mockIntent%29%3B%0A%60%60%60%0A%u9488%u5BF9%u6709%u53C2%u6570%u548C%u6CA1%u6709%u53C2%u6570%u7684%u4E24%u79CD%u60C5%u51B5%0A%0A%23%23%23%u64CD%u4F5Cprivate%u6210%u5458%0A%60%60%60%0A//%20%u64CD%u4F5C%u79C1%u6709%u975E%u9759%u6001%u6210%u5458%0AWhitebox.setInternalState%28mockObj%2C%20%22mPrivateStaticVariable%22%2C%20value%29%3B%0AWhitebox.getInternalState%28mockObj%2C%20%22mPrivateStaticVariable%22%29%3B%0A%0A//%20%u64CD%u4F5C%u79C1%u6709%u9759%u6001%u6210%u5458%0AWhitebox.setInternalState%28xxx.class%2C%20%22mPrivateStaticVariable%22%2C%20value%2C%20xxx.class%29%3B%0AWhitebox.getInternalState%28xxx.class%2C%20%22mPrivateStaticVariable%22%2C%20xxx.class%29%3B%0A%60%60%60%0A%0A%23%23%23%u5C40%u90E8%u6A21%u62DF%0A%u8FD9%u4E2A%u4F1A%u7528%u5230Mockito%u4E2D%u7684spy%u5173%u952E%u5B57%u3002%u5728%u5F88%u591A%u60C5%u51B5%u4E0B%uFF0C%u6211%u4EEC%u65E0%u6CD5%u5265%u79BB%u9700%u8981%u6A21%u62DF%u7684%u7C7B%u548C%u5F85%u6D4B%u8BD5%u7684%u7C7B%u3002%u4F8B%u5982%uFF0C%u5B9E%u9645%u4E2D%u7528%u5230%u7684%u4E0B%u9762%u7684%u7C7B%uFF1A%0A%60%60%60%0Apublic%20class%20ConverterFacade%20extends%20Service%7B%0A%09private%20void%20bindOfficeService%28%29%7B%0A%09%09if%20%28bindService%28intent%2C%20connection%2C%20BIND_AUTO_CREATE%29%29%20%7B%0A%09%09%09...%0A%09%09%7D%0A%09%7D%0A%7D%0A%60%60%60%0AConverterFacade%u7EE7%u627F%u81EAAndroid%u81EA%u6709%u7684%u7C7BService%uFF0CService%u7EE7%u627F%u81EAContext%uFF0CbindService%u662FContext%u63A5%u53E3%u7684%u4E00%u4E2A%u65B9%u6CD5%u3002%u5982%u679C%u4E0D%u5BF9%u4E4B%u8FDB%u884Cmock%uFF0C%u6D4B%u8BD5%u7684%u65F6%u5019%u4F1A%u62A5%u9519%u3002%u56E0%u4E3A%u6211%u4EEC%u8981%u6D4B%u8BD5ConverterFacade%uFF0C%u53C8%u4E0D%u80FD%u5C06%u4E4Bmock%u6389%uFF0C%u6240%u4EE5%u53EA%u80FD%u9000%u800C%u6C42%u5176%u6B21%uFF0C%u91C7%u7528partial%20mock%u3002%u63D2%u5165%u5B98%u7F51%u7684%u4ECB%u7ECD%uFF0C%5BMockito.spy%5D%28http%3A//site.mockito.org/mockito/docs/current/org/mockito/Mockito.html%23spy%28T%29%29%u3002%u5B98%u65B9%u5E76%u4E0D%u63A8%u8350%u4F7F%u7528spy%uFF0C%u56E0%u4E3A%u8FD9%u6837%u4F1A%u8BA9%u6A21%u62DF%u7684code%u548C%u771F%u5B9E%u7684code%u6DF7%u5728%u4E00%u8D77%u3002%0A%3E%20Real%20spies%20should%20be%20used%20**carefully%20and%20occasionally**.%0A%u4F8B%u5B50%uFF1A%0A%60%60%60%0A%20%20%20List%20list%20%3D%20new%20LinkedList%28%29%3B%0A%20%20%20List%20spy%20%3D%20spy%28list%29%3B%0A%0A%20%20%20//optionally%2C%20you%20can%20stub%20out%20some%20methods%3A%0A%20%20%20when%28spy.size%28%29%29.thenReturn%28100%29%3B%0A%0A%20%20%20//using%20the%20spy%20calls%20real%20methods%0A%20%20%20spy.add%28%22one%22%29%3B%0A%20%20%20spy.add%28%22two%22%29%3B%0A%0A%20%20%20//prints%20%22one%22%20-%20the%20first%20element%20of%20a%20list%0A%20%20%20System.out.println%28spy.get%280%29%29%3B%0A%0A%20%20%20//size%28%29%20method%20was%20stubbed%20-%20100%20is%20printed%0A%20%20%20System.out.println%28spy.size%28%29%29%3B%0A%0A%20%20%20//optionally%2C%20you%20can%20verify%0A%20%20%20verify%28spy%29.add%28%22one%22%29%3B%0A%20%20%20verify%28spy%29.add%28%22two%22%29%3B%0A%60%60%60%0A%u4E3A%u4EC0%u4E48%u8981%u7528%60doReturn%28%29.when%28%29%60%u800C%u4E0D%u80FD%u7528%60when%28%29.doReturn%28%29%60%0A%60%60%60%0A%20//Impossible%3A%20real%20method%20is%20called%20so%20spy.get%280%29%20throws%20IndexOutOfBoundsException%20%28the%20list%20is%20yet%20empty%29%0Awhen%28spy.get%280%29%29.thenReturn%28%22foo%22%29%3B%0A%0A//You%20have%20to%20use%20doReturn%28%29%20for%20stubbing%0AdoReturn%28%22foo%22%29.when%28spy%29.get%280%29%3B%0A%60%60%60%0A%0A%23%23%23java.lang.NoClassDefFoundError%0A%u9047%u5230%u4E86%u8FD9%u4E2A%u95EE%u9898%uFF0C%u539F%u56E0%u662F%u6CA1%u6709%u5BFC%u5165moffice-service-base%u5305%u3002%u5728%u8FD9%u91CC%u5F04%u597D%u5C31%u884C%u4E86%0A%21%5BAlt%20text%5D%28./1476841513603.png%29%0A%u4E0D%u8FC7%u521A%u770B%u5230%u8FD9%u4E2Aexception%u7684%u65F6%u5019%uFF0C%u4E5F%u633A%u552C%u4EBA%u7684%u3002%u5728StackOverflow%u4E0A%u641C%u5230%u4E86%u8FD9%u4E2A%u5E16%u5B50%uFF0C%u4E5F%u7B97%u662F%u5BF9%u8FD9%u4E2A%u9519%u8BEF%u7684%u4E00%u4E2A%u5C0F%u5C0F%u7684%u5165%u95E8%uFF1A%0A%3E%20**java.lang.ClassNotFoundException**%0A%3E%20This%20exception%20indicates%20that%20the%20class%20was%20not%20found%20on%20the%20classpath.%20This%20indicates%20that%20we%20were%20trying%20to%20load%20the%20class%20definition%2C%20and%20the%20class%20did%20not%20exist%20on%20the%20classpath.%0A%3E**java.lang.NoClassDefFoundError**%0A%3EThis%20exception%20indicates%20that%20the%20JVM%20looked%20in%20its%20internal%20class%20definition%20data%20structure%20for%20the%20definition%20of%20a%20class%20and%20did%20not%20find%20it.%20This%20is%20different%20than%20saying%20that%20it%20could%20not%20be%20loaded%20from%20the%20classpath.%20Usually%20this%20indicates%20that%20we%20previously%20attempted%20to%20load%20a%20class%20from%20the%20classpath%2C%20but%20it%20failed%20for%20some%20reason%20-%20now%20we%27re%20trying%20to%20use%20the%20class%20again%20%28and%20thus%20need%20to%20load%20it%2C%20since%20it%20failed%20last%20time%29%2C%20but%20we%27re%20not%20even%20going%20to%20try%20to%20load%20it%2C%20because%20we%20failed%20loading%20it%20earlier%20%28and%20reasonably%20suspect%20that%20we%20would%20fail%20again%29.%20The%20earlier%20failure%20could%20be%20a%20ClassNotFoundException%20or%20an%20ExceptionInInitializerError%20%28indicating%20a%20failure%20in%20the%20static%20initialization%20block%29%20or%20any%20number%20of%20other%20problems.%20The%20point%20is%2C%20a%20NoClassDefFoundError%20is%20not%20necessarily%20a%20classpath%20problem.%0A%0A%23%23%23mockStatic%u5BFC%u81F4%u5185%u90E8%u7C7B%u65E0%u6CD5%u6709%u6548%u5F15%u7528%u5916%u90E8%u7C7B%u7684%u6210%u5458%0A%u89E3%u51B3%u65B9%u6CD5%u662F%uFF0C%u4E0D%u8981%60mockStatic%28ConverterFacade.class%29%3B%60%u8981%60mockStatic%28ConverterFacade.class%2C%20CALLS_REAL_METHODS%29%3B%60%0A%0A%23%23%23%u6355%u83B7%u53C2%u6570%0A%60%60%60%0AMessage%20m%20%3D%20mock%28Message.class%29%3B%0Am.what%20%3D%201%3B%0AHandler%20mHandler%20%3D%20mock%28Handler.class%29%3B%0AmHandler.sendMessage%28m%29%3B%0A%0Am.what%20%3D%202%3B%0AmHandler.sendMessage%28m%29%3B%0A%0AArgumentCaptor%3CMessage%3E%20argumentCaptor2%20%3D%20ArgumentCaptor.forClass%28Message.class%29%3B%0Averify%28mHandler%2C%20times%282%29%29.sendMessage%28argumentCaptor2.capture%28%29%29%3B%0AList%3CMessage%3E%20msgList%20%3D%20argumentCaptor2.getAllValues%28%29%3B%0A%60%60%60%0AArgumentCaptor%u53EF%u4EE5%u5E2E%u52A9%u6355%u83B7%u53C2%u6570%u8C03%u7528%u60C5%u51B5%u3002%60argumentCaptor.getValue%28%29%60%u53EF%u4EE5%u6355%u83B7%u6700%u540E%u4E00%u6B21%u8C03%u7528%u7684%u53C2%u6570%uFF0C%60argumentCaptor.getAllValues%28%29%60%u53EF%u4EE5%u6355%u83B7%u591A%u6B21%u8C03%u7528%u6216%u8005%u4E00%u6B21%u8C03%u7528%u4F20%u9012%u591A%u4E2A%u53C2%u6570%u7684%u60C5%u51B5%u3002%0A%u8FD9%u5176%u4E2D%u7275%u6D89%u5230Java%u5BF9%u8C61%u4F20%u9012%u7684%u65B9%u6CD5%u3002%u5982%u4E0A%u7A0B%u5E8F%u4EE3%u7801%uFF0C%u867D%u7136%u6700%u7EC8%u5F97%u5230%u7684List%u7684size%u662F2%uFF0C%u4F46%u662F%u8FD9%u4E24%u4E2A%u8868%u9879%u7684what%u503C%u90FD%u6307%u54112%uFF0C%u7528Android%20Studio%u67E5%u770B%u5BF9%u8C61%u5730%u5740%uFF0C%u53D1%u73B0%u8FD9%u4FE9%u90FD%u6307%u5411%u540C%u4E00%u4E2A%u5BF9%u8C61%uFF0C%u6240%u4EE5%u5176%u503C%u76F8%u540C%u4E5F%u5C31%u4E0D%u96BE%u7406%u89E3%u4E86%u3002%u5982%u679C%u60F3%u8981%u6355%u83B7%u5230%u4E24%u4E2A%u4E0D%u540C%u7684%u503C%uFF0C%u5C31%u8981new%u4E24%u6B21%u3002</center><br></div>",
            "tags": [
                "Android",
                "unittest",
                "mockito",
                "powermock"
            ]
        },
        {
            "id": "https://zhougy0717.github.io/2016/02/29/UnitTest++%E7%AE%80%E4%BB%8B/",
            "url": "https://zhougy0717.github.io/2016/02/29/UnitTest++%E7%AE%80%E4%BB%8B/",
            "title": "UnitTest++简介",
            "date_published": "2016-02-29T00:03:53.000Z",
            "content_html": "<!DOCTYPE en-note SYSTEM 'http://xml.evernote.com/pub/enml2.dtd'><div class=\"enNote\" style=\"color: #2c3f51; line-height: 1.6;\" title lang=\"v2\" xml:lang dir><del style=\"position:relative;display:block;z-index:10;\"><a style=\"position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;\" href=\"http://maxiang.info/#/?provider=evernote_int&amp;guid=ec67fbbb-ad6a-4ffd-9695-7b675b07efde&amp;notebook=%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0\">Edit</a></del><div style=\"color: #2c3f51; line-height: 1.6;\"><div style=\"line-height: 1.6;\"><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><div style=\"line-height: 1.6;\"><div style=\"line-height: 1.6;\"><div style=\"line-height: 1.6;\"><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#unittest&#x7B80;&#x4ECB;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">UnitTest++&#x7B80;&#x4ECB;</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#cmake\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">CMake</a></li><li style=\"line-height: 1.6;\"><a href=\"#implement-test-cases\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Implement Test Cases</a></li><li style=\"line-height: 1.6;\"><a href=\"#linux-test-harness\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Linux Test Harness</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#mono-graphic-panel-driver\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mono Graphic Panel Driver</a></li><li style=\"line-height: 1.6;\"><a href=\"#&#x6D4B;&#x8BD5;&#x67B6;&#x6784;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x6D4B;&#x8BD5;&#x67B6;&#x6784;</a></li></ul></li></ul></li></ul></div></div></div></p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6700;&#x8FD1;&#x62DC;&#x8BFB;&#x4E86;Kent Beck&#x5927;&#x795E;&#x7684;&#x300A;Test-Driven Development By Example&#x300B;&#xFF0C;&#x6709;&#x4E86;&#x8FD9;&#x7BC7;<a href=\"https://www.evernote.com/shard/s24/nl/697376807/209575d9-d1bc-4aa6-8a79-3d50bfe3d377/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x8BFB;&#x4E66;&#x7B14;&#x8BB0;</a>&#x3002;&#x8FD9;&#x672C;&#x4E66;&#x89E3;&#x7B54;&#x4E86;&#x6211;&#x7684;&#x5F88;&#x591A;&#x5F00;&#x53D1;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x56F0;&#x60D1;&#xFF0C;&#x6240;&#x4EE5;&#x51B3;&#x5B9A;&#x4EE5;&#x540E;&#x8D70;&#x4E0A;TDD&#x7684;&#x9053;&#x8DEF;&#x3002;&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x5B66;&#x4E60;UnixTest++&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x56E0;&#x4E3A;&#x60E0;&#x666E;&#x6253;&#x5370;&#x673A;&#x7684;Phoenix FW&#x91CC;&#x9762;&#x66FE;&#x7ECF;&#x6709;&#x5148;&#x8F88;&#x505A;&#x8FC7;&#x7C7B;&#x4F3C;unit test&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x79F0;&#x4E4B;&#x4E3A;Linux Test Harness&#x3002;Harnes&#x662F;&#x9A6C;&#x978D;&#x7684;&#x610F;&#x601D;&#xFF0C;&#x8FD9;&#x4E2A;&#x540D;&#x5B57;&#x5E94;&#x8BE5;&#x662F;&#x60E0;&#x666E;&#x4EBA;&#x81EA;&#x5DF1;&#x53D6;&#x7684;&#x3002;&#x8FD9;&#x4E2A;Linux Test Harness&#x5C31;&#x662F;&#x57FA;&#x4E8E;<a href=\"https://github.com/unittest-cpp/unittest-cpp\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">UnixTest++</a>&#x7684;&#x3002;&#x76EE;&#x524D;&#x6211;&#x7528;&#x7684;&#x662F;&#x6700;&#x65B0;&#x7248;&#xFF0C;v1.5.1&#x3002;&#x76EE;&#x5F55;&#x6811;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; <br>&#x251C;&#x2500;&#x2500; AUTHORS <br>&#x251C;&#x2500;&#x2500; <font color=\"IndianRed\" style=\"line-height: 1.6;\">CMakeLists.txt</font> <br>&#x251C;&#x2500;&#x2500; ChangeLog <br>&#x251C;&#x2500;&#x2500; INSTALL <br>&#x251C;&#x2500;&#x2500; LICENSE <br>&#x251C;&#x2500;&#x2500; Makefile.am <br>&#x251C;&#x2500;&#x2500; README.md <br>&#x251C;&#x2500;&#x2500; <font color=\"IndianRed\" style=\"line-height: 1.6;\">UnitTest++</font> <br>&#x251C;&#x2500;&#x2500; UnitTest++.pc.in <br>&#x251C;&#x2500;&#x2500; appveyor.yml <br>&#x251C;&#x2500;&#x2500; builds <br>&#x251C;&#x2500;&#x2500; configure.ac <br>&#x251C;&#x2500;&#x2500; docs <br>&#x251C;&#x2500;&#x2500; m4 <br>&#x2502;   &#x251C;&#x2500;&#x2500; ax_cxx_compile_stdcxx.m4 <br>&#x2502;   &#x2514;&#x2500;&#x2500; ax_cxx_compile_stdcxx_11.m4 <br>&#x2514;&#x2500;&#x2500; <font color=\"IndianRed\" style=\"line-height: 1.6;\">tests</font></p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">7 directories, 95 files <br>&#x91CD;&#x8981;&#x7684;&#x6587;&#x4EF6;&#x6216;&#x6587;&#x4EF6;&#x5939;&#x6211;&#x6807;&#x6210;&#x4E86;&#x7EA2;&#x8272;&#x3002;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">CMakeLists.txt <br><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">UnitTest++&#x662F;&#x57FA;&#x4E8E;CMake&#x7684;&#xFF0C;&#x540E;&#x9762;&#x4F1A;&#x5177;&#x4F53;&#x8BB2;CMake&#xFF0C;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5C31;&#x7C7B;&#x4F3C;&#x4E8E;CMake&#x7684;&#x5DE5;&#x7A0B;&#x6587;&#x4EF6;&#x3002;CMake&#x57FA;&#x4E8E;&#x5B83;&#x751F;&#x6210;Makefile&#x6216;&#x8005;&#x5176;&#x4ED6;&#x5F00;&#x53D1;&#x5E73;&#x53F0;&#x7684;&#x5DE5;&#x7A0B;&#x6587;&#x4EF6;&#x3002;</li></ul></li><li style=\"line-height: 1.6;\">UnitTest++ <br><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">UnitTest++&#x662F;&#x5F00;&#x6E90;&#x9879;&#x76EE;&#xFF0C;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x5C31;&#x662F;UnitTest++&#x6240;&#x6709;&#x7684;&#x6E90;&#x7801;</li></ul></li><li style=\"line-height: 1.6;\">tests <br><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x8FD9;&#x4E2A;&#x662F;UnitTest++&#x672C;&#x8EAB;&#x7684;test case&#x3002;&#x6211;&#x4EEC;&#x5728;&#x5199;&#x81EA;&#x5DF1;&#x7684;test case&#x7684;&#x65F6;&#x5019;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x522B;&#x4EBA;&#x662F;&#x600E;&#x4E48;&#x5199;&#x7684;&#x3002;</li></ul></li></ul></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"cmake\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">CMake</a></h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x91CC;&#x6536;&#x96C6;&#x4E86;&#x4E24;&#x7BC7;CMake&#x7684;&#x6587;&#x7AE0;&#xFF0C;<a href=\"https://www.evernote.com/shard/s24/nl/697376807/d90d734c-12e4-4664-a0d5-af887f4b8b10/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">CMake&#x4F7F;&#x7528;&#x603B;&#x7ED3;</a>&#x548C;<a href=\"https://www.evernote.com/shard/s24/nl/697376807/50e6782c-3acc-42a7-b582-43fe4a381fc8/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">CMake &#x5165;&#x95E8;&#x5B9E;&#x6218;</a> <br>CMake&#x610F;&#x4E3A;Cross-platform Make&#xFF0C;&#x53EF;&#x7528;&#x4E8E;&#x7BA1;&#x7406;C/C++&#x5DE5;&#x7A0B;&#x3002;&#x4F60;&#x6216;&#x8BB8;&#x542C;&#x8FC7;&#x597D;&#x51E0;&#x79CD; Make &#x5DE5;&#x5177;&#xFF0C;&#x4F8B;&#x5982; GNU Make &#xFF0C;QT &#x7684; qmake &#xFF0C;&#x5FAE;&#x8F6F;&#x7684; MS nmake&#xFF0C;BSD Make&#xFF08;pmake&#xFF09;&#xFF0C;Makepp&#xFF0C;&#x7B49;&#x7B49;&#x3002;&#x8FD9;&#x4E9B; Make &#x5DE5;&#x5177;&#x9075;&#x5FAA;&#x7740;&#x4E0D;&#x540C;&#x7684;&#x89C4;&#x8303;&#x548C;&#x6807;&#x51C6;&#xFF0C;&#x6240;&#x6267;&#x884C;&#x7684; Makefile &#x683C;&#x5F0F;&#x4E5F;&#x5343;&#x5DEE;&#x4E07;&#x522B;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x5E26;&#x6765;&#x4E86;&#x4E00;&#x4E2A;&#x4E25;&#x5CFB;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x5982;&#x679C;&#x8F6F;&#x4EF6;&#x60F3;&#x8DE8;&#x5E73;&#x53F0;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x4FDD;&#x8BC1;&#x80FD;&#x591F;&#x5728;&#x4E0D;&#x540C;&#x5E73;&#x53F0;&#x7F16;&#x8BD1;&#x3002;&#x800C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x4E0A;&#x9762;&#x7684; Make &#x5DE5;&#x5177;&#xFF0C;&#x5C31;&#x5F97;&#x4E3A;&#x6BCF;&#x4E00;&#x79CD;&#x6807;&#x51C6;&#x5199;&#x4E00;&#x6B21; Makefile &#xFF0C;&#x8FD9;&#x5C06;&#x662F;&#x4E00;&#x4EF6;&#x8BA9;&#x4EBA;&#x6293;&#x72C2;&#x7684;&#x5DE5;&#x4F5C;&#x3002;&#x5C31;&#x662F;&#x9488;&#x5BF9;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x6240;&#x8BBE;&#x8BA1;&#x7684;&#x5DE5;&#x5177;&#x3002;&#x5B83;&#x9996;&#x5148;&#x5141;&#x8BB8;&#x5F00;&#x53D1;&#x8005;&#x7F16;&#x5199;&#x4E00;&#x79CD;&#x5E73;&#x53F0;&#x65E0;&#x5173;&#x7684; CMakeList.txt &#x6587;&#x4EF6;&#x6765;&#x5B9A;&#x5236;&#x6574;&#x4E2A;&#x7F16;&#x8BD1;&#x6D41;&#x7A0B;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x6839;&#x636E;&#x76EE;&#x6807;&#x7528;&#x6237;&#x7684;&#x5E73;&#x53F0;&#x8FDB;&#x4E00;&#x6B65;&#x751F;&#x6210;&#x6240;&#x9700;&#x7684;&#x672C;&#x5730;&#x5316; Makefile &#x548C;&#x5DE5;&#x7A0B;&#x6587;&#x4EF6;&#xFF0C;&#x5982; Unix &#x7684; Makefile &#x6216; Windows &#x7684; Visual Studio &#x5DE5;&#x7A0B;&#x3002;&#x4ECE;&#x800C;&#x505A;&#x5230;&#x201C;Write once, run everywhere&#x201D;&#x3002; <br>&#x5728; linux &#x5E73;&#x53F0;&#x4E0B;&#x4F7F;&#x7528; CMake &#x751F;&#x6210; Makefile &#x5E76;&#x7F16;&#x8BD1;&#x7684;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x7F16;&#x5199; CMake &#x914D;&#x7F6E;&#x6587;&#x4EF6; <code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">CMakeLists.txt</code> &#x3002;</li><li style=\"line-height: 1.6;\">&#x6267;&#x884C;&#x547D;&#x4EE4;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">cmake -G &quot;Unix Makefiles&quot; &lt;PATH&gt;</code>&#x751F;&#x6210;Unix&#x8BC6;&#x522B;&#x7684;Makefile[^support]&#xFF0C;&lt;PATH&gt;&#x662F; CMakeLists.txt &#x6240;&#x5728;&#x7684;&#x76EE;&#x5F55;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;ccmake&#xFF0C;ccmake &#x548C; cmake &#x7684;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x524D;&#x8005;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x4EA4;&#x4E92;&#x5F0F;&#x7684;&#x754C;&#x9762;&#x3002;</li><li style=\"line-height: 1.6;\">&#x4F7F;&#x7528; make &#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#x3002; <br>&#x4EE5;UnitTest++&#x81EA;&#x5E26;&#x7684;CMakeLists.txt&#x4E3A;&#x4F8B;&#xFF1A;</li></ol></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #f92672;\">cmake_minimum_required</span>(VERSION <span style=\"line-height: 1.6; color: #ae81ff;\">2.8</span>.<span style=\"line-height: 1.6; color: #ae81ff;\">1</span>)<br><span style=\"line-height: 1.6; color: #f92672;\">project</span>(UnitTest++)<br><br><span style=\"line-height: 1.6; color: #75715e;\"># get the main sources</span><br>file(GLOB headers_ RELATIVE <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span> UnitTest++/*.h)<br>file(GLOB sources_ RELATIVE <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span> UnitTest++/*.cpp)<br><span style=\"line-height: 1.6; color: #f92672;\">source_group</span>(<span style=\"line-height: 1.6; color: #e6db74;\">&quot;&quot;</span> FILES <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;headers_&#125;</span> <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;sources_&#125;</span>)<br><br><span style=\"line-height: 1.6; color: #75715e;\"># get platform specific sources</span><br><span style=\"line-height: 1.6; color: #f92672;\">if</span> (WIN32)<br>    <span style=\"line-height: 1.6; color: #f92672;\">add_definitions</span>(-D_CRT_SECURE_NO_DEPRECATE)<br>    <span style=\"line-height: 1.6; color: #f92672;\">set</span>(platformDir_ Win32)<br><span style=\"line-height: 1.6; color: #f92672;\">else</span>()<br>    <span style=\"line-height: 1.6; color: #f92672;\">set</span>(platformDir_ Posix)<br><span style=\"line-height: 1.6; color: #f92672;\">endif</span>(WIN32)<br><br>file(GLOB platformHeaders_ RELATIVE <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span> UnitTest++/<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;platformDir_&#125;</span>/*.h)<br>file(GLOB platformSources_ RELATIVE <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span> UnitTest++/<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;platformDir_&#125;</span>/*.cpp)<br><span style=\"line-height: 1.6; color: #f92672;\">source_group</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;platformDir_&#125;</span> FILES <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;platformHeaders_&#125;</span> <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;platformSources_&#125;</span>)<br><br><span style=\"line-height: 1.6; color: #75715e;\"># create the lib</span><br><span style=\"line-height: 1.6; color: #f92672;\">add_library</span>(UnitTest++ STATIC <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;headers_&#125;</span> <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;sources_&#125;</span> <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;platformHeaders_&#125;</span> <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;platformSources_&#125;</span>)<br><br><span style=\"line-height: 1.6; color: #75715e;\"># build the test runner</span><br>file(GLOB TEST_SRCS RELATIVE <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span> tests/*.cpp tests/*.h)<br><span style=\"line-height: 1.6; color: #f92672;\">source_group</span>( <span style=\"line-height: 1.6; color: #e6db74;\">&quot;&quot;</span> FILES <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;TEST_SRCS&#125;</span>)<br><span style=\"line-height: 1.6; color: #f92672;\">add_executable</span>(TestUnitTest++ <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;TEST_SRCS&#125;</span>)<br><span style=\"line-height: 1.6; color: #f92672;\">include_directories</span>(.)<br><br><span style=\"line-height: 1.6; color: #f92672;\">if</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;UTPP_USE_PLUS_SIGN&#125;</span>)<br>    <span style=\"line-height: 1.6; color: #f92672;\">set_target_properties</span>(TestUnitTest++ PROPERTIES OUTPUT_NAME TestUnitTest++)<br><span style=\"line-height: 1.6; color: #f92672;\">endif</span>()<br><br><span style=\"line-height: 1.6; color: #f92672;\">target_link_libraries</span>(TestUnitTest++ UnitTest++)<br><br><span style=\"line-height: 1.6; color: #75715e;\"># run unit tests as post build step</span><br><span style=\"line-height: 1.6; color: #f92672;\">add_custom_command</span>(TARGET TestUnitTest++<br>    POST_BUILD COMMAND TestUnitTest++<br>    COMMENT <span style=\"line-height: 1.6; color: #e6db74;\">&quot;Running unit tests&quot;</span>)<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">set, file, add_library&#x7B49;&#x7B49;&#x90FD;&#x662F;&#x547D;&#x4EE4;&#xFF0C;&#x5177;&#x4F53;&#x547D;&#x4EE4;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x8FD9;&#x4E2A;&#x7B14;&#x8BB0;<a href=\"https://www.evernote.com/shard/s24/nl/697376807/d90d734c-12e4-4664-a0d5-af887f4b8b10/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">CMake&#x4F7F;&#x7528;&#x603B;&#x7ED3;</a>&#x3002;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">add_library(UnitTest++&#x2026;)&#x5C06;UnitTest++&#x4EE3;&#x7801;&#x7F16;&#x8BD1;&#x6210;&#x9759;&#x6001;&#x5E93;</li><li style=\"line-height: 1.6;\">add_executable(TestUnitTest++ &#x2026;)&#x751F;&#x6210;UnitTest++&#x5E94;&#x7528;&#x6587;&#x4EF6;</li><li style=\"line-height: 1.6;\">target_link_libraries(TestUnitTest++ UnitTest++)&#x5C06;&#x524D;&#x9762;&#x751F;&#x6210;&#x7684;libUnitTest++.a&#x94FE;&#x5165;TestUnitTest++&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x3002;</li><li style=\"line-height: 1.6;\">add_custom_command(TARGET TestUnitTest++&#x2026;)&#x8FD9;&#x4E00;&#x884C;&#x51B3;&#x5B9A;&#x4E86;&#x8FD0;&#x884C;make&#x65F6;&#xFF0C;&#x989D;&#x5916;&#x8C03;&#x7528;&#x7684;&#x547D;&#x4EE4;&#x3002;</li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><a href=\"https://www.evernote.com/shard/s24/nl/697376807/d90d734c-12e4-4664-a0d5-af887f4b8b10/\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">CMake&#x4F7F;&#x7528;&#x603B;&#x7ED3;</a>&#x8FD9;&#x7BC7;&#x7B14;&#x8BB0;&#x91CC;&#x63D0;&#x5230;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">&#x6309;&#x7167;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x7684;&#x8BF4;&#x6CD5;&#xFF0C;&#x4E0D;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;file&#x7684;GLOB&#x6307;&#x4EE4;&#x6765;&#x6536;&#x96C6;&#x5DE5;&#x7A0B;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x539F;&#x6587;&#x89E3;&#x91CA;&#x5982;&#x4E0B; <br><font color=\"Blue\" style=\"line-height: 1.6;\">We do not recommend using GLOB to collect a list of source files from your source tree. If no CMakeLists.txt file changes when a source is added or removed then the generated build system cannot know when to ask CMake to regenerate.</font> <br>&#x5927;&#x610F;&#x5C31;&#x662F;&#xFF0C;GLOB&#x6536;&#x96C6;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x589E;&#x52A0;&#x6216;&#x5220;&#x9664;&#xFF0C;&#x800C;CMakeLists.txt&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x4FEE;&#x6539;&#x65F6;&#xFF0C;CMake&#x4E0D;&#x80FD;&#x8BC6;&#x522B;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x3002;&#x5176;&#x5B9E;&#xFF0C;&#x5F53;CMakeLists.txt&#x4F7F;&#x7528;aux_source_directory&#x548C;file glob&#x67E5;&#x627E;&#x5DE5;&#x7A0B;&#x6E90;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;<b style=\"font-weight: bold;\"><font color=\"IndianRed\" style=\"line-height: 1.6;\">&#x5982;&#x679C;&#x6DFB;&#x52A0;&#x6216;&#x5220;&#x9664;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x90FD;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x8FD0;&#x884C;CMake</font></b>&#x3002;</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">cmake &#x5982;&#x4F55;&#x7F16;&#x51FA;&#x53EF;&#x4EE5;GDB&#x7684;&#x7A0B;&#x5E8F;&#xFF1F;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">cmake -DCMAKE_BUILD_TYPE=Debug CMakeList.txt</code></p></blockquote></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"implement-test-cases\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Implement Test Cases</a></h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Test Case&#x7684;&#x7F16;&#x5199;&#x901A;&#x8FC7;UnixTest++&#x672C;&#x8EAB;&#x7684;&#x5B8F;&#x5F15;&#x5165;&#xFF1A;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">    SUITE(MyUnitTests)<br>    &#123;<br>        TEST(StarterTest)<br>        &#123;<br>            MonoGraphCpInit(<span style=\"line-height: 1.6; color: #ae81ff;\">false</span>);<br>            CHECK(<span style=\"line-height: 1.6; color: #ae81ff;\">true</span>);<br>        &#125;<br>    &#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD0;&#x884C;make&#x4E4B;&#x540E;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">Running unit tests <br>Success: 2 tests passed. <br>Test time: 7.54 seconds. <br>[100%] Built target MyTest</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">TEST&#x5B8F;&#x5F15;&#x5165;&#x7684;&#x5C31;&#x662F;&#x4E00;&#x4E2A;test case&#xFF0C;SUITE&#x5B8F;&#x5F15;&#x5165;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x5957;&#x4EF6;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6240;&#x6709;&#x7528;SUITE&#x6216;&#x8005;TEST&#x5B9A;&#x4E49;&#x7684;case&#x90FD;&#x4F1A;&#x88AB;&#x8FD0;&#x884C;&#xFF0C;&#x770B;main code&#x3002;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">int</span> <span style=\"line-height: 1.6; color: #a6e22e;\">main</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(<span style=\"line-height: 1.6; color: #66d9ef;\">int</span>, <span style=\"line-height: 1.6; color: #66d9ef;\">const</span> <span style=\"line-height: 1.6; color: #66d9ef;\">char</span> *[])</span><br></span>&#123;<br>   <span style=\"line-height: 1.6; color: #f92672;\">return</span> UnitTest::RunAllTests();<br>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x6709;UnitTest++&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x5176;&#x5B9E;&#x60F3;&#x600E;&#x4E48;&#x6D4B;&#x90FD;&#x53EF;&#x4EE5;&#x3002;&#x7ECF;&#x8FC7;&#x5B66;&#x4E60;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x8C03;&#x7528;&#x6307;&#x5B9A;case&#x7684;main code&#x53EF;&#x4EE5;&#x5982;&#x4E0B;&#x7F16;&#x5199;&#xFF1A;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\">   UnitTest::TestReporterStdout reporter;<br>   UnitTest::<span style=\"line-height: 1.6; color: #f92672;\">TestRunner <span style=\"line-height: 1.6; color: #a6e22e;\">runner</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(reporter)</span></span>;<br>   <span style=\"line-height: 1.6; color: #f92672;\">return</span> runner.RunTestsIf(UnitTest::Test::GetTestList(), <span style=\"line-height: 1.6; color: #e6db74;\">&quot;MyUnitTests&quot;</span>, UnitTest::True(), <span style=\"line-height: 1.6; color: #ae81ff;\">0</span>);<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x6BB5;code&#x8C03;&#x7528;&#x4E86;&#x540D;&#x5B57;&#x53EB;MyUnitTests&#x7684;SUITE&#x4E2D;&#x6240;&#x6709;case&#x3002;</p></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"linux-test-harness\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Linux Test Harness</a></h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">Phoenix FW&#x91CC;&#x9762;&#x7684;Linux Test Harness&#x662F;&#x57FA;&#x4E8E;UnixTest++&#x7684;&#x3002;&#x53EF;&#x4EE5;&#x53C2;&#x8003;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">components/GCP/JsonDataModel/linux_test_harness/Makefile</code>&#x3002;&#x5176;&#x4E2D;&#x7528;&#x5230;&#x7684;UnixTest++&#x662F;v1.4&#x7684;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x7528;&#x5230;cmake&#x6765;&#x6784;&#x5EFA;&#x3002;&#x800C;&#x662F;&#x81EA;&#x5DF1;&#x6784;&#x5EFA;&#x7684;Makefile&#x6765;&#x7F16;&#x8BD1;&#x3002;&#x8FD0;&#x7528;&#x6700;&#x65B0;&#x7684;cmake&#x6765;&#x642D;&#x5EFA;Unit Test&#x73AF;&#x5883;&#x611F;&#x89C9;&#x66F4;&#x7B80;&#x5355;&#xFF0C;&#x800C;&#x4E14;&#x7ADF;&#x7136;&#x8FD8;&#x80FD;&#x6709;&#x5E73;&#x53F0;&#x79FB;&#x690D;&#x6027;&#xFF0C;&#x867D;&#x7136;&#x76EE;&#x524D;&#x5BF9;&#x6211;&#x4EEC;&#x6CA1;&#x7528;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD8;&#x662F;&#x5F88;&#x8D5E;&#x7684;&#x3002;&#x5C06;UnixTest++&#x7F16;&#x8BD1;&#x5230;&#x53EF;&#x7528;&#x8FD8;&#x662F;&#x633A;&#x7B80;&#x5355;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x6574;&#x5408;Phoenix code&#x6709;&#x90A3;&#x4E48;&#x4E00;&#x70B9;&#x9EBB;&#x70E6;&#x3002;&#x5148;&#x8BB2;&#x4E00;&#x4E0B;&#x6211;&#x4EEC;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;&#xFF0C;&#x6D4B;&#x8BD5;Mono Graphic Panel Driver&#x3002;&#x518D;&#x5C06;&#x5177;&#x4F53;&#x642D;&#x5EFA;&#x7684;&#x601D;&#x8DEF;&#x548C;&#x4E00;&#x4E9B;&#x5C0F;tips&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"mono-graphic-panel-driver\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mono Graphic Panel Driver</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x7BC7;&#x76F8;&#x5173;&#x7B14;&#x8BB0;<a href=\"https://www.evernote.com/shard/s24/nl/2724128/9cf701b0-e736-43d5-9411-923afacf2344\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Pheonix_Display</a>&#x3002;&#x6211;&#x5176;&#x5B9E;&#x60F3;&#x505A;&#x7684;&#x662F;&#x5728;Mono Graphic Panel Driver&#x4E2D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;Recovery Thread&#x3002;&#x5148;&#x770B;&#x4E0B;&#x6E90;&#x7801;&#x67B6;&#x6784;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">[benzhou@plslx111 phx]$ ls components/bsp/control_panel/ <br>abc  buttonLed  ccpi  clcd  inc  <font color=\"IndianRed\" style=\"line-height: 1.6;\">monoGraph</font>  obj  pub  src</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">monoGraph</code>&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x4F1A;&#x8C03;&#x7528;&#x5230;abc&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x6240;&#x4EE5;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">linux_test_harness</code>&#x5C31;&#x653E;&#x5728;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x3002;&#x5E76;&#x4E14;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">abc</code>&#x548C;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">monoGraph</code>&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x9700;&#x8981;&#x88AB;&#x94FE;&#x63A5;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x7A0B;&#x5E8F;&#x4E2D;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"&#x6D4B;&#x8BD5;&#x67B6;&#x6784;\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">&#x6D4B;&#x8BD5;&#x67B6;&#x6784;</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6700;&#x540E;&#x6211;&#x4EEC;&#x7684;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">CMakeLists.txt</code>&#x5982;&#x4E0B;&#xFF1A;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; color: #f92672;\">cmake_minimum_required</span>(VERSION <span style=\"line-height: 1.6; color: #ae81ff;\">2.8</span>.<span style=\"line-height: 1.6; color: #ae81ff;\">1</span>)<br><span style=\"line-height: 1.6; color: #f92672;\">project</span>(MyTest)<br><br><span style=\"line-height: 1.6; color: #f92672;\">set</span>(CMAKE_C_COMPILER <span style=\"line-height: 1.6; color: #e6db74;\">&quot;g++&quot;</span>)<br><br><span style=\"line-height: 1.6; color: #75715e;\"># enable gdb</span><br><span style=\"line-height: 1.6; color: #f92672;\">set</span>(CMAKE_BUILD_TYPE <span style=\"line-height: 1.6; color: #e6db74;\">&quot;Debug&quot;</span>)<br><span style=\"line-height: 1.6; color: #f92672;\">set</span>(CMAKE_CXX_FLAGS_DEBUG <span style=\"line-height: 1.6; color: #e6db74;\">&quot;$ENV&#123;CXXFLAGS&#125; -O0 -Wall -g -ggdb&quot;</span>)<br><span style=\"line-height: 1.6; color: #f92672;\">set</span>(CMAKE_CXX_FLAGS_RELEASE <span style=\"line-height: 1.6; color: #e6db74;\">&quot;$ENV&#123;CXXFLAGS&#125; -O3 -Wall&quot;</span>)<br><br><span style=\"line-height: 1.6; color: #f92672;\">set</span>(PHX_DIR <span style=\"line-height: 1.6; color: #e6db74;\">&quot;$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/../../../../../&quot;</span>)<br><br><span style=\"line-height: 1.6; color: #f92672;\">include_directories</span>(..)<br><span style=\"line-height: 1.6; color: #f92672;\">include_directories</span>(stubs)<br><span style=\"line-height: 1.6; color: #f92672;\">include_directories</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>components/bsp/control_panel/monoGraph/pub/)<br><span style=\"line-height: 1.6; color: #f92672;\">include_directories</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>components/bsp/control_panel/monoGraph/inc/)<br><span style=\"line-height: 1.6; color: #f92672;\">include_directories</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>components/bsp/control_panel/abc/pub/)<br><span style=\"line-height: 1.6; color: #f92672;\">include_directories</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>components/bsp/control_panel/abc/inc/)<br><span style=\"line-height: 1.6; color: #f92672;\">include_directories</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>components/bsp/control_panel/pub/)<br><span style=\"line-height: 1.6; color: #f92672;\">include_directories</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>components/bsp/control_panel/inc/)<br><span style=\"line-height: 1.6; color: #f92672;\">include_directories</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>components/primboot/pub/)<br><br><span style=\"line-height: 1.6; color: #75715e;\"># get Phoenix code</span><br><span style=\"line-height: 1.6; color: #75715e;\">#file(GLOB PHX_SRCS RELATIVE $&#123;CMAKE_CURRENT_SOURCE_DIR&#125; ../../../src/*.cpp ../../../src/*.c)</span><br><span style=\"line-height: 1.6; color: #f92672;\">aux_source_directory</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>/components/bsp/control_panel/abc/src PHX_ABC)<br><span style=\"line-height: 1.6; color: #f92672;\">aux_source_directory</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>/components/bsp/control_panel/monoGraph/src PHX_MONO)<br>list(APPEND PHX_SRCS<br>    <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_ABC&#125;</span><br>    <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_MONO&#125;</span><br>)<br><span style=\"line-height: 1.6; color: #f92672;\">add_library</span> (PhxFunctions STATIC <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_SRCS&#125;</span>)<br><br><span style=\"line-height: 1.6; color: #75715e;\"># get the Phoenix stub sources</span><br><span style=\"line-height: 1.6; color: #f92672;\">aux_source_directory</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>/components/bsp/control_panel/linux_test_harness/mytests/stubs PHX_STUBS)<br><span style=\"line-height: 1.6; color: #f92672;\">add_library</span> (StubFunctions STATIC <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_STUBS&#125;</span>)<br><br><span style=\"line-height: 1.6; color: #75715e;\"># get the main sources</span><br><span style=\"line-height: 1.6; color: #f92672;\">aux_source_directory</span>(<span style=\"line-height: 1.6; color: #e6db74;\">$&#123;PHX_DIR&#125;</span>/components/bsp/control_panel/linux_test_harness/mytests TEST_SRCS)<br><br><span style=\"line-height: 1.6; color: #f92672;\">add_executable</span>(MyTest <span style=\"line-height: 1.6; color: #e6db74;\">$&#123;TEST_SRCS&#125;</span>)<br><br><span style=\"line-height: 1.6; color: #f92672;\">target_link_libraries</span>(MyTest<br>    pthread<br>    UnitTest++<br>    PhxFunctions<br>    StubFunctions<br>)<br><br><span style=\"line-height: 1.6; color: #75715e;\"># run unit tests as post build step</span><br><span style=\"line-height: 1.6; color: #f92672;\">add_custom_command</span>(TARGET MyTest<br>    POST_BUILD COMMAND MyTest<br>    COMMENT <span style=\"line-height: 1.6; color: #e6db74;\">&quot;Running unit tests&quot;</span><br>)<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x9664;&#x4E86;UnitTest++&#x6846;&#x67B6;&#x672C;&#x8EAB;&#x7684;&#x5E93;libUnitTest++.a&#x548C;&#x94FE;&#x5165;&#x4E86;&#x4E00;&#x4E2A;pthread&#x5E93;&#x4EE5;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x5B9A;&#x4E49;&#x4E86;&#x53E6;&#x5916;&#x4E24;&#x4E2A;&#x5E93;PhxFunctions&#x548C;StubFunctions&#x3002;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">PhxFunctions&#x662F;&#x6211;&#x4EEC;&#x60F3;&#x6D4B;&#x8BD5;&#x7684;code&#xFF0C;&#x5373;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">abc</code>&#x548C;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">monoGraph</code>&#x6587;&#x4EF6;&#x5939;</li><li style=\"line-height: 1.6;\">StubFunctions&#x662F;&#x4E3A;&#x4E86;&#x7F16;&#x8BD1;&#x901A;&#x8FC7;&#xFF0C;&#x5B9A;&#x4E49;&#x7684;&#x4E00;&#x4E9B;&#x5B58;&#x6839;&#x51FD;&#x6570;</li></ul><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E3B;&#x8981;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x600E;&#x4E48;&#x5B9A;&#x4E49;&#x8FD9;&#x4E9B;&#x5B58;&#x6839;&#x6587;&#x4EF6;&#x548C;&#x51FD;&#x6570;&#x3002;&#x6839;&#x636E;&#x6211;&#x7684;&#x7ECF;&#x9A8C;&#x548C;TDD&#x601D;&#x60F3;(&#x4E0D;&#x8981;&#x4E3A;&#x4E86;&#x660E;&#x5929;&#x8BBE;&#x8BA1;)&#xFF0C;&#x5E94;&#x8BE5;&#x6CE8;&#x610F;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x5982;&#x679C;&#x6709;&#x627E;&#x4E0D;&#x5230;&#x7684;&#x5934;&#x6587;&#x4EF6;&#xFF0C;&#x5728;stubs&#x6587;&#x4EF6;&#x5939;&#x91CC;&#x52A0;&#x4E00;&#x4E2A;&#x7A7A;&#x6587;&#x4EF6;</li><li style=\"line-height: 1.6;\">&#x5982;&#x679C;&#x6709;&#x627E;&#x4E0D;&#x5230;&#x7684;&#x7C7B;&#x58F0;&#x660E;&#xFF0C;&#x4ECE;FW&#x627E;&#x5230;&#x7C7B;&#x5B9A;&#x4E49;&#x62F7;&#x8D1D;&#x8FC7;&#x6765;</li><li style=\"line-height: 1.6;\">&#x5982;&#x679C;&#x6709;&#x627E;&#x4E0D;&#x5230;&#x5B9A;&#x4E49;&#x7684;&#x51FD;&#x6570;&#x7684;&#x94FE;&#x63A5;&#x9519;&#x8BEF;&#xFF0C;&#x5C31;&#x5728;stub.cpp&#x4E2D;&#x5B9A;&#x4E49;&#x7A7A;&#x51FD;&#x6570;&#x3002;</li><li style=\"line-height: 1.6;\">&#x5982;&#x679C;&#x5C06;&#x6765;&#x53D1;&#x73B0;&#x9700;&#x8981;&#x8C03;&#x7528;&#x771F;&#x5B9E;&#x7684;FW&#x51FD;&#x6570;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5C06;&#x90A3;&#x4E2A;&#x51FD;&#x6570;&#x6240;&#x5728;&#x7684;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x7F16;&#x8BD1;&#x6210;&#x5E93;&#x94FE;&#x63A5;&#x8FDB;&#x6765;&#x3002;</li></ul></div><div style=\"line-height: 1.6;\"></div><center style=\"display:none\">%23UnitTest++%u7B80%u4ECB%0A@%28%u5B66%u4E60%u7B14%u8BB0%29%5BTDD%2C%20Programming%2C%20unittest%5D%0A%0A%5BTOC%5D%0A%0A%u6700%u8FD1%u62DC%u8BFB%u4E86Kent%20Beck%u5927%u795E%u7684%u300ATest-Driven%20Development%20By%20Example%u300B%uFF0C%u6709%u4E86%u8FD9%u7BC7%5B%u8BFB%u4E66%u7B14%u8BB0%5D%28https%3A//www.evernote.com/shard/s24/nl/697376807/209575d9-d1bc-4aa6-8a79-3d50bfe3d377/%29%u3002%u8FD9%u672C%u4E66%u89E3%u7B54%u4E86%u6211%u7684%u5F88%u591A%u5F00%u53D1%u4E2D%u9047%u5230%u7684%u56F0%u60D1%uFF0C%u6240%u4EE5%u51B3%u5B9A%u4EE5%u540E%u8D70%u4E0ATDD%u7684%u9053%u8DEF%u3002%u90A3%u4E3A%u4EC0%u4E48%u4F1A%u5B66%u4E60UnixTest++%uFF0C%u5176%u5B9E%u662F%u56E0%u4E3A%u60E0%u666E%u6253%u5370%u673A%u7684Phoenix%20FW%u91CC%u9762%u66FE%u7ECF%u6709%u5148%u8F88%u505A%u8FC7%u7C7B%u4F3Cunit%20test%u7684%u4E8B%u60C5%uFF0C%u79F0%u4E4B%u4E3ALinux%20Test%20Harness%u3002Harnes%u662F%u9A6C%u978D%u7684%u610F%u601D%uFF0C%u8FD9%u4E2A%u540D%u5B57%u5E94%u8BE5%u662F%u60E0%u666E%u4EBA%u81EA%u5DF1%u53D6%u7684%u3002%u8FD9%u4E2ALinux%20Test%20Harness%u5C31%u662F%u57FA%u4E8E%5BUnixTest++%5D%28https%3A//github.com/unittest-cpp/unittest-cpp%29%u7684%u3002%u76EE%u524D%u6211%u7528%u7684%u662F%u6700%u65B0%u7248%uFF0Cv1.5.1%u3002%u76EE%u5F55%u6811%u7ED3%u6784%u5982%u4E0B%uFF1A%0A%u251C%u2500%u2500%20AUTHORS%0A%u251C%u2500%u2500%20%3Cfont%20color%3D%22IndianRed%22%3ECMakeLists.txt%3C/font%3E%0A%u251C%u2500%u2500%20ChangeLog%0A%u251C%u2500%u2500%20INSTALL%0A%u251C%u2500%u2500%20LICENSE%0A%u251C%u2500%u2500%20Makefile.am%0A%u251C%u2500%u2500%20README.md%0A%u251C%u2500%u2500%20%3Cfont%20color%3D%22IndianRed%22%3EUnitTest++%3C/font%3E%0A%u251C%u2500%u2500%20UnitTest++.pc.in%0A%u251C%u2500%u2500%20appveyor.yml%0A%u251C%u2500%u2500%20builds%0A%u251C%u2500%u2500%20configure.ac%0A%u251C%u2500%u2500%20docs%0A%u251C%u2500%u2500%20m4%0A%u2502%20%20%20%u251C%u2500%u2500%20ax_cxx_compile_stdcxx.m4%0A%u2502%20%20%20%u2514%u2500%u2500%20ax_cxx_compile_stdcxx_11.m4%0A%u2514%u2500%u2500%20%3Cfont%20color%3D%22IndianRed%22%3Etests%3C/font%3E%0A%0A7%20directories%2C%2095%20files%0A%u91CD%u8981%u7684%u6587%u4EF6%u6216%u6587%u4EF6%u5939%u6211%u6807%u6210%u4E86%u7EA2%u8272%u3002%0A-%20CMakeLists.txt%0A%09-%20UnitTest++%u662F%u57FA%u4E8ECMake%u7684%uFF0C%u540E%u9762%u4F1A%u5177%u4F53%u8BB2CMake%uFF0C%u8FD9%u4E2A%u6587%u4EF6%u5C31%u7C7B%u4F3C%u4E8ECMake%u7684%u5DE5%u7A0B%u6587%u4EF6%u3002CMake%u57FA%u4E8E%u5B83%u751F%u6210Makefile%u6216%u8005%u5176%u4ED6%u5F00%u53D1%u5E73%u53F0%u7684%u5DE5%u7A0B%u6587%u4EF6%u3002%0A-%20UnitTest++%0A%09-%20UnitTest++%u662F%u5F00%u6E90%u9879%u76EE%uFF0C%u8FD9%u4E2A%u6587%u4EF6%u5939%u5C31%u662FUnitTest++%u6240%u6709%u7684%u6E90%u7801%0A-%20tests%0A%09-%20%u8FD9%u4E2A%u662FUnitTest++%u672C%u8EAB%u7684test%20case%u3002%u6211%u4EEC%u5728%u5199%u81EA%u5DF1%u7684test%20case%u7684%u65F6%u5019%u5B8C%u5168%u53EF%u4EE5%u53C2%u8003%u522B%u4EBA%u662F%u600E%u4E48%u5199%u7684%u3002%0A%0A%23%23CMake%0A%u8FD9%u91CC%u6536%u96C6%u4E86%u4E24%u7BC7CMake%u7684%u6587%u7AE0%uFF0C%5BCMake%u4F7F%u7528%u603B%u7ED3%5D%28https%3A//www.evernote.com/shard/s24/nl/697376807/d90d734c-12e4-4664-a0d5-af887f4b8b10/%29%u548C%5BCMake%20%u5165%u95E8%u5B9E%u6218%5D%28https%3A//www.evernote.com/shard/s24/nl/697376807/50e6782c-3acc-42a7-b582-43fe4a381fc8/%29%0ACMake%u610F%u4E3ACross-platform%20Make%uFF0C%u53EF%u7528%u4E8E%u7BA1%u7406C/C++%u5DE5%u7A0B%u3002%u4F60%u6216%u8BB8%u542C%u8FC7%u597D%u51E0%u79CD%20Make%20%u5DE5%u5177%uFF0C%u4F8B%u5982%20GNU%20Make%20%uFF0CQT%20%u7684%20qmake%20%uFF0C%u5FAE%u8F6F%u7684%20MS%20nmake%uFF0CBSD%20Make%uFF08pmake%uFF09%uFF0CMakepp%uFF0C%u7B49%u7B49%u3002%u8FD9%u4E9B%20Make%20%u5DE5%u5177%u9075%u5FAA%u7740%u4E0D%u540C%u7684%u89C4%u8303%u548C%u6807%u51C6%uFF0C%u6240%u6267%u884C%u7684%20Makefile%20%u683C%u5F0F%u4E5F%u5343%u5DEE%u4E07%u522B%u3002%u8FD9%u6837%u5C31%u5E26%u6765%u4E86%u4E00%u4E2A%u4E25%u5CFB%u7684%u95EE%u9898%uFF1A%u5982%u679C%u8F6F%u4EF6%u60F3%u8DE8%u5E73%u53F0%uFF0C%u5FC5%u987B%u8981%u4FDD%u8BC1%u80FD%u591F%u5728%u4E0D%u540C%u5E73%u53F0%u7F16%u8BD1%u3002%u800C%u5982%u679C%u4F7F%u7528%u4E0A%u9762%u7684%20Make%20%u5DE5%u5177%uFF0C%u5C31%u5F97%u4E3A%u6BCF%u4E00%u79CD%u6807%u51C6%u5199%u4E00%u6B21%20Makefile%20%uFF0C%u8FD9%u5C06%u662F%u4E00%u4EF6%u8BA9%u4EBA%u6293%u72C2%u7684%u5DE5%u4F5C%u3002%u5C31%u662F%u9488%u5BF9%u8FD9%u4E2A%u95EE%u9898%u6240%u8BBE%u8BA1%u7684%u5DE5%u5177%u3002%u5B83%u9996%u5148%u5141%u8BB8%u5F00%u53D1%u8005%u7F16%u5199%u4E00%u79CD%u5E73%u53F0%u65E0%u5173%u7684%20CMakeList.txt%20%u6587%u4EF6%u6765%u5B9A%u5236%u6574%u4E2A%u7F16%u8BD1%u6D41%u7A0B%uFF0C%u7136%u540E%u518D%u6839%u636E%u76EE%u6807%u7528%u6237%u7684%u5E73%u53F0%u8FDB%u4E00%u6B65%u751F%u6210%u6240%u9700%u7684%u672C%u5730%u5316%20Makefile%20%u548C%u5DE5%u7A0B%u6587%u4EF6%uFF0C%u5982%20Unix%20%u7684%20Makefile%20%u6216%20Windows%20%u7684%20Visual%20Studio%20%u5DE5%u7A0B%u3002%u4ECE%u800C%u505A%u5230%u201CWrite%20once%2C%20run%20everywhere%u201D%u3002%0A%09%u5728%20linux%20%u5E73%u53F0%u4E0B%u4F7F%u7528%20CMake%20%u751F%u6210%20Makefile%20%u5E76%u7F16%u8BD1%u7684%u6D41%u7A0B%u5982%u4E0B%uFF1A%0A1.%20%u7F16%u5199%20CMake%20%u914D%u7F6E%u6587%u4EF6%20%60CMakeLists.txt%60%20%u3002%0A2.%20%u6267%u884C%u547D%u4EE4%60cmake%20-G%20%22Unix%20Makefiles%22%20%3CPATH%3E%60%u751F%u6210Unix%u8BC6%u522B%u7684Makefile%5B%5Esupport%5D%uFF0C%26lt%3BPATH%26gt%3B%u662F%20CMakeLists.txt%20%u6240%u5728%u7684%u76EE%u5F55%u3002%u4E5F%u53EF%u4EE5%u7528ccmake%uFF0Cccmake%20%u548C%20cmake%20%u7684%u533A%u522B%u5728%u4E8E%u524D%u8005%u63D0%u4F9B%u4E86%u4E00%u4E2A%u4EA4%u4E92%u5F0F%u7684%u754C%u9762%u3002%0A3.%20%u4F7F%u7528%20make%20%u547D%u4EE4%u8FDB%u884C%u7F16%u8BD1%u3002%0A%u4EE5UnitTest++%u81EA%u5E26%u7684CMakeLists.txt%u4E3A%u4F8B%uFF1A%0A%60%60%60cmake%0Acmake_minimum_required%28VERSION%202.8.1%29%0Aproject%28UnitTest++%29%0A%0A%23%20get%20the%20main%20sources%0Afile%28GLOB%20headers_%20RELATIVE%20%24%7BCMAKE_CURRENT_SOURCE_DIR%7D%20UnitTest++/*.h%29%0Afile%28GLOB%20sources_%20RELATIVE%20%24%7BCMAKE_CURRENT_SOURCE_DIR%7D%20UnitTest++/*.cpp%29%0Asource_group%28%22%22%20FILES%20%24%7Bheaders_%7D%20%24%7Bsources_%7D%29%0A%0A%23%20get%20platform%20specific%20sources%0Aif%20%28WIN32%29%0A%20%20%20%20add_definitions%28-D_CRT_SECURE_NO_DEPRECATE%29%0A%20%20%20%20set%28platformDir_%20Win32%29%0Aelse%28%29%0A%20%20%20%20set%28platformDir_%20Posix%29%0Aendif%28WIN32%29%0A%0Afile%28GLOB%20platformHeaders_%20RELATIVE%20%24%7BCMAKE_CURRENT_SOURCE_DIR%7D%20UnitTest++/%24%7BplatformDir_%7D/*.h%29%0Afile%28GLOB%20platformSources_%20RELATIVE%20%24%7BCMAKE_CURRENT_SOURCE_DIR%7D%20UnitTest++/%24%7BplatformDir_%7D/*.cpp%29%0Asource_group%28%24%7BplatformDir_%7D%20FILES%20%24%7BplatformHeaders_%7D%20%24%7BplatformSources_%7D%29%0A%0A%23%20create%20the%20lib%0Aadd_library%28UnitTest++%20STATIC%20%24%7Bheaders_%7D%20%24%7Bsources_%7D%20%24%7BplatformHeaders_%7D%20%24%7BplatformSources_%7D%29%0A%0A%23%20build%20the%20test%20runner%0Afile%28GLOB%20TEST_SRCS%20RELATIVE%20%24%7BCMAKE_CURRENT_SOURCE_DIR%7D%20tests/*.cpp%20tests/*.h%29%0Asource_group%28%20%22%22%20FILES%20%24%7BTEST_SRCS%7D%29%0Aadd_executable%28TestUnitTest++%20%24%7BTEST_SRCS%7D%29%0Ainclude_directories%28.%29%0A%0Aif%28%24%7BUTPP_USE_PLUS_SIGN%7D%29%0A%20%20%20%20set_target_properties%28TestUnitTest++%20PROPERTIES%20OUTPUT_NAME%20TestUnitTest++%29%0Aendif%28%29%0A%0Atarget_link_libraries%28TestUnitTest++%20UnitTest++%29%0A%0A%23%20run%20unit%20tests%20as%20post%20build%20step%0Aadd_custom_command%28TARGET%20TestUnitTest++%0A%20%20%20%20POST_BUILD%20COMMAND%20TestUnitTest++%0A%20%20%20%20COMMENT%20%22Running%20unit%20tests%22%29%0A%60%60%60%0Aset%2C%20file%2C%20add_library%u7B49%u7B49%u90FD%u662F%u547D%u4EE4%uFF0C%u5177%u4F53%u547D%u4EE4%u53EF%u4EE5%u53C2%u8003%u8FD9%u4E2A%u7B14%u8BB0%5BCMake%u4F7F%u7528%u603B%u7ED3%5D%28https%3A//www.evernote.com/shard/s24/nl/697376807/d90d734c-12e4-4664-a0d5-af887f4b8b10/%29%u3002%0A-%20add_library%28UnitTest++...%29%u5C06UnitTest++%u4EE3%u7801%u7F16%u8BD1%u6210%u9759%u6001%u5E93%0A-%20add_executable%28TestUnitTest++%20...%29%u751F%u6210UnitTest++%u5E94%u7528%u6587%u4EF6%0A-%20target_link_libraries%28TestUnitTest++%20UnitTest++%29%u5C06%u524D%u9762%u751F%u6210%u7684libUnitTest++.a%u94FE%u5165TestUnitTest++%u53EF%u6267%u884C%u6587%u4EF6%u3002%0A-%20add_custom_command%28TARGET%20TestUnitTest++...%29%u8FD9%u4E00%u884C%u51B3%u5B9A%u4E86%u8FD0%u884Cmake%u65F6%uFF0C%u989D%u5916%u8C03%u7528%u7684%u547D%u4EE4%u3002%0A%0A%5BCMake%u4F7F%u7528%u603B%u7ED3%5D%28https%3A//www.evernote.com/shard/s24/nl/697376807/d90d734c-12e4-4664-a0d5-af887f4b8b10/%29%u8FD9%u7BC7%u7B14%u8BB0%u91CC%u63D0%u5230%uFF1A%0A%3E%u6309%u7167%u5B98%u65B9%u6587%u6863%u7684%u8BF4%u6CD5%uFF0C%u4E0D%u5EFA%u8BAE%u4F7F%u7528file%u7684GLOB%u6307%u4EE4%u6765%u6536%u96C6%u5DE5%u7A0B%u7684%u6E90%u6587%u4EF6%uFF0C%u539F%u6587%u89E3%u91CA%u5982%u4E0B%0A%3Cfont%20color%3D%22Blue%22%3EWe%20do%20not%20recommend%20using%20GLOB%20to%20collect%20a%20list%20of%20source%20files%20from%20your%20source%20tree.%20If%20no%20CMakeLists.txt%20file%20changes%20when%20a%20source%20is%20added%20or%20removed%20then%20the%20generated%20build%20system%20cannot%20know%20when%20to%20ask%20CMake%20to%20regenerate.%3C/font%3E%0A%u5927%u610F%u5C31%u662F%uFF0CGLOB%u6536%u96C6%u7684%u6E90%u6587%u4EF6%u589E%u52A0%u6216%u5220%u9664%uFF0C%u800CCMakeLists.txt%u6CA1%u6709%u53D1%u751F%u4FEE%u6539%u65F6%uFF0CCMake%u4E0D%u80FD%u8BC6%u522B%u8FD9%u4E9B%u6587%u4EF6%u3002%u5176%u5B9E%uFF0C%u5F53CMakeLists.txt%u4F7F%u7528aux_source_directory%u548Cfile%20glob%u67E5%u627E%u5DE5%u7A0B%u6E90%u6587%u4EF6%u65F6%uFF0C%3Cb%3E%3Cfont%20color%3D%22IndianRed%22%3E%u5982%u679C%u6DFB%u52A0%u6216%u5220%u9664%u6E90%u6587%u4EF6%uFF0C%u90FD%u9700%u8981%u91CD%u65B0%u8FD0%u884CCMake%3C/font%3E%3C/b%3E%u3002%0A%0Acmake%20%u5982%u4F55%u7F16%u51FA%u53EF%u4EE5GDB%u7684%u7A0B%u5E8F%uFF1F%0A%3E%60cmake%20-DCMAKE_BUILD_TYPE%3DDebug%20CMakeList.txt%60%0A%23%23Implement%20Test%20Cases%0ATest%20Case%u7684%u7F16%u5199%u901A%u8FC7UnixTest++%u672C%u8EAB%u7684%u5B8F%u5F15%u5165%uFF1A%0A%60%60%60cpp%0A%20%20%20%20SUITE%28MyUnitTests%29%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20TEST%28StarterTest%29%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20MonoGraphCpInit%28false%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20CHECK%28true%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%60%60%60%0A%u8FD0%u884Cmake%u4E4B%u540E%u7684%u8F93%u51FA%u4E3A%uFF1A%0A%3ERunning%20unit%20tests%0ASuccess%3A%202%20tests%20passed.%0ATest%20time%3A%207.54%20seconds.%0A%5B100%25%5D%20Built%20target%20MyTest%0A%0ATEST%u5B8F%u5F15%u5165%u7684%u5C31%u662F%u4E00%u4E2Atest%20case%uFF0CSUITE%u5B8F%u5F15%u5165%u7684%u662F%u4E00%u4E2A%u6D4B%u8BD5%u5957%u4EF6%u3002%u9ED8%u8BA4%u60C5%u51B5%u4E0B%uFF0C%u6240%u6709%u7528SUITE%u6216%u8005TEST%u5B9A%u4E49%u7684case%u90FD%u4F1A%u88AB%u8FD0%u884C%uFF0C%u770Bmain%20code%u3002%0A%60%60%60cpp%0Aint%20main%28int%2C%20const%20char%20*%5B%5D%29%0A%7B%0A%20%20%20return%20UnitTest%3A%3ARunAllTests%28%29%3B%0A%7D%0A%60%60%60%0A%u56E0%u4E3A%u6211%u4EEC%u6709UnitTest++%u7684%u6E90%u7801%uFF0C%u5176%u5B9E%u60F3%u600E%u4E48%u6D4B%u90FD%u53EF%u4EE5%u3002%u7ECF%u8FC7%u5B66%u4E60%uFF0C%u5982%u679C%u60F3%u8C03%u7528%u6307%u5B9Acase%u7684main%20code%u53EF%u4EE5%u5982%u4E0B%u7F16%u5199%uFF1A%0A%60%60%60cpp%0A%20%20%20UnitTest%3A%3ATestReporterStdout%20reporter%3B%0A%20%20%20UnitTest%3A%3ATestRunner%20runner%28reporter%29%3B%0A%20%20%20return%20runner.RunTestsIf%28UnitTest%3A%3ATest%3A%3AGetTestList%28%29%2C%20%22MyUnitTests%22%2C%20UnitTest%3A%3ATrue%28%29%2C%200%29%3B%0A%60%60%60%0A%u8FD9%u6BB5code%u8C03%u7528%u4E86%u540D%u5B57%u53EBMyUnitTests%u7684SUITE%u4E2D%u6240%u6709case%u3002%0A%0A%23%23Linux%20Test%20Harness%0APhoenix%20FW%u91CC%u9762%u7684Linux%20Test%20Harness%u662F%u57FA%u4E8EUnixTest++%u7684%u3002%u53EF%u4EE5%u53C2%u8003%60components/GCP/JsonDataModel/linux_test_harness/Makefile%60%u3002%u5176%u4E2D%u7528%u5230%u7684UnixTest++%u662Fv1.4%u7684%uFF0C%u5E76%u6CA1%u6709%u7528%u5230cmake%u6765%u6784%u5EFA%u3002%u800C%u662F%u81EA%u5DF1%u6784%u5EFA%u7684Makefile%u6765%u7F16%u8BD1%u3002%u8FD0%u7528%u6700%u65B0%u7684cmake%u6765%u642D%u5EFAUnit%20Test%u73AF%u5883%u611F%u89C9%u66F4%u7B80%u5355%uFF0C%u800C%u4E14%u7ADF%u7136%u8FD8%u80FD%u6709%u5E73%u53F0%u79FB%u690D%u6027%uFF0C%u867D%u7136%u76EE%u524D%u5BF9%u6211%u4EEC%u6CA1%u7528%uFF0C%u4E0D%u8FC7%u8FD8%u662F%u5F88%u8D5E%u7684%u3002%u5C06UnixTest++%u7F16%u8BD1%u5230%u53EF%u7528%u8FD8%u662F%u633A%u7B80%u5355%u7684%uFF0C%u4F46%u662F%u8981%u6574%u5408Phoenix%20code%u6709%u90A3%u4E48%u4E00%u70B9%u9EBB%u70E6%u3002%u5148%u8BB2%u4E00%u4E0B%u6211%u4EEC%u7684%u4F7F%u7528%u573A%u666F%uFF0C%u6D4B%u8BD5Mono%20Graphic%20Panel%20Driver%u3002%u518D%u5C06%u5177%u4F53%u642D%u5EFA%u7684%u601D%u8DEF%u548C%u4E00%u4E9B%u5C0Ftips%u3002%0A%0A%23%23%23Mono%20Graphic%20Panel%20Driver%0A%u8FD9%u91CC%u6709%u4E00%u7BC7%u76F8%u5173%u7B14%u8BB0%5BPheonix_Display%5D%28https%3A//www.evernote.com/shard/s24/nl/2724128/9cf701b0-e736-43d5-9411-923afacf2344%29%u3002%u6211%u5176%u5B9E%u60F3%u505A%u7684%u662F%u5728Mono%20Graphic%20Panel%20Driver%u4E2D%u6DFB%u52A0%u4E00%u4E2ARecovery%20Thread%u3002%u5148%u770B%u4E0B%u6E90%u7801%u67B6%u6784%uFF1A%0A%3E%5Bbenzhou@plslx111%20phx%5D%24%20ls%20components/bsp/control_panel/%0Aabc%20%20buttonLed%20%20ccpi%20%20clcd%20%20inc%20%20%3Cfont%20color%3D%22IndianRed%22%3EmonoGraph%3C/font%3E%20%20obj%20%20pub%20%20src%0A%0A%60monoGraph%60%u4E2D%u7684%u4EE3%u7801%u4F1A%u8C03%u7528%u5230abc%u6587%u4EF6%u5939%u4E0B%u7684%u4EE3%u7801%u3002%u6240%u4EE5%60linux_test_harness%60%u5C31%u653E%u5728%u8FD9%u4E2A%u6587%u4EF6%u5939%u4E0B%u3002%u5E76%u4E14%60abc%60%u548C%60monoGraph%60%u4E2D%u7684%u4EE3%u7801%u9700%u8981%u88AB%u94FE%u63A5%u5230%u6211%u4EEC%u7684%u6D4B%u8BD5%u7A0B%u5E8F%u4E2D%u3002%0A%0A%23%23%23%u6D4B%u8BD5%u67B6%u6784%0A%u6700%u540E%u6211%u4EEC%u7684%60CMakeLists.txt%60%u5982%u4E0B%uFF1A%0A%60%60%60cmake%0Acmake_minimum_required%28VERSION%202.8.1%29%0Aproject%28MyTest%29%0A%0Aset%28CMAKE_C_COMPILER%20%22g++%22%29%0A%0A%23%20enable%20gdb%0Aset%28CMAKE_BUILD_TYPE%20%22Debug%22%29%0Aset%28CMAKE_CXX_FLAGS_DEBUG%20%22%24ENV%7BCXXFLAGS%7D%20-O0%20-Wall%20-g%20-ggdb%22%29%0Aset%28CMAKE_CXX_FLAGS_RELEASE%20%22%24ENV%7BCXXFLAGS%7D%20-O3%20-Wall%22%29%0A%0Aset%28PHX_DIR%20%22%24%7BCMAKE_CURRENT_SOURCE_DIR%7D/../../../../../%22%29%0A%0Ainclude_directories%28..%29%0Ainclude_directories%28stubs%29%0Ainclude_directories%28%24%7BPHX_DIR%7Dcomponents/bsp/control_panel/monoGraph/pub/%29%0Ainclude_directories%28%24%7BPHX_DIR%7Dcomponents/bsp/control_panel/monoGraph/inc/%29%0Ainclude_directories%28%24%7BPHX_DIR%7Dcomponents/bsp/control_panel/abc/pub/%29%0Ainclude_directories%28%24%7BPHX_DIR%7Dcomponents/bsp/control_panel/abc/inc/%29%0Ainclude_directories%28%24%7BPHX_DIR%7Dcomponents/bsp/control_panel/pub/%29%0Ainclude_directories%28%24%7BPHX_DIR%7Dcomponents/bsp/control_panel/inc/%29%0Ainclude_directories%28%24%7BPHX_DIR%7Dcomponents/primboot/pub/%29%0A%0A%23%20get%20Phoenix%20code%0A%23file%28GLOB%20PHX_SRCS%20RELATIVE%20%24%7BCMAKE_CURRENT_SOURCE_DIR%7D%20../../../src/*.cpp%20../../../src/*.c%29%0Aaux_source_directory%28%24%7BPHX_DIR%7D/components/bsp/control_panel/abc/src%20PHX_ABC%29%0Aaux_source_directory%28%24%7BPHX_DIR%7D/components/bsp/control_panel/monoGraph/src%20PHX_MONO%29%0Alist%28APPEND%20PHX_SRCS%0A%20%20%20%20%24%7BPHX_ABC%7D%0A%20%20%20%20%24%7BPHX_MONO%7D%0A%29%0Aadd_library%20%28PhxFunctions%20STATIC%20%24%7BPHX_SRCS%7D%29%0A%0A%23%20get%20the%20Phoenix%20stub%20sources%0Aaux_source_directory%28%24%7BPHX_DIR%7D/components/bsp/control_panel/linux_test_harness/mytests/stubs%20PHX_STUBS%29%0Aadd_library%20%28StubFunctions%20STATIC%20%24%7BPHX_STUBS%7D%29%0A%0A%23%20get%20the%20main%20sources%0Aaux_source_directory%28%24%7BPHX_DIR%7D/components/bsp/control_panel/linux_test_harness/mytests%20TEST_SRCS%29%0A%0Aadd_executable%28MyTest%20%24%7BTEST_SRCS%7D%29%0A%0Atarget_link_libraries%28MyTest%0A%20%20%20%20pthread%0A%20%20%20%20UnitTest++%0A%20%20%20%20PhxFunctions%0A%20%20%20%20StubFunctions%0A%29%0A%0A%23%20run%20unit%20tests%20as%20post%20build%20step%0Aadd_custom_command%28TARGET%20MyTest%0A%20%20%20%20POST_BUILD%20COMMAND%20MyTest%0A%20%20%20%20COMMENT%20%22Running%20unit%20tests%22%0A%29%0A%60%60%60%0A%u9664%u4E86UnitTest++%u6846%u67B6%u672C%u8EAB%u7684%u5E93libUnitTest++.a%u548C%u94FE%u5165%u4E86%u4E00%u4E2Apthread%u5E93%u4EE5%u5916%uFF0C%u6211%u4EEC%u8FD8%u5B9A%u4E49%u4E86%u53E6%u5916%u4E24%u4E2A%u5E93PhxFunctions%u548CStubFunctions%u3002%0A-%20PhxFunctions%u662F%u6211%u4EEC%u60F3%u6D4B%u8BD5%u7684code%uFF0C%u5373%60abc%60%u548C%60monoGraph%60%u6587%u4EF6%u5939%0A-%20StubFunctions%u662F%u4E3A%u4E86%u7F16%u8BD1%u901A%u8FC7%uFF0C%u5B9A%u4E49%u7684%u4E00%u4E9B%u5B58%u6839%u51FD%u6570%0A%0A%u4E3B%u8981%u9700%u8981%u6CE8%u610F%u7684%u662F%u600E%u4E48%u5B9A%u4E49%u8FD9%u4E9B%u5B58%u6839%u6587%u4EF6%u548C%u51FD%u6570%u3002%u6839%u636E%u6211%u7684%u7ECF%u9A8C%u548CTDD%u601D%u60F3%28%u4E0D%u8981%u4E3A%u4E86%u660E%u5929%u8BBE%u8BA1%29%uFF0C%u5E94%u8BE5%u6CE8%u610F%uFF1A%0A-%20%u5982%u679C%u6709%u627E%u4E0D%u5230%u7684%u5934%u6587%u4EF6%uFF0C%u5728stubs%u6587%u4EF6%u5939%u91CC%u52A0%u4E00%u4E2A%u7A7A%u6587%u4EF6%0A-%20%u5982%u679C%u6709%u627E%u4E0D%u5230%u7684%u7C7B%u58F0%u660E%uFF0C%u4ECEFW%u627E%u5230%u7C7B%u5B9A%u4E49%u62F7%u8D1D%u8FC7%u6765%0A-%20%u5982%u679C%u6709%u627E%u4E0D%u5230%u5B9A%u4E49%u7684%u51FD%u6570%u7684%u94FE%u63A5%u9519%u8BEF%uFF0C%u5C31%u5728stub.cpp%u4E2D%u5B9A%u4E49%u7A7A%u51FD%u6570%u3002%0A-%20%u5982%u679C%u5C06%u6765%u53D1%u73B0%u9700%u8981%u8C03%u7528%u771F%u5B9E%u7684FW%u51FD%u6570%uFF0C%u5C31%u9700%u8981%u5C06%u90A3%u4E2A%u51FD%u6570%u6240%u5728%u7684%u6E90%u7801%u6587%u4EF6%u7F16%u8BD1%u6210%u5E93%u94FE%u63A5%u8FDB%u6765%u3002</center><br></div></div></div>",
            "tags": [
                "TDD",
                "unittest",
                "Programming"
            ]
        },
        {
            "id": "https://zhougy0717.github.io/2016/02/16/Test-Driven_Development/",
            "url": "https://zhougy0717.github.io/2016/02/16/Test-Driven_Development/",
            "title": "Test-Driven Development",
            "date_published": "2016-02-16T08:37:39.000Z",
            "content_html": "<!DOCTYPE en-note SYSTEM 'http://xml.evernote.com/pub/enml2.dtd'><div class=\"enNote\" style=\"color: #2c3f51; font-family: &apos;Helvetica Neue&apos;, Arial, &apos;Hiragino Sans GB&apos;, STHeiti, &apos;Microsoft YaHei&apos;, &apos;WenQuanYi Micro Hei&apos;, SimSun, Song, sans-serif; line-height: 1.6;\" title lang=\"v2\" xml:lang dir><del style=\"position:relative;display:block;z-index:10;\"><a style=\"position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;\" href=\"http://maxiang.io/#/?provider=evernote_int&amp;guid=209575d9-d1bc-4aa6-8a79-3d50bfe3d377&amp;notebook=%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0\">Edit</a></del><div style=\"color: #2c3f51; font-family: &apos;Helvetica Neue&apos;, Arial, &apos;Hiragino Sans GB&apos;, STHeiti, &apos;Microsoft YaHei&apos;, &apos;WenQuanYi Micro Hei&apos;, SimSun, Song, sans-serif; line-height: 1.6;\"><div style=\"line-height: 1.6;\"><div style=\"line-height: 1.6;\"></div><div style=\"line-height: 1.6;\"><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"></p><p style=\"margin: 0 0 1.1em; color: rgba(44,63,81,0.3); line-height: 1.6;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; border-radius: 0; color: #fff; background: rgba(44,63,81,0.3); margin-right: 6px;\">&#x5B66;&#x4E60;&#x7B14;&#x8BB0;</code> <code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);\">Programming</code> <code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);\">TDD</code> </p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><div style=\"line-height: 1.6;\"><div style=\"line-height: 1.6;\"><div style=\"line-height: 1.6;\"><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#test-driven-development\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Test-Driven Development</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#chapter-25-test-driven-development-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 25. Test-Driven Development Patterns</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#isolated-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Isolated Test</a></li><li style=\"line-height: 1.6;\"><a href=\"#test-list\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Test List</a></li><li style=\"line-height: 1.6;\"><a href=\"#test-first\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Test First</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#chapter-26-red-bar-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 26. Red Bar Patterns</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#one-step-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">One Step Test</a></li><li style=\"line-height: 1.6;\"><a href=\"#starter-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Starter Test</a></li><li style=\"line-height: 1.6;\"><a href=\"#explanation-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Explanation Test</a></li><li style=\"line-height: 1.6;\"><a href=\"#learning-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Learning Test</a></li><li style=\"line-height: 1.6;\"><a href=\"#regression-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Regression Test</a></li><li style=\"line-height: 1.6;\"><a href=\"#break\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Break</a></li><li style=\"line-height: 1.6;\"><a href=\"#do-over\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Do Over</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#chapter-27-testing-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 27. Testing Patterns</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#child-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Child Test</a></li><li style=\"line-height: 1.6;\"><a href=\"#mock-object\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mock Object</a></li><li style=\"line-height: 1.6;\"><a href=\"#self-shunt\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Self Shunt</a></li><li style=\"line-height: 1.6;\"><a href=\"#log-string\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Log String</a></li><li style=\"line-height: 1.6;\"><a href=\"#crash-test-dummy\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Crash Test Dummy</a></li><li style=\"line-height: 1.6;\"><a href=\"#broken-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Broken Test</a></li><li style=\"line-height: 1.6;\"><a href=\"#clean-check-in\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Clean Check-in</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#chapter-28-green-bar-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 28. Green Bar Patterns</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#fake-it-til-you-make-it\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Fake It (&#x2018;Til You Make It)</a></li><li style=\"line-height: 1.6;\"><a href=\"#triangulate\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Triangulate</a></li><li style=\"line-height: 1.6;\"><a href=\"#one-to-many\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">One to Many</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#chapter-29-xunit-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 29. xUnit Patterns</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#assertion\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Assertion</a></li><li style=\"line-height: 1.6;\"><a href=\"#fixture\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Fixture</a></li><li style=\"line-height: 1.6;\"><a href=\"#external-fixture\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">External Fixture</a></li><li style=\"line-height: 1.6;\"><a href=\"#test-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Test Method</a></li><li style=\"line-height: 1.6;\"><a href=\"#exception-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Exception Test</a></li><li style=\"line-height: 1.6;\"><a href=\"#all-tests\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">All Tests</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#chapter-30-design-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 30. Design Patterns</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#command\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Command</a></li><li style=\"line-height: 1.6;\"><a href=\"#value-object\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Value Object</a></li><li style=\"line-height: 1.6;\"><a href=\"#null-object\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Null Object</a></li><li style=\"line-height: 1.6;\"><a href=\"#template-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Template Method</a></li><li style=\"line-height: 1.6;\"><a href=\"#pluggable-object\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Pluggable Object</a></li><li style=\"line-height: 1.6;\"><a href=\"#pluggable-selector\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Pluggable Selector</a></li><li style=\"line-height: 1.6;\"><a href=\"#factory-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Factory Method</a></li><li style=\"line-height: 1.6;\"><a href=\"#imposter\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Imposter</a></li><li style=\"line-height: 1.6;\"><a href=\"#composite\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Composite</a></li><li style=\"line-height: 1.6;\"><a href=\"#collecting-parameter\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Collecting Parameter</a></li><li style=\"line-height: 1.6;\"><a href=\"#singleton\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Singleton</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#chapter-31-refactoring\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 31. Refactoring</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#reconcile-differences\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Reconcile Differences</a></li><li style=\"line-height: 1.6;\"><a href=\"#isolate-change\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Isolate Change</a></li><li style=\"line-height: 1.6;\"><a href=\"#migrate-data\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Migrate Data</a></li><li style=\"line-height: 1.6;\"><a href=\"#extract-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Extract Method</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#how\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How</a></li><li style=\"line-height: 1.6;\"><a href=\"#why\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Why</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#inline-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Inline Method</a></li><li style=\"line-height: 1.6;\"><a href=\"#extract-interface\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Extract Interface</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#how-1\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How</a></li><li style=\"line-height: 1.6;\"><a href=\"#why-1\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Why</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#move-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Move Method</a></li><li style=\"line-height: 1.6;\"><a href=\"#method-object\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Method Object</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#how-2\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How</a></li><li style=\"line-height: 1.6;\"><a href=\"#why-2\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Why</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#add-parameter\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Add Parameter</a></li><li style=\"line-height: 1.6;\"><a href=\"#method-parameter-to-constructor-parameter\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Method Parameter to Constructor Parameter</a></li></ul></li><li style=\"line-height: 1.6;\"><a href=\"#chapter-32-mastering-tdd\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 32. Mastering TDD</a><ul style=\"margin-top: 0; margin-bottom: 15px; list-style-type: none; line-height: 1.6;\"><li style=\"line-height: 1.6;\"><a href=\"#what-dont-you-have-to-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">What don&#x2019;t you have to test?</a></li><li style=\"line-height: 1.6;\"><a href=\"#how-do-you-know-if-you-have-good-tests\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How do you know if you have good tests?</a></li><li style=\"line-height: 1.6;\"><a href=\"#how-does-tdd-lead-to-frameworks\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How does TDD lead to frameworks?</a></li><li style=\"line-height: 1.6;\"><a href=\"#how-much-feedback-do-you-need\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How much feedback do you need?</a></li><li style=\"line-height: 1.6;\"><a href=\"#when-should-you-delete-tests\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">When should you delete tests?</a></li><li style=\"line-height: 1.6;\"><a href=\"#can-you-drive-development-with-application-level-tests\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Can you drive development with application-level tests?</a></li><li style=\"line-height: 1.6;\"><a href=\"#how-do-you-switch-to-tdd-midstream\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How do you switch to TDD midstream?</a></li><li style=\"line-height: 1.6;\"><a href=\"#how-does-tdd-relate-to-the-practices-of-extreme-programming\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How does TDD relate to the practices of Extreme Programming?</a></li></ul></li></ul></li></ul></div></div></div></p><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6700;&#x8FD1;&#x5728;&#x8BFB;Kent Beck&#x7684;&#x300A;Test-Driven Development By Example&#x300B;&#xFF0C;&#x8BA9;&#x6211;&#x5BF9;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x6709;&#x4E86;&#x65B0;&#x7684;&#x8BA4;&#x8BC6;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">&#x5199;test&#x5E76;&#x4E0D;&#x4E3A;&#x4E86;&#x6D4B;&#x8BD5;&#x800C;&#x6D4B;&#x8BD5;&#xFF0C;&#x662F;&#x4E3A;&#x4E86;&#x589E;&#x5F3A;&#x5BF9;&#x7A0B;&#x5E8F;&#x7684;&#x4FE1;&#x5FC3;&#xFF0C;&#x51CF;&#x5C11;&#x7126;&#x8651;&#x3002;&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x51CF;&#x5C11;&#x7126;&#x8651;&#x5462;&#xFF0C;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x6B21;&#x53EA;&#x5173;&#x5FC3;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x3002;&#x5982;&#x4F55;&#x4E00;&#x6B21;&#x53EA;&#x5173;&#x5FC3;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;TDD&#x3002;</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x672C;&#x4E66;&#x5206;&#x4E09;&#x4E2A;&#x90E8;&#x5206;</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">The Money Example</li><li style=\"line-height: 1.6;\">The xUnit Example</li><li style=\"line-height: 1.6;\">Patterns for Test-Driven Development <br>&#x524D;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#x8BB2;&#x4E86;&#x4E24;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x6765;&#x9610;&#x8FF0;&#x5982;&#x4F55;&#x8FDB;&#x884C;TDD&#x5F00;&#x53D1;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x90E8;&#x5206;&#x7B97;&#x662F;&#x603B;&#x7ED3;&#xFF0C;&#x5168;&#x4E66;&#x7684;&#x7CBE;&#x534E;&#x6240;&#x5728;&#x3002;&#x672C;&#x6587;&#x4E0D;&#x6253;&#x7B97;&#x8BB2;&#x8FD9;&#x4E24;&#x4E2A;&#x4F8B;&#x5B50;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x4F8B;&#x5B50;&#x6700;&#x597D;&#x81EA;&#x5DF1;&#x624B;&#x5199;&#x4E00;&#x904D;&#xFF0C;&#x624D;&#x53EF;&#x4EE5;&#x52A0;&#x6DF1;&#x4E86;&#x89E3;&#x3002;&#x672C;&#x6587;&#x4E3B;&#x8981;&#x6458;&#x5F55;&#x4E00;&#x4E9B;TDD&#x7684;&#x6A21;&#x5F0F;&#x65B9;&#x6CD5;(pattern)&#x3002;</li></ol><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E0B;&#x9762;&#x8FD9;&#x6BB5;&#x8BDD;&#x6765;&#x81EA;&#x7B2C;&#x4E00;&#x7AE0;&#xFF0C;&#x63D0;&#x7EB2;&#x6308;&#x9886;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\">My goal is for you to see the rhythm of Test-Driven Development (TDD), which can be summed up as follows.</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">Quickly add a test.</li><li style=\"line-height: 1.6;\">Run all tests and see the new one fail.</li><li style=\"line-height: 1.6;\">Make a little change.</li><li style=\"line-height: 1.6;\">Run all tests and see them all succeed.</li><li style=\"line-height: 1.6;\">Refactor to remove duplication.</li></ol><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\">The surprises are likely to include.</p><ul style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">How each test can cover a <strong style=\"font-weight: bold; line-height: 1.6;\">small increment</strong> of functionality.</li><li style=\"line-height: 1.6;\">How <strong style=\"font-weight: bold; line-height: 1.6;\">small and ugly the changes</strong> can be to make the new tests run.</li><li style=\"line-height: 1.6;\">How often the tests are run.</li><li style=\"line-height: 1.6;\">How many teensy-weensy steps make up the refactorings.</li></ul></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x5C31;&#x662F;TDD&#x7684;&#x7CBE;&#x9AD3;&#x3002;&#x6309;&#x4F5C;&#x8005;&#x7684;&#x8BF4;&#x6CD5;&#x5C31;&#x662F;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">Green/Red/Green/Refactor</code>&#x8282;&#x594F;&#x3002; <br>&#x8FD9;&#x4E5F;&#x56DE;&#x7B54;&#x4E86;&#x6211;&#x4E00;&#x76F4;&#x4EE5;&#x6765;&#x7684;&#x56F0;&#x6270;&#xFF0C;&#x5230;&#x5E95;&#x5E94;&#x8BE5;&#x5982;&#x4F55;&#x8BBE;&#x8BA1;&#x4E00;&#x6BB5;&#x7A0B;&#x5E8F;&#xFF0C;&#x5230;&#x5E95;&#x8981;&#x8003;&#x8651;&#x591A;&#x5C11;&#x79CD;&#x60C5;&#x51B5;&#x3002;&#x6309;&#x7167;TDD&#x7684;&#x5EFA;&#x8BAE;&#x5C31;&#x662F;&#xFF0C;&#x9996;&#x5148;&#x5199;&#x6D4B;&#x8BD5;&#xFF0C;&#x7136;&#x540E;&#x4EE3;&#x7801;&#x600E;&#x4E48;&#x5FEB;&#x600E;&#x4E48;&#x6765;&#xFF0C;&#x4E0D;&#x7BA1;&#x6709;&#x591A;ugly&#xFF0C;&#x7136;&#x540E;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x91CD;&#x590D;&#xFF0C;&#x53CA;&#x65F6;&#x505A;&#x91CD;&#x6784;&#x3002;&#x4E0D;&#x8981;&#x8003;&#x8651;&#x4EC0;&#x4E48;&#x6269;&#x5C55;&#x6027;&#x4E4B;&#x7C7B;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x8BBE;&#x8BA1;&#x65B9;&#x5F0F;&#x672C;&#x8EAB;&#x5C31;&#x80FD;&#x63D0;&#x4F9B;&#x3002;&#x56E0;&#x4E3A;&#x5B83;&#x63D0;&#x9AD8;&#x4E86;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x548C;&#x91CD;&#x6784;&#x7684;&#x9891;&#x7387;&#xFF0C;&#x65E2;&#x63D0;&#x5347;&#x4E86;&#x7F16;&#x7801;&#x8005;&#x5BF9;&#x7A0B;&#x5E8F;&#x7684;&#x4FE1;&#x5FC3;&#xFF0C;&#x4E5F;&#x964D;&#x4F4E;&#x4E86;&#x4E0D;&#x5408;&#x7406;&#x8BBE;&#x8BA1;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"chapter-25-test-driven-development-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 25. Test-Driven Development Patterns</a></h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E66;&#x4E2D;&#x5F15;&#x5165;&#x4E86;&#x5F88;&#x591A;&#x5F71;&#x50CF;&#x56FE;(Influence Diagram)&#xFF0C;&#x5F88;&#x5F62;&#x8C61;&#x7684;&#x8BF4;&#x660E;&#x4E86;&#xFF0C;&#x5F15;&#x5165;TDD&#x80FD;&#x7ED9;&#x6211;&#x4EEC;&#x65E5;&#x5E38;&#x7684;&#x5F00;&#x53D1;&#x5DE5;&#x4F5C;&#x5F15;&#x5165;&#x4EC0;&#x4E48;&#x597D;&#x5904;&#x3002; <br><img class=\"enMedia\" src=\"/images/Test-Driven Development/1455616022147.png\" hash=\"ee396bc2e1f7e786de1ec9ab19d445e4\" align alt longdesc width height border hspace vspace usemap style=\"border: 0; vertical-align: middle; max-width: 100%;\" title lang xml:lang dir></p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\">This is a positive feedback loop. </p><ul style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">The more stress you feel, the less testing you will do. </li><li style=\"line-height: 1.6;\">The less testing you do, the more errors you will make. </li><li style=\"line-height: 1.6;\">The more errors you make, the more stress you feel. </li><li style=\"line-height: 1.6;\">Rinse and repeat.</li></ul></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"isolated-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Isolated Test</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x80FD;&#x5C06;&#x5927;&#x5757;&#x7684;&#x6D4B;&#x8BD5;&#x5206;&#x5272;&#x6210;&#x677E;&#x8026;&#x5408;&#x7684;&#x5C0F;&#x6D4B;&#x8BD5;&#x4E0D;&#x5BB9;&#x6613;&#xFF0C;&#x4F46;&#x662F;&#x597D;&#x5904;&#x5927;&#x5927;&#x7684;&#x3002;&#x4F5C;&#x8005;&#x8BF4;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">I never knew exactly how to achieve high cohesion and loose coupling regularly until I started writing isolated tests.</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"test-list\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Test List</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6211;&#x4EEC;&#x8981;&#x600E;&#x4E48;&#x5F00;&#x59CB;TDD&#x5462;&#xFF1F;&#x4F5C;&#x8005;&#x7ED9;&#x51FA;&#x4E86;&#x5F88;&#x5177;&#x64CD;&#x4F5C;&#x6027;&#x7684;&#x5EFA;&#x8BAE;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6;\">Before you begin, write a list of all the tests you know you will have to write. <br>&#x8FD9;&#x4E2A;list&#x4E0A;&#x5199;&#x70B9;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;</p><ol style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">Put on the list examples of every operation that you know you need to implement. &#x8981;&#x54EA;&#x4E9B;&#x64CD;&#x4F5C;&#x3002;</li><li style=\"line-height: 1.6;\">for those operations that don&#x2019;t already exist, put the null version of that operation on the list.&#x54EA;&#x4E9B;&#x64CD;&#x4F5C;&#x6CA1;&#x5B9E;&#x73B0;&#xFF0C;&#x5199;&#x4E0A;&#x5B58;&#x6839;&#x3002;</li><li style=\"line-height: 1.6;\">List all of the refactorings that you think you will have to do in order to have clean code at the end of this session. &#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x5217;&#x51FA;&#x9700;&#x8981;&#x91CD;&#x6784;&#x7684;&#x5730;&#x65B9;&#x3002;&#x800C;&#x5982;&#x679C;&#x6709;&#x5927;&#x7684;&#x91CD;&#x6784;&#x7684;&#x9700;&#x8981;&#x65F6;&#xFF0C;&#x653E;&#x5230;later list&#x91CC;&#x9762;&#xFF0C;&#x628A;&#x624B;&#x91CC;&#x7684;&#x4E8B;&#x60C5;&#x5904;&#x7406;&#x5B8C;&#xFF0C;&#x518D;&#x53BB;&#x5904;&#x7406;&#x5927;&#x7684;&#x91CD;&#x6784;&#x3002;</li></ol></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x770B;&#x4F5C;&#x8005;&#x65F6;&#x523B;&#x5728;&#x5F3A;&#x8C03;TDD&#x5C31;&#x662F;tiny steps&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">The pure form of TDD, wherein you are never more than one change away from a green bar, is like that three-out-of-four rule.</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"test-first\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Test First</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x5199;&#x6D4B;&#x8BD5;&#xFF1F; <br>&#x7B54;&#xFF1A;&#x5728;&#x5199;code&#x4E4B;&#x524D;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x65E6;&#x4F60;&#x5F00;&#x59CB;&#x5199;code&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x5C31;&#x8EAB;&#x9677;&#x6CE5;&#x6F6D;&#xFF0C;&#x65E0;&#x6687;&#x987E;&#x53CA;test case&#x4E86;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"chapter-26-red-bar-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 26. Red Bar Patterns</a></h2></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"one-step-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">One Step Test</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">Each test should represent one step toward your overall goal.</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"starter-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Starter Test</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5982;&#x4F55;&#x5F00;&#x59CB;&#x5199;&#x6D4B;&#x8BD5;&#xFF1F;&#x4E0D;&#x8981;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x60F3;&#x5199;&#x4E00;&#x4E2A;&#x771F;&#x6B63;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x4F1A;&#x4E00;&#x6B21;&#x9762;&#x5BF9;&#x592A;&#x591A;&#x7684;&#x95EE;&#x9898;&#x3002;&#x4F5C;&#x8005;&#x5EFA;&#x8BAE;&#x5C1D;&#x8BD5;&#x4ECE;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6D4B;&#x8BD5;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x5F00;&#x59CB;&#x3002;&#x8FD9;&#x6837;&#x4EE5;&#x4FBF;&#x4E8E;&#x4F60;&#x4ECE;Greenxun&#x8FC5;&#x901F;&#x5F00;&#x59CB;&#x4F60;&#x7684;Green/Red/Green/Refactor&#x8282;&#x594F;&#x3002;&#x4F5C;&#x8005;&#x4E3E;&#x4E86;&#x4E00;&#x4E2A;&#x4EA7;&#x751F;&#x591A;&#x8FB9;&#x5F62;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span>Reducer r= <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Reducer(<span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Polygon()); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span>assertEquals(<span style=\"line-height: 1.6; color: #ae81ff;\">0</span>, reducer.result().npoints);<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E0D;&#x592A;&#x61C2;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4E0D;&#x8FC7;&#x53EF;&#x4EE5;&#x4ECE;&#x4E2D;&#x770B;&#x51FA;&#x4F5C;&#x8005;&#x5BF9;TDD&#x7684;&#x89E3;&#x91CA;&#x3002;&#x95EE;&#x9898;&#x672C;&#x8EAB;&#x662F;&#x8981;&#x89E3;&#x4E00;&#x4E2A;&#x964D;&#x4F4E;&#x591A;&#x8FB9;&#x5F62;&#x8FB9;&#x6570;&#x7684;&#x95EE;&#x9898;&#x3002;&#x4F5C;&#x8005;&#x7684;&#x542F;&#x52A8;&#x6D4B;&#x8BD5;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x201C;0&#x201D;&#x8FB9;&#x591A;&#x8FB9;&#x5F62;&#xFF0C;&#x90A3;&#x7ED3;&#x679C;&#x4E00;&#x5B9A;&#x662F;&#x201D;0&#x201D;&#x8FB9;&#x591A;&#x8FB9;&#x5F62;&#x3002;&#x5BF9;&#x5B9E;&#x9645;&#x610F;&#x4E49;&#x5F88;&#x8352;&#x8BDE;&#xFF0C;&#x4F46;&#x5BF9;&#x6D4B;&#x8BD5;&#x6765;&#x8BF4;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x9519;&#x7684;&#x5F00;&#x59CB;&#x3002;&#x7B26;&#x5408;&#x6211;&#x4EEC;&#x7684;&#x9884;&#x671F;&#xFF0C;&#x7B80;&#x5355;&#x800C;&#x4E14;&#x53C8;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">represent one step toward your overall goal</code>&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"explanation-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Explanation Test</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E00;&#x7AE0;&#x662F;&#x5728;&#x8BF4;&#x5982;&#x4F55;&#x4E0D;&#x7528;&#x5F3A;&#x8FEB;&#x7684;&#x624B;&#x6BB5;&#x8BA9;&#x975E;TDD&#x7684;&#x56E2;&#x961F;&#x6210;&#x5458;&#x80FD;&#x8F6C;&#x5411;TDD&#x3002;&#x5F53;&#x5F00;&#x53D1;&#x8005;&#x5411;&#x4F60;&#x89E3;&#x91CA;&#x4ED6;&#x7684;&#x7A0B;&#x5E8F;&#x65F6;&#xFF0C;&#x4F60;&#x90FD;&#x53EF;&#x4EE5;&#x5C06;&#x4E4B;&#x8F6C;&#x5316;&#x4E3A;test case&#x3002; <br>&#x672C;&#x4E66;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5F88;&#x6709;&#x7279;&#x8272;&#x7684;&#x5730;&#x65B9;&#x662F;&#xFF0C;&#x8D2F;&#x7A7F;&#x5168;&#x6587;&#xFF0C;&#x4F5C;&#x8005;&#x603B;&#x662F;&#x5728;&#x7ECF;&#x610F;&#x4E0D;&#x7ECF;&#x610F;&#x95F4;&#x6D41;&#x9732;&#x7740;&#x5404;&#x79CD;&#x5B9D;&#x8D35;&#x7684;&#x5DE5;&#x4F5C;&#x7ECF;&#x9A8C;&#xFF1A;&#x5982;&#x4F55;&#x957F;&#x671F;&#x4FDD;&#x6301;&#x66F4;&#x9AD8;&#x6548;&#x7684;&#x7F16;&#x7A0B;&#xFF1F;&#x5982;&#x679C;&#x4F60;&#x662F;&#x7ECF;&#x7406;&#xFF0C;&#x4F60;&#x5982;&#x4F55;&#x4E0E;&#x4F60;&#x7684;&#x56E2;&#x961F;&#x6210;&#x5458;&#x4E00;&#x8D77;&#x5DE5;&#x4F5C;&#xFF1F;&#x7B49;&#x7B49;&#x3002;&#x8FD9;&#x4E00;&#x7AE0;&#x5C31;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x53E5;&#x8BDD;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">If you&#x2019;re a manager or a leader, you can&#x2019;t force anyone to change the way they work. <br>What can you do? A simple start is to start asking for explanations in terms of test cases: &#x201C;Let me see if I understand what you&#x2019;re saying.</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"learning-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Learning Test</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E00;&#x7AE0;&#x8BB2;&#x4E86;&#x6D4B;&#x8BD5;&#x9A71;&#x52A8;&#x5F00;&#x53D1;&#x9488;&#x5BF9;&#x96C6;&#x6210;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x7684;&#x4F18;&#x52BF;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"regression-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Regression Test</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">&#x56DE;&#x5F52;&#x6D4B;&#x8BD5;</strong>&#x662F;&#x6307;&#x4FEE;&#x6539;&#x4E86;&#x65E7;&#x4EE3;&#x7801;&#x540E;&#xFF0C;&#x91CD;&#x65B0;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x4EE5;&#x786E;&#x8BA4;&#x4FEE;&#x6539;&#x6CA1;&#x6709;&#x5F15;&#x5165;&#x65B0;&#x7684;&#x9519;&#x8BEF;&#x6216;&#x5BFC;&#x81F4;&#x5176;&#x4ED6;&#x4EE3;&#x7801;&#x4EA7;&#x751F;&#x9519;&#x8BEF;&#x3002; <br>&#x81EA;&#x52A8;&#x56DE;&#x5F52;&#x6D4B;&#x8BD5;&#x5C06;&#x5927;&#x5E45;&#x964D;&#x4F4E;&#x7CFB;&#x7EDF;&#x6D4B;&#x8BD5;&#x3001;&#x7EF4;&#x62A4;&#x5347;&#x7EA7;&#x7B49;&#x9636;&#x6BB5;&#x7684;&#x6210;&#x672C;&#x3002;&#x56DE;&#x5F52;&#x6D4B;&#x8BD5;&#x4F5C;&#x4E3A;&#x8F6F;&#x4EF6;&#x751F;&#x547D;&#x5468;&#x671F;&#x7684;&#x4E00;&#x4E2A;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#xFF0C;&#x5728;&#x6574;&#x4E2A;&#x8F6F;&#x4EF6;&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;&#x4E2D;&#x5360;&#x6709;&#x5F88;&#x5927;&#x7684;&#x5DE5;&#x4F5C;&#x91CF;&#x6BD4;&#x91CD;&#xFF0C;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x7684;&#x5404;&#x4E2A;&#x9636;&#x6BB5;&#x90FD;&#x4F1A;&#x8FDB;&#x884C;&#x591A;&#x6B21;&#x56DE;&#x5F52;&#x6D4B;&#x8BD5;&#x3002;&#x5728;&#x6E10;&#x8FDB;&#x548C;&#x5FEB;&#x901F;&#x8FED;&#x4EE3;&#x5F00;&#x53D1;&#x4E2D;&#xFF0C;&#x65B0;&#x7248;&#x672C;&#x7684;&#x8FDE;&#x7EED;&#x53D1;&#x5E03;&#x4F7F;&#x56DE;&#x5F52;&#x6D4B;&#x8BD5;&#x8FDB;&#x884C;&#x7684;&#x66F4;&#x52A0;&#x9891;&#x7E41;&#xFF0C;&#x800C;&#x5728;&#x6781;&#x7AEF;&#x7F16;&#x7A0B;&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x66F4;&#x662F;&#x8981;&#x6C42;&#x6BCF;&#x5929;&#x90FD;&#x8FDB;&#x884C;&#x82E5;&#x5E72;&#x6B21;&#x56DE;&#x5F52;&#x6D4B;&#x8BD5;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x901A;&#x8FC7;&#x9009;&#x62E9;&#x6B63;&#x786E;&#x7684;&#x56DE;&#x5F52;&#x6D4B;&#x8BD5;&#x7B56;&#x7565;&#x6765;&#x6539;&#x8FDB;&#x56DE;&#x5F52;&#x6D4B;&#x8BD5;&#x7684;&#x6548;&#x7387;&#x548C;&#x6709;&#x6548;&#x6027;&#x662F;&#x975E;&#x5E38;&#x6709;&#x610F;&#x4E49;&#x7684;&#x3002; <br>&#x2014;&#x2014; <strong style=\"font-weight: bold; line-height: 1.6;\">&#x767E;&#x5EA6;&#x767E;&#x79D1;</strong></p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x672C;&#x4E66;&#x8BB2;&#x7684;&#x56DE;&#x5F52;&#x6D4B;&#x8BD5;&#x6982;&#x5FF5;&#x53EF;&#x80FD;&#x7565;&#x6709;&#x4E0D;&#x540C;&#x3002;&#x6309;&#x7167;&#x6211;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x4F5C;&#x8005;&#x662F;&#x60F3;&#x8BF4;&#xFF0C;&#x5728;&#x8FDB;&#x884C;&#x5B8C;&#x6240;&#x6709;&#x7684;&#x7F16;&#x7801;&#x4EE5;&#x540E;&#xFF0C;&#x4F60;&#x5DF2;&#x7ECF;&#x5BF9;&#x4F60;&#x7684;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x6240;&#x6709;&#x4E1C;&#x897F;&#x5B8C;&#x6210;&#x4E86;unknown<span style=\"line-height: 1.6;\"><span style=\"word-wrap: normal; vertical-align: middle; font-style: normal; font-weight: normal; margin: 0; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; padding: 0; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; line-height: 1.6; display: inline-block; font-size: 100%;\"><span style=\"line-height: 1.6; display: inline-block; white-space: nowrap; padding: 1px 0px;\"><span style=\"line-height: 1.6; display: inline-block; position: relative; width: 2.169ex; height: 0.964ex; vertical-align: 0.12ex;\"><span style=\"line-height: 1.6;\"><img class=\"enMedia\" src=\"/images/Test-Driven Development/SVGc430acae44d6c4874bd268c48184baa7\" hash=\"f4a4c9b133ba2d97b64f72acf87add23\" align alt longdesc width=\"15.75\" height=\"8.75\" border hspace vspace usemap style=\"border: 0; vertical-align: middle; max-width: 100%; margin-top: 0; margin-bottom: 0;\" title lang xml:lang dir></span></span></span></span></span>known&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x90A3;&#x4E48;&#x73B0;&#x5728;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x56DE;&#x8FC7;&#x5934;&#x770B;&#x770B;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x65F6;&#x5019;&#x91CD;&#x65B0;&#x5199;&#x4E00;&#x4EFD;&#x6D4B;&#x8BD5;&#x4F60;&#x5E94;&#x8BE5;&#x5199;&#x4EC0;&#x4E48;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">&#x56DE;&#x5230;&#x4F60;&#x9488;&#x5BF9;&#x8FD9;&#x4E2A;&#x7CFB;&#x7EDF;&#x7684;&#x6700;&#x521D;&#x7684;&#x60F3;&#x6CD5;&#x6765;&#x5BF9;&#x6574;&#x4E2A;&#x7CFB;&#x7EDF;&#x505A;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x3002;&#x4EE5;&#x671F;&#x5BF9;&#x6574;&#x4E2A;&#x7CFB;&#x7EDF;&#x6709;&#x4E2A;&#x6574;&#x4F53;&#x7684;&#x8BC4;&#x4EF7;&#x3002;</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"break\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Break</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x52B3;&#x9038;&#x7ED3;&#x5408;&#x5BF9;&#x7A0B;&#x5E8F;&#x5458;&#x662F;&#x975E;&#x5E38;&#x975E;&#x5E38;&#x975E;&#x5E38;&#x91CD;&#x8981;&#x7684;&#xFF01;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Shower Methodology</strong>:If you know what to type, then type. If you don&#x2019;t know what to type, then take a shower, and stay in the shower until you know what to type. <br><strong style=\"font-weight: bold; line-height: 1.6;\">TDD Rule</strong>: If you don&#x2019;t know what to type, then Fake It. If the <br>right design still isn&#x2019;t clear, then Triangulate. </p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x770B;&#x770B;&#x4F5C;&#x8005;&#x63D0;&#x5021;&#x7684;&#x65F6;&#x95F4;&#x7BA1;&#x7406;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><ul style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">At the scale of hours, keep a water bottle by your keyboard so that biology provides the motivation for regular breaks.</li><li style=\"line-height: 1.6;\">At the scale of a day, commitments after regular work hours can help you to stop when you need sleep before progress.</li><li style=\"line-height: 1.6;\">At the scale of a week, weekend commitments help get your conscious, energysucking thoughts off work. (My wife swears I get my best ideas on Friday evening.)</li><li style=\"line-height: 1.6;\">At the scale of a year, mandatory vacation policies help you refresh yourself completely. The French do this right&#x2014;two contiguous weeks of vacation aren&#x2019;t enough. You spend the first week decompressing, and the second week getting ready to go back to work. Therefore, three weeks, or better four, are necessary for you to be your most effective the rest of the year.</li></ul></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"do-over\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Do Over</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">What do you do when you are feeling lost? Throw away the code and start over. <br>&#x4F5C;&#x8005;&#x5728;&#x8FD9;&#x4E00;&#x7AE0;&#x544A;&#x8BC9;&#x4F60;&#xFF0C;&#x4E0D;&#x8981;&#x5728;&#x6CE5;&#x6F6D;&#x8D8A;&#x9677;&#x8D8A;&#x6DF1;&#xFF0C;&#x4E0D;&#x8981;&#x5BB3;&#x6015;&#x91CD;&#x65B0;&#x5F00;&#x59CB;&#x3002;&#x6362;&#x4E2A;&#x4F19;&#x4F34;&#xFF0C;&#x6362;&#x4E2A;&#x601D;&#x8DEF;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x6709;&#x66F4;&#x597D;&#x7684;&#x53D1;&#x73B0;&#x3002;</p></blockquote></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"chapter-27-testing-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 27. Testing Patterns</a></h2></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"child-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Child Test</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x91CC;&#x8BF4;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x6D4B;&#x8BD5;&#x592A;&#x5927;&#xFF0C;&#x90A3;&#x5C31;&#x8981;&#x628A;&#x8FD9;&#x4E2A;&#x5927;&#x7684;&#x6D4B;&#x8BD5;&#x7834;&#x6210;&#x82E5;&#x5E72;&#x4E2A;&#x5C0F;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x7136;&#x540E;&#x770B;&#x770B;&#x6709;&#x6CA1;&#x6709;&#x8FDB;&#x5C55;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"mock-object\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Mock Object</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">How do you test an object that relies on an expensive or complicated resource? Create a fake version of the resource that answers constants. <br>If you want to use Mock Objects, you can&#x2019;t easily store expensive resources in global variables.&#x8981;&#x8BB0;&#x5F97;&#x6E05;&#x7406;&#x73B0;&#x573A;&#xFF0C;&#x5426;&#x5219;&#x4E07;&#x4E00;&#x5176;&#x4ED6;&#x7684;&#x4EE3;&#x7801;&#x628A;&#x4ED6;&#x5F53;&#x4F5C;&#x771F;&#x7684;object&#x5728;&#x4F7F;&#x7528;&#xFF0C;&#x5C31;&#x4F1A;&#x51FA;&#x5927;&#x95EE;&#x9898;&#x3002;&#x6240;&#x4EE5;&#x7F16;&#x7801;&#x6700;&#x57FA;&#x672C;&#x7684;&#x51C6;&#x5219;&#x662F;&#x5C11;&#x7528;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x3002; <br>Mock Objects encourage you down the path of carefully considering the visibility of every object, reducing the coupling in your designs. &#x8FD9;&#x91CC;&#x8BF4;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x7528;Mock Object&#xFF0C;&#x4F60;&#x5C31;&#x8981;&#x601D;&#x8003;&#x6211;&#x5230;&#x5E95;&#x8BE5;&#x4E0D;&#x8BE5;&#x628A;&#x8FD9;&#x4E2A;&#x5E9E;&#x7136;&#x5927;&#x7269;&#x66B4;&#x9732;&#x7ED9;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x3002;&#x8FD9;&#x79CD;&#x601D;&#x8003;&#x6709;&#x52A9;&#x4E8E;&#x51CF;&#x5C0F;&#x8026;&#x5408;&#x6027;&#x3002;</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"self-shunt\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Self Shunt</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">How do you test that one object communicates correctly with another? Have the object under test communicate with the test case instead of with the object it expects.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">Without Self Shunt</strong></p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #969896;\"># ResultListenerTest</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">def</span> <span style=\"line-height: 1.6; color: #795da3;\">testNotification</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(self)</span>:</span> <br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    result= TestResult() <br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>    listener= ResultListener() <br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span>    result.addListener(listener) <br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>    WasRun(<span style=\"line-height: 1.6; color: #df5000;\">&quot;testMethod&quot;</span>).run(result)<br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">assert</span> <span style=\"line-height: 1.6; color: #ae81ff;\">1</span> == listener.count <br><span style=\"line-height: 1.6; display: none; color: #969896;\">8.</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">9.</span><span style=\"line-height: 1.6; color: #969896;\"># ResultListener</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">10.</span><span style=\"line-height: 1.6;\"><span style=\"line-height: 1.6; color: #66d9ef;\">class</span> <span style=\"line-height: 1.6; color: #a6e22e; font-style: italic;\">ResultListener</span>:</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">11.</span>    <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">def</span> <span style=\"line-height: 1.6; color: #795da3;\">__init__</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(self)</span>:</span> <br><span style=\"line-height: 1.6; display: none; color: #969896;\">12.</span>        self.count= <span style=\"line-height: 1.6; color: #ae81ff;\">0</span> <br><span style=\"line-height: 1.6; display: none; color: #969896;\">13.</span>    <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">def</span> <span style=\"line-height: 1.6; color: #795da3;\">startTest</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(self)</span>:</span> <br><span style=\"line-height: 1.6; display: none; color: #969896;\">14.</span>        self.count= self.count + <span style=\"line-height: 1.6; color: #ae81ff;\">1</span> <br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\"><strong style=\"font-weight: bold; line-height: 1.6;\">With Self Shunt</strong></p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #969896;\"># ResultListenerTest</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">def</span> <span style=\"line-height: 1.6; color: #795da3;\">testNotification</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(self)</span>:</span> <br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    self.count= <span style=\"line-height: 1.6; color: #ae81ff;\">0</span> <br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>    result= TestResult()<br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span>    result.addListener(self)<br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>    WasRun(<span style=\"line-height: 1.6; color: #df5000;\">&quot;testMethod&quot;</span>).run(result) <br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">assert</span> <span style=\"line-height: 1.6; color: #ae81ff;\">1</span> == self.count<br><span style=\"line-height: 1.6; display: none; color: #969896;\">8.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">def</span> <span style=\"line-height: 1.6; color: #795da3;\">startTest</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(self)</span>:</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">9.</span>    self.count= self.count + <span style=\"line-height: 1.6; color: #ae81ff;\">1</span><br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x91CC;&#x4E3E;&#x5F97;&#x4F8B;&#x5B50;&#x4E0D;&#x662F;&#x5F88;&#x660E;&#x767D;&#x3002;&#x4E2D;&#x6587;&#x8BD1;&#x672C;&#x91CC;&#xFF0C;&#x5C06;self shunt&#x7FFB;&#x8BD1;&#x6210;&#x81EA;&#x5206;&#x6D41;&#xFF0C;&#x611F;&#x89C9;&#x4E5F;&#x662F;&#x5B57;&#x9762;&#x7FFB;&#x8BD1;&#x3002;&#x6211;&#x7406;&#x89E3;&#x8FD9;&#x91CC;&#x60F3;&#x8BF4;&#x7684;&#x662F;&#xFF0C;&#x4E0D;&#x4E00;&#x5B9A;&#x8981;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x7C7B;&#x6765;&#x505A;&#x5F53;&#x524D;&#x88AB;&#x6D4B;&#x8BD5;&#x7C7B;&#x6765;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;test case&#x91CC;&#x9762;&#x7528;&#x8BE5;&#x7C7B;&#x66B4;&#x9732;&#x7684;&#x63A5;&#x53E3;&#x6765;&#x505A;&#x4E8B;&#x60C5;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">Self Shunt may require that you use <strong style=\"font-weight: bold; line-height: 1.6;\">Extract Interface</strong> to get an interface to implement. You will have to decide whether extracting the interface is easier, or if testing the existing class as a <strong style=\"font-weight: bold; line-height: 1.6;\">black box</strong> is easier.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x91CC;&#x53C8;&#x770B;&#x6655;&#x4E86;&#xFF0C;self shunt&#x8DDF;extract interface&#x6709;&#x5565;&#x5173;&#x7CFB;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">&#x5F53;&#x6211;&#x4EEC;&#x6CE8;&#x610F;&#x5230;&#x5728;&#x6211;&#x4EEC;&#x4EE3;&#x7801;&#x7ED3;&#x6784;&#x4E2D;&#x8D85;&#x8FC7;&#x4E00;&#x4E2A;&#x7C7B;&#x4F7F;&#x7528;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7C7B;&#x4E2D;&#x7684;&#x540C;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x6B64;&#x65F6;&#x5E94;&#x8BE5;&#x5C06;&#x8BE5;&#x7C7B;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x653E;&#x5230;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF08;interface&#xFF09;&#x4E2D;&#xFF0C;&#x5E76;&#x5BF9;&#x5916;&#x63D0;&#x4F9B;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x4EE5;&#x4FBF;&#x88AB;&#x7528;&#x6237;&#x7C7B;&#x8BBF;&#x95EE;&#x3001;&#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x6837;&#x6709;&#x5229;&#x4E8E;&#x6253;&#x7834;&#x539F;&#x6765;&#x591A;&#x4E2A;&#x7C7B;&#x4E0E;&#x8FD9;&#x4E2A;&#x7279;&#x6B8A;&#x7C7B;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002;&#x8FD9;&#x4E2A;&#x91CD;&#x6784;&#x624B;&#x6CD5;&#x5F88;&#x5BB9;&#x6613;&#x5B9E;&#x73B0;&#xFF0C;&#x66F4;&#x91CD;&#x8981;&#x7684;&#x662F;&#x8FD9;&#x6837;&#x505A;&#x6709;&#x5229;&#x4E8E;&#x677E;&#x8026;&#x5408;&#x3002; &#x2014;&#x2014;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x89E3;&#x91CA;</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x91CC;&#x4F5C;&#x8005;&#x63D0;&#x5230;&#x7684;extract interface&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x6211;&#x4EEC;&#x8BF4;&#x7684;&#x91CD;&#x6784;&#x91CC;&#x7684;extract interface&#x3002;&#x8FD9;&#x91CC;&#x8BF4;&#x8981;&#x6D4B;&#x8BD5;A&#x7C7B;&#x548C;B&#x7C7B;&#x901A;&#x4FE1;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x76F4;&#x63A5;&#x7528;B&#x7C7B;&#xFF0C;&#x800C;&#x7528;test case&#x4E0E;A&#x7C7B;&#x901A;&#x4FE1;&#xFF0C;&#x4EE5;&#x6D4B;&#x8BD5;&#x901A;&#x4FE1;&#x7684;A&#x7C7B;&#x7AEF;&#x63A5;&#x53E3;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002;extract interface&#x8BF4;&#x7684;&#x662F;&#x4ECE;B&#x7C7B;&#x4E2D;extract&#x63A5;&#x53E3;&#x51FA;&#x6765;&#x5230;test case&#x4E2D;&#x53BB;implement&#x3002;&#x6216;&#x8005;&#x628A;B&#x7C7B;&#x76F4;&#x63A5;&#x5F53;&#x9ED1;&#x76D2;&#x5B50;&#x5728;test case&#x4E2D;&#x4F7F;&#x7528;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"log-string\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Log String</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E2A;&#x5F88;&#x6709;&#x7528;&#x3002;&#x6709;&#x4E9B;&#x51FD;&#x6570;&#x6216;&#x8005;&#x8FC7;&#x7A0B;&#x662F;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x7528;Log String&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x67E5;&#x770B;&#x8BE5;&#x8FC7;&#x7A0B;&#x6216;&#x51FD;&#x6570;&#x6709;&#x6CA1;&#x6709;&#x88AB;&#x8C03;&#x7528;&#x3002;&#x7C7B;&#x4F3C;&#x6211;&#x4EEC;&#x770B;trace log&#x4E00;&#x6837;&#xFF0C;&#x901A;&#x8FC7;&#x770B;trace log&#x80FD;&#x77E5;&#x9053;&#x673A;&#x5668;&#x6267;&#x884C;&#x7684;&#x4EE3;&#x7801;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"crash-test-dummy\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Crash Test Dummy</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">How do you test error code that is unlikely to be invoked? Invoke it anyway with a special object that throws an exception instead of doing real work.</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"broken-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Broken Test</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4F5C;&#x8005;&#x7ECF;&#x5E38;&#x80FD;&#x7ED9;&#x51FA;&#x4E00;&#x4E9B;&#x5F88;&#x5B9E;&#x7528;&#x7684;&#x5C0F;&#x7ECF;&#x9A8C;&#xFF0C;&#x8FD9;&#x91CC;&#x53C8;&#x6765;&#x4E86;&#xFF0C;&#x770B;&#x4E0B;&#x9762;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">How do you leave a programming session when you&#x2019;re programming alone? Leave the last test broken.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5F53;&#x4F60;&#x8981;&#x8F6C;&#x53BB;&#x505A;&#x53E6;&#x5916;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#xFF0C;&#x800C;&#x624B;&#x5934;&#x4E0A;&#x7684;&#x4E8B;&#x60C5;&#x53C8;&#x6CA1;&#x7ED3;&#x675F;&#x65F6;&#x600E;&#x4E48;&#x529E;&#xFF1F;&#x8BA9;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x6545;&#x610F;&#x7684;&#x4E0D;&#x901A;&#x8FC7;&#x3002;&#x8FD9;&#x6837;&#x4E0B;&#x6B21;&#x5C31;&#x77E5;&#x9053;&#x4ECE;&#x54EA;&#x513F;&#x5F00;&#x59CB;&#xFF0C;&#x7136;&#x540E;&#x80FD;&#x8FC5;&#x901F;&#x4E0A;&#x624B;&#x3002;&#x918D;&#x9190;&#x704C;&#x9876;&#x554A;&#xFF01;&#x4EE5;&#x524D;&#x90FD;&#x662F;&#x8BA4;&#x4E3A;&#x505A;&#x53E6;&#x5916;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x4E4B;&#x524D;&#x8981;&#x628A;&#x624B;&#x5934;&#x4E0A;&#x7684;&#x4E8B;&#x60C5;&#x5F04;&#x7684;&#x5C3D;&#x5584;&#x5C3D;&#x7F8E;&#xFF0C;&#x5176;&#x5B9E;&#x4E0D;&#x7136;&#x3002;&#x600E;&#x4E48;&#x505A;&#x5229;&#x4E8E;&#x540E;&#x671F;&#x7EE7;&#x7EED;&#x8FDB;&#x884C;&#xFF0C;&#x90A3;&#x5C31;&#x5E94;&#x8BE5;&#x600E;&#x4E48;&#x505A;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"clean-check-in\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Clean Check-in</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">You will occasionally find a test broken in the integration suite when you try to check in. What to do? <br><strong style=\"font-weight: bold; line-height: 1.6;\">The simplest rule</strong> is to just throw away your work and start over. The broken test is pretty strong evidence that you didn&#x2019;t know enough to program what you just programmed. <br>&#x4EC0;&#x4E48;&#x4EC0;&#x4E48;&#xFF1F;&#x7ADF;&#x7136;&#x8981;&#x6211;&#x4EEC;&#x6254;&#x6389;&#x6211;&#x4EEC;&#x505A;&#x7684;&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x65B0;&#x5F00;&#x59CB;&#x3002;&#x5C31;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x548C;integration&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x4E0D;&#x4E00;&#x81F4;&#x3002; <br>&#x5927;&#x5E08;&#x7684;&#x8BDD;&#x603B;&#x662F;&#x6709;&#x9053;&#x7406;&#x7684;&#xFF0C;&#x4EE5;&#x540E;&#x8981;&#x597D;&#x597D;&#x8003;&#x8651;&#x8FD9;&#x4E00;&#x70B9;&#x3002;</p></blockquote></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"chapter-28-green-bar-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 28. Green Bar Patterns</a></h2></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"fake-it-til-you-make-it\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Fake It (&#x2018;Til You Make It)</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x505A;&#x5047;&#x4EE3;&#x7801;&#x8BA9;&#x6D4B;&#x8BD5;&#x901A;&#x8FC7;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4E00;&#x9879;&#x4E00;&#x9879;&#x5730;&#x5B8C;&#x6210;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"triangulate\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Triangulate</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4F5C;&#x8005;&#x63D0;&#x5230;&#x7684;&#x6240;&#x8C13;&#x4E09;&#x89D2;&#x6CD5;&#x3002;&#x901A;&#x4FD7;&#x7684;&#x8BF4;&#xFF0C;&#x5C31;&#x662F;&#x53EA;&#x5728;&#x5FC5;&#x8981;&#x7684;&#x65F6;&#x5019;&#x505A;&#x62BD;&#x8C61;&#x6216;&#x901A;&#x7528;&#x5316;&#x5904;&#x7406;&#x3002;&#x901A;&#x5E38;&#x662F;&#x5728;TDD&#x7684;&#x91CD;&#x6784;&#x8FD9;&#x4E00;&#x6B65;&#x5B8C;&#x6210;&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x518D;&#x901A;&#x4FD7;&#x70B9;&#x8BF4;&#xFF0C;&#x5C31;&#x662F;&#x591A;&#x5F04;&#x51E0;&#x4E2A;case&#xFF0C;&#x518D;&#x603B;&#x7ED3;&#x5171;&#x540C;&#x70B9;&#xFF0C;&#x4E4B;&#x540E;&#x505A;&#x62BD;&#x8C61; <br>&#x4ECE;&#x53E6;&#x4E00;&#x4E2A;&#x89D2;&#x5EA6;&#xFF0C;&#x4F5C;&#x8005;&#x53C8;&#x8BF4;&#x4E86;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">I only use Triangulation when I&#x2019;m really, really unsure about the correct abstraction for the calculation. Otherwise I rely on either Obvious Implementation or Fake It.</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"one-to-many\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">One to Many</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">How do you implement an operation that works with collections of objects? Implement it without the collections first, then make it work with collections.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E2D;&#x5FC3;&#x601D;&#x60F3;&#x8FD8;&#x662F;&#x4E00;&#x4E2A;&#xFF0C;&#x4ECE;&#x663E;&#x800C;&#x6613;&#x89C1;&#x7684;&#x5730;&#x65B9;&#x5F00;&#x59CB;&#xFF0C;&#x6BCF;&#x6B21;&#x53EA;&#x505A;&#x4E00;&#x5C0F;&#x6B65;&#xFF0C;&#x7136;&#x540E;&#x4E00;&#x6B65;&#x4E00;&#x6B65;&#x5230;&#x8FBE;&#x6700;&#x7EC8;&#x7684;&#x76EE;&#x7684;&#x5730;&#x3002;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #969896;\">// 1. fake code</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">testSum</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    assertEquals(<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>, sum(<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>)); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>&#125; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">private</span> <span style=\"line-height: 1.6; color: #66d9ef;\">int</span> <span style=\"line-height: 1.6; color: #795da3;\">sum</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(<span style=\"line-height: 1.6; color: #66d9ef;\">int</span> value)</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">return</span> value;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">8.</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">9.</span><span style=\"line-height: 1.6; color: #969896;\">// 2. add arrays</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">10.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">testSum</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">11.</span>    assertEquals(<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>, sum(<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>, <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> <span style=\"line-height: 1.6; color: #a71d5d;\">int</span>[] &#123;<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>&#125;));<br><span style=\"line-height: 1.6; display: none; color: #969896;\">12.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">13.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">private</span> <span style=\"line-height: 1.6; color: #66d9ef;\">int</span> <span style=\"line-height: 1.6; color: #795da3;\">sum</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(<span style=\"line-height: 1.6; color: #66d9ef;\">int</span> value, <span style=\"line-height: 1.6; color: #66d9ef;\">int</span>[] values)</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">14.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">return</span> value;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">15.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">16.</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">17.</span><span style=\"line-height: 1.6; color: #969896;\">// 3. add real sum functionality</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">18.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">testSum</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">19.</span>    assertEquals(<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>, sum(<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>, <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> <span style=\"line-height: 1.6; color: #a71d5d;\">int</span>[] &#123;<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>&#125;));<br><span style=\"line-height: 1.6; display: none; color: #969896;\">20.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">21.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">private</span> <span style=\"line-height: 1.6; color: #66d9ef;\">int</span> <span style=\"line-height: 1.6; color: #795da3;\">sum</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(<span style=\"line-height: 1.6; color: #66d9ef;\">int</span> value, <span style=\"line-height: 1.6; color: #66d9ef;\">int</span>[] values)</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">22.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">int</span> sum= <span style=\"line-height: 1.6; color: #ae81ff;\">0</span>; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">23.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">for</span> ( <span style=\"line-height: 1.6; color: #a71d5d;\">int</span> i= <span style=\"line-height: 1.6; color: #ae81ff;\">0</span>; i&lt;values.length; i++)<br><span style=\"line-height: 1.6; display: none; color: #969896;\">24.</span>        sum += values[i];<br><span style=\"line-height: 1.6; display: none; color: #969896;\">25.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">return</span> sum;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">26.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">27.</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">28.</span><span style=\"line-height: 1.6; color: #969896;\">// 4. delete unnecessary code</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">29.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">testSum</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">30.</span>    assertEquals(<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>, sum(<span style=\"line-height: 1.6; color: #a71d5d;\">new</span> <span style=\"line-height: 1.6; color: #a71d5d;\">int</span>[] &#123;<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>&#125;));<br><span style=\"line-height: 1.6; display: none; color: #969896;\">31.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">32.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">private</span> <span style=\"line-height: 1.6; color: #66d9ef;\">int</span> <span style=\"line-height: 1.6; color: #795da3;\">sum</span><span style=\"line-height: 1.6; color: #f8f8f2;\">( <span style=\"line-height: 1.6; color: #66d9ef;\">int</span>[] values)</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">33.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">int</span> sum= <span style=\"line-height: 1.6; color: #ae81ff;\">0</span>; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">34.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">for</span> (<span style=\"line-height: 1.6; color: #a71d5d;\">int</span> i= <span style=\"line-height: 1.6; color: #ae81ff;\">0</span>; i&lt;values.length; i++)<br><span style=\"line-height: 1.6; display: none; color: #969896;\">35.</span>        sum += values[i];<br><span style=\"line-height: 1.6; display: none; color: #969896;\">36.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">return</span> sum; sum;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">37.</span>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7EC6;&#x7EC6;&#x4F53;&#x4F1A;&#x5176;&#x95F4;&#x7684;&#x5DEE;&#x522B;&#x5427;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"chapter-29-xunit-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 29. xUnit Patterns</a></h2></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"assertion\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Assertion</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">How do you check that tests worked correctly?  <br>Write boolean expressions that automate your judgment about whether the code worked.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4F5C;&#x8005;&#x5728;&#x8FD9;&#x4E00;&#x7AE0;&#x53C8;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x5F88;&#x6709;&#x6307;&#x5BFC;&#x610F;&#x4E49;&#x7684;&#x89C2;&#x70B9;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">&#x5C3D;&#x91CF;&#x4E0D;&#x8981;&#x505A;&#x767D;&#x76D2;&#x6D4B;&#x8BD5;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x505A;&#xFF0C;&#x8BF4;&#x660E;&#x4F60;&#x7684;&#x8BBE;&#x8BA1;&#x6709;&#x95EE;&#x9898;</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"fixture\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Fixture</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x91CC;&#x4F5C;&#x8005;&#x629B;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x6D4B;&#x8BD5;&#x6709;&#x7C7B;&#x4F3C;&#x7684;&#x4EE3;&#x7801;&#x600E;&#x4E48;&#x529E;&#xFF1F;&#x4E24;&#x4E2A;&#x9009;&#x62E9;&#xFF1A;</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">test case&#x7C7B;&#x5B9A;&#x4E49;&#x4E2D;&#x62BD;&#x8C61;&#x51FA;&#x7C7B;&#x4F3C;setUp&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x6765;&#x505A;&#x91CD;&#x590D;&#x7684;&#x5DE5;&#x4F5C;</li><li style=\"line-height: 1.6;\">&#x6216;&#x8005;&#x7528;&#x7C7B;&#x4F3C;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;&#x7684;&#x4E1C;&#x897F;&#x6765;&#x4E3A;&#x6240;&#x6709;&#x9700;&#x8981;&#x7684;&#x6D4B;&#x8BD5;&#x751F;&#x6210;fixture</li></ol><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x65B9;&#x6CD5;1&#x6709;&#x65F6;&#x5019;&#x66F4;&#x7B26;&#x5408;DRY&#x539F;&#x5219;&#xFF0C;&#x4F46;&#x5B83;&#x7684;&#x7F3A;&#x70B9;&#x662F;&#xFF0C;&#x4F60;&#x8981;&#x8BB0;&#x4F4F;setUp&#x91CC;&#x9762;&#x5230;&#x5E95;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#x3002;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x90FD;&#x53EF;&#x4EE5;&#xFF0C;&#x9009;&#x62E9;&#x66F4;&#x5408;&#x9002;&#x7684;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"external-fixture\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">External Fixture</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6240;&#x8C13;&#x7684;&#x5916;&#x90E8;fixture&#xFF0C;&#x5C31;&#x662F;&#x8981;&#x4FDD;&#x8BC1;&#x6D4B;&#x8BD5;&#x80FD;&#x6062;&#x590D;&#x73AF;&#x5883;&#x914D;&#x7F6E;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">&#x5728;&#x6240;&#x6709;&#x6D4B;&#x8BD5;&#x5F00;&#x59CB;&#x524D;&#x8C03;setUp&#xFF0C;&#x6240;&#x6709;&#x6D4B;&#x8BD5;&#x7ED3;&#x675F;&#x540E;&#x8C03;tearDown&#x3002;&#x8FD9;&#x5C31;&#x662F;External Fixture</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"test-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Test Method</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E00;&#x8282;&#x9488;&#x5BF9;&#x5982;&#x4F55;&#x5199;&#x6D4B;&#x8BD5;&#x65B9;&#x6CD5;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E9B;&#x5EFA;&#x8BAE;&#x3002;</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">hierarchy <br><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">Module <span style=\"line-height: 1.6;\"><span style=\"word-wrap: normal; vertical-align: middle; font-style: normal; font-weight: normal; margin: 0; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; padding: 0; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; line-height: 1.6; display: inline-block; font-size: 100%;\"><span style=\"line-height: 1.6; display: inline-block; white-space: nowrap; padding: 1px 0px;\"><span style=\"line-height: 1.6; display: inline-block; position: relative; width: 2.169ex; height: 0.964ex; vertical-align: 0.12ex;\"><span style=\"line-height: 1.6;\"><img class=\"enMedia\" src=\"/images/Test-Driven Development/SVGc430acae44d6c4874bd268c48184baa7\" hash=\"f4a4c9b133ba2d97b64f72acf87add23\" align alt longdesc width=\"15.75\" height=\"8.75\" border hspace vspace usemap style=\"border: 0; vertical-align: middle; max-width: 100%; margin-top: 0; margin-bottom: 0;\" title lang xml:lang dir></span></span></span></span></span> Framework</li><li style=\"line-height: 1.6;\">Class <span style=\"line-height: 1.6;\"><span style=\"word-wrap: normal; vertical-align: middle; font-style: normal; font-weight: normal; margin: 0; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; padding: 0; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; line-height: 1.6; display: inline-block; font-size: 100%;\"><span style=\"line-height: 1.6; display: inline-block; white-space: nowrap; padding: 1px 0px;\"><span style=\"line-height: 1.6; display: inline-block; position: relative; width: 2.169ex; height: 0.964ex; vertical-align: 0.12ex;\"><span style=\"line-height: 1.6;\"><img class=\"enMedia\" src=\"/images/Test-Driven Development/SVGc430acae44d6c4874bd268c48184baa7\" hash=\"f4a4c9b133ba2d97b64f72acf87add23\" align alt longdesc width=\"15.75\" height=\"8.75\" border hspace vspace usemap style=\"border: 0; vertical-align: middle; max-width: 100%; margin-top: 0; margin-bottom: 0;\" title lang xml:lang dir></span></span></span></span></span> internal fixture</li><li style=\"line-height: 1.6;\">Method <span style=\"line-height: 1.6;\"><span style=\"word-wrap: normal; vertical-align: middle; font-style: normal; font-weight: normal; margin: 0; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; padding: 0; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; line-height: 1.6; display: inline-block; font-size: 100%;\"><span style=\"line-height: 1.6; display: inline-block; white-space: nowrap; padding: 1px 0px;\"><span style=\"line-height: 1.6; display: inline-block; position: relative; width: 2.169ex; height: 0.964ex; vertical-align: 0.12ex;\"><span style=\"line-height: 1.6;\"><img class=\"enMedia\" src=\"/images/Test-Driven Development/SVGc430acae44d6c4874bd268c48184baa7\" hash=\"f4a4c9b133ba2d97b64f72acf87add23\" align alt longdesc width=\"15.75\" height=\"8.75\" border hspace vspace usemap style=\"border: 0; vertical-align: middle; max-width: 100%; margin-top: 0; margin-bottom: 0;\" title lang xml:lang dir></span></span></span></span></span> test case</li></ul></li><li style=\"line-height: 1.6;\">&#x540D;&#x5B57;&#x957F;&#x6CA1;&#x5173;&#x7CFB;&#xFF0C;&#x8981;&#x8BA9;&#x4EE5;&#x540E;&#x7684;&#x8BFB;&#x8005;&#x6709;&#x8DB3;&#x591F;&#x7684;&#x7EBF;&#x7D22;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5199;&#x8FD9;&#x4E2A;test</li><li style=\"line-height: 1.6;\">&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x8981;&#x591F;&#x76F4;&#x89C9;&#xFF0C;&#x8981;&#x591F;&#x7B80;&#x6D01;&#xFF08;&#x6700;&#x77ED;3&#x884C;&#xFF09; </li><li style=\"line-height: 1.6;\">&#x6CE8;&#x91CA;&#x91CC;&#x5199;outline&#xFF0C;&#x4E00;&#x9897;&#x661F;&#x8868;&#x793A;&#x4E00;&#x7EA7;&#xFF0C;&#x4F5C;&#x8005;&#x8BF4;&#x4ED6;&#x4E00;&#x822C;&#x5199;2-3&#x7EA7;outline</li></ol></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #969896;\">/* Adding to tuple spaces. */</span> <br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span><span style=\"line-height: 1.6; color: #969896;\">/* Taking from tuple spaces. */</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span><span style=\"line-height: 1.6; color: #969896;\">/** Taking a non-existent tuple. **/</span> <br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span><span style=\"line-height: 1.6; color: #969896;\">/** Taking an existing tuple. **/</span> <br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span><span style=\"line-height: 1.6; color: #969896;\">/** Taking multiple tuples. **/</span> <br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span><span style=\"line-height: 1.6; color: #969896;\">/* Reading from tuple space. */</span><br></code></pre></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"exception-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Exception Test</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E00;&#x8282;&#x8BF4;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x5F85;&#x6D4B;&#x7684;&#x51FD;&#x6570;&#x9700;&#x8981;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;&#x7528;&#x5982;&#x4E0B;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">testMissingRate</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">try</span> &#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>        exchange.findRate(<span style=\"line-height: 1.6; color: #df5000;\">&quot;USD&quot;</span>, <span style=\"line-height: 1.6; color: #df5000;\">&quot;GBP&quot;</span>); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>        fail(); <span style=\"line-height: 1.6; color: #969896;\">// &#x5982;&#x679C;&#x6CA1;&#x629B;&#x5F02;&#x5E38;&#x5C31;fail</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span>    &#125; <span style=\"line-height: 1.6; color: #a71d5d;\">catch</span> (IllegalArgumentException expected) &#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>    &#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span>&#125;<br></code></pre></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"all-tests\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">All Tests</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">How do you run all tests together? Make a suite of all the suites&#x2014;one for each package, and one aggregating the package tests for the whole application.</p></blockquote></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #a71d5d;\">public</span> <span style=\"line-height: 1.6;\"><span style=\"line-height: 1.6; color: #66d9ef;\">class</span> <span style=\"line-height: 1.6; color: #a6e22e; font-style: italic;\">AllTests</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span>    <span style=\"line-height: 1.6; color: #969896;\">// &#x8FD9;&#x91CC;&#x6709;&#x4E2A;main&#xFF0C;&#x65B9;&#x4FBF;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x7A0B;&#x5E8F;&#x5F00;&#x59CB;&#x6D4B;&#x8BD5;</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">static</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">main</span><span style=\"line-height: 1.6; color: #f8f8f2;\">(String[] args)</span> </span>&#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>        junit.swingui.TestRunner.run(AllTests.class); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span>    &#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>    <span style=\"line-height: 1.6; color: #969896;\">// &#x8FD9;&#x91CC;&#x6709;&#x4E2A;suite&#x5305;&#x542B;&#x4E86;&#x6240;&#x6709;test case</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span>    <span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">static</span> Test <span style=\"line-height: 1.6; color: #795da3;\">suite</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">8.</span>        TestSuite result= <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> TestSuite(<span style=\"line-height: 1.6; color: #df5000;\">&quot;TFD tests&quot;</span>); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">9.</span>        result.addTestSuite(MoneyTest.class); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">10.</span>        result.addTestSuite(ExchangeTest.class); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">11.</span>        result.addTestSuite(IdentityRateTest.class); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">12.</span>        <span style=\"line-height: 1.6; color: #a71d5d;\">return</span> result;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">13.</span>    &#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">14.</span>&#125;<br></code></pre></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"chapter-30-design-patterns\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 30. Design Patterns</a></h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4F5C;&#x8005;&#x5728;&#x8FD9;&#x4E00;&#x7AE0;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E9B;TDD&#x4E2D;&#x4F1A;&#x7528;&#x5230;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x3002;&#x6709;&#x4E9B;&#x662F;&#x5199;&#x6D4B;&#x8BD5;&#x65F6;&#x7528;&#x7684;&#xFF0C;&#x6709;&#x7684;&#x662F;&#x91CD;&#x6784;&#x65F6;&#x7528;&#x7684;&#xFF0C;&#x6709;&#x7684;&#x4E24;&#x8005;&#x7686;&#x53EF;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x672C;&#x7AE0;&#x6240;&#x6709;&#x6A21;&#x5F0F;&#x7684;&#x603B;&#x7EB2;&#x3002; <br><img class=\"enMedia\" src=\"/images/Test-Driven Development/1456036251528.png\" hash=\"402527467e6ed105cea7216a79760204\" align alt longdesc width height border hspace vspace usemap style=\"border: 0; vertical-align: middle; max-width: 100%;\" title lang xml:lang dir></p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"command\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Command</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">What do you do when you need the invocation of a computation to be more complicated than a simple method call? <br>Make an object for the computation and invoke it.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x91CC;&#x6240;&#x8BF4;&#x7684;&#x547D;&#x4EE4;&#x662F;&#x8BF4;&#xFF0C;&#x628A;&#x8981;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;object&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;&#x90A3;&#x4E2A;object</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"value-object\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Value Object</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x628A;&#x4E00;&#x4E9B;&#x5E38;&#x91CF;&#x53C2;&#x6570;&#x505A;&#x6210;object&#x6765;&#x4F20;&#x9012;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">When implementing a Value Object, every operation has to return a fresh object,  <br>All Value Objects have to implement equality </p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"null-object\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Null Object</a></h3></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">boolean</span> <span style=\"line-height: 1.6; color: #795da3;\">setReadOnly</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span>    SecurityManager guard = System.getSecurityManager(); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">if</span> (guard != <span style=\"line-height: 1.6; color: #a71d5d;\">null</span>) &#123; ) &#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>        guard.canWrite(path);<br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span>    &#125; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">return</span> fileSystem.setReadOnly(<span style=\"line-height: 1.6; color: #a71d5d;\">this</span>);<br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E0A;&#x9762;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;getSecurityManager&#x5728;&#x4E0D;&#x6210;&#x529F;&#x65F6;&#x8FD4;&#x56DE;Null&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;&#x8005;&#x518D;&#x5224;&#x65AD;&#x8FD4;&#x56DE;&#x503C;&#x4EE5;&#x51B3;&#x5B9A;&#x4F1A;&#x4E0D;&#x4F1A;&#x7528;&#x7A7A;&#x6307;&#x9488;&#x6765;&#x8C03;&#x7528;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x3002; <br>&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x5E38;&#x89C1;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x4E0D;&#x597D;&#x7684;&#x662F;&#xFF0C;&#x901A;&#x5E38;&#x8FD9;&#x79CD;&#x5224;&#x65AD;&#x4F1A;&#x975E;&#x5E38;&#x975E;&#x5E38;&#x591A;&#xFF0C;&#x800C;&#x4E14;&#x7ED9;&#x4EBA;&#x4E00;&#x79CD;&#x201C;&#x4F1A;&#x4E0D;&#x4F1A;&#x6709;&#x54EA;&#x91CC;&#x6CA1;&#x5224;&#x65AD;&#xFF0C;&#x4EE5;&#x540E;&#x4F1A;&#x5BFC;&#x81F4;crash&#xFF1F;&#x201D;&#x7684;&#x62C5;&#x5FE7;&#x3002; <br>Null Object&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x5C31;&#x662F;&#x8BA9;getSecurityManager&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;object&#x6765;&#x53D6;&#x4EE3;Null&#xFF0C;&#x8FD9;&#x6837;&#x8BA9;&#x6240;&#x6709;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x7EDF;&#x4E00;&#xFF0C;&#x4EE5;&#x51CF;&#x5C11;&#x91CD;&#x590D;&#x4EE3;&#x7801;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"template-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Template Method</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6A21;&#x677F;&#x65B9;&#x6CD5;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">When you find two variants of a sequence in two subclasses, you need to gradually move them closer together. Once you&#x2019;ve extracted the parts that are different from other methods, what you are left with is the Template Method. </p></blockquote></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #969896;\">// TestCase</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">runBare</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> <span style=\"line-height: 1.6; color: #66d9ef;\">throws</span> Throwable </span>&#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    setUp(); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">try</span> &#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span>        runTest();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>    &#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">finally</span> &#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">8.</span>        tearDown();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">9.</span>    &#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">10.</span>&#125;<br></code></pre></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"pluggable-object\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Pluggable Object</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E2D;&#x6587;&#x8BD1;&#x540D;&#x4E3A;&#x63D2;&#x5165;&#x5F0F;&#x5BF9;&#x8C61;&#x3002;&#x5F88;&#x96BE;&#x7406;&#x89E3;&#x54EA;&#x91CC;&#x6709;&#x8FD9;&#x4E2A;&#x6240;&#x8C13;&#x7684;&#x201C;&#x63D2;&#x5165;&#x201D;&#x3002;&#x8FD9;&#x4E2A;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x6838;&#x5FC3;&#x7684;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x6D88;&#x9664;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">if...else...</code>&#x7684;&#x60C5;&#x51B5;&#x3002; <br>&#x770B;&#x4F5C;&#x8005;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x89E3;&#x91CA;&#x7684;&#x5F88;&#x6E05;&#x695A;&#xFF1A;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #969896;\">// Without Pluggable Object</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span>Figure selected; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">mouseDown</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>    selected= findFigure();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">if</span> (selected != <span style=\"line-height: 1.6; color: #a71d5d;\">null</span>) <span style=\"line-height: 1.6; color: #969896;\">// &#x5230;&#x5904;&#x662F;null&#x5224;&#x65AD;</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>        select(selected); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">8.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">mouseMove</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">9.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">if</span> (selected != <span style=\"line-height: 1.6; color: #a71d5d;\">null</span>)<br><span style=\"line-height: 1.6; display: none; color: #969896;\">10.</span>        move(selected); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">11.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">else</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">12.</span>        moveSelectionRectangle(); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">13.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">14.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">mouseUp</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">15.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">if</span> (selected == <span style=\"line-height: 1.6; color: #a71d5d;\">null</span>)<br><span style=\"line-height: 1.6; display: none; color: #969896;\">16.</span>        selectAll();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">17.</span>&#125; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">18.</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">19.</span><span style=\"line-height: 1.6; color: #969896;\">// With Pluggable Object</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">20.</span>SelectionMode mode;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">21.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">mouseDown</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">22.</span>    selected= findFigure();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">23.</span>    <span style=\"line-height: 1.6; color: #969896;\">// &#x5168;&#x90E8;&#x5F52;&#x7ED3;&#x5230;mode&#x5B50;&#x7C7B;&#x91CC;&#x9762;&#x53BB;&#x5904;&#x7406;</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">24.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">if</span> (selected != <span style=\"line-height: 1.6; color: #a71d5d;\">null</span>)<br><span style=\"line-height: 1.6; display: none; color: #969896;\">25.</span>        mode= SingleSelection(selected);<br><span style=\"line-height: 1.6; display: none; color: #969896;\">26.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">else</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">27.</span>        mode= MultipleSelection();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">28.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">29.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">mouseMove</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">30.</span>    mode.mouseMove();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">31.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">32.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">mouseUp</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">33.</span>    mode.mouseUp();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">34.</span>&#125;<br></code></pre></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"pluggable-selector\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Pluggable Selector</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E00;&#x8282;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x548C;&#x4E0A;&#x4E00;&#x8282;&#x7684;&#x6781;&#x4E3A;&#x7C7B;&#x4F3C;&#x3002;&#x8FD9;&#x6B21;&#x8981;&#x5904;&#x7406;&#x6389;&#x7684;&#x662F;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">switch...case...</code>&#x800C;&#x53C8;&#x4E0D;&#x7528;&#x5B50;&#x7C7B;&#x7EE7;&#x627F;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x52A8;&#x6001;&#x8C03;&#x7528;&#x3002;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x53EB;&#x53CD;&#x5C04;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">&#x53CD;&#x5C04;&#xFF1A;&#x901A;&#x8FC7;&#x81EA;&#x8EAB;&#x7684;&#x5C5E;&#x6027;&#xFF08;&#x5982;&#x7C7B;&#x540D;&#xFF0C;&#x65B9;&#x6CD5;&#x540D;&#xFF09;&#x6765;&#x505A;&#x76F8;&#x5173;&#x903B;&#x8F91;</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x540C;&#x6837;&#x770B;&#x4F5C;&#x8005;&#x7684;&#x4F8B;&#x5B50;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">print</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span>    Method runMethod= getClass().getMethod(printMessage, <span style=\"line-height: 1.6; color: #a71d5d;\">null</span>);<br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    runMethod.invoke(<span style=\"line-height: 1.6; color: #a71d5d;\">this</span>, <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Class[<span style=\"line-height: 1.6; color: #ae81ff;\">0</span>]);<br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x770B;&#x5230;&#x4E86;&#x6CA1;getClass&#xFF0C;getMethod&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x53CD;&#x5C04;&#x3002;&#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x65E2;&#x4E0D;&#x9700;&#x8981;switch&#x6765;&#x8C03;&#x7528;&#x4E0D;&#x540C;&#x7684;printxxx&#x51FD;&#x6570;(printHtml, printXml&#x2026;)&#xFF0C;&#x4E5F;&#x4E0D;&#x9700;&#x8981;&#x5B9A;&#x4E49;&#x5B50;&#x7C7B;&#x6765;&#x8C03;&#x7528;&#x4E0D;&#x540C;&#x7684;print&#x51FD;&#x6570;&#x3002; <br>&#x4F5C;&#x8005;&#x5728;&#x672C;&#x8282;&#x6700;&#x540E;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x6BB5;&#x5FE0;&#x544A;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">Pluggable Selector can definitely be overused. The biggest problem with it is tracing code to see whether a method is invoked. Use Pluggable Selector only when you are cleaning up a fairly straightforward situation in which each of a bunch of <strong style=\"font-weight: bold; line-height: 1.6;\">subclasses has only one method.</strong></p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"factory-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Factory Method</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4F5C;&#x8005;&#x8BF4;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x63D0;&#x4F9B;&#x4E86;&#x7075;&#x6D3B;&#x6027;&#x3002;&#x6211;&#x662F;&#x6CA1;&#x770B;&#x51FA;&#x6765;&#x3002;&#x5BF9;&#x6BD4;&#x4E0B;&#x9762;&#x4E24;&#x6BB5;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x91CC;&#x589E;&#x52A0;&#x4E86;&#x7075;&#x6D3B;&#x6027;&#xFF1F;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">testMultiplication</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span>    Dollar five= Dollar five= <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Dollar(<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>);<br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    assertEquals(<span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Dollar(<span style=\"line-height: 1.6; color: #ae81ff;\">10</span>), five.times(<span style=\"line-height: 1.6; color: #ae81ff;\">2</span>)); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>    assertEquals(<span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Dollar(<span style=\"line-height: 1.6; color: #ae81ff;\">15</span>), five.times(<span style=\"line-height: 1.6; color: #ae81ff;\">3</span>));<br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">public</span> <span style=\"line-height: 1.6; color: #66d9ef;\">void</span> <span style=\"line-height: 1.6; color: #795da3;\">testMultiplication</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">8.</span>    Dollar five = Money.dollar(<span style=\"line-height: 1.6; color: #ae81ff;\">5</span>); <span style=\"line-height: 1.6; color: #969896;\">// &#x5DE5;&#x5382;&#x65B9;&#x6CD5;</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">9.</span>    assertEquals(<span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Dollar(<span style=\"line-height: 1.6; color: #ae81ff;\">10</span>), five.times(<span style=\"line-height: 1.6; color: #ae81ff;\">2</span>)); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">10.</span>    assertEquals(<span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Dollar(<span style=\"line-height: 1.6; color: #ae81ff;\">15</span>), five.times(<span style=\"line-height: 1.6; color: #ae81ff;\">3</span>)); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">11.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">12.</span><span style=\"line-height: 1.6; color: #969896;\">// Money</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">13.</span><span style=\"line-height: 1.6; color: #f92672;\"><span style=\"line-height: 1.6; color: #66d9ef;\">static</span> Dollar <span style=\"line-height: 1.6; color: #795da3;\">dollar</span><span style=\"line-height: 1.6; color: #f8f8f2;\">( Dollar dollar(<span style=\"line-height: 1.6; color: #66d9ef;\">int</span> amount)</span> </span>&#123; <br><span style=\"line-height: 1.6; display: none; color: #969896;\">14.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">return</span> <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Dollar(amount);<br><span style=\"line-height: 1.6; display: none; color: #969896;\">15.</span>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4F5C;&#x8005;&#x6700;&#x540E;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x70B9;&#x5FE0;&#x544A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">You have to remember that the method is really creating an object, even though it doesn&#x2019;t look like a constructor. Use Factory Method only when you need the flexibility it creates. </p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"imposter\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Imposter</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E2D;&#x6587;&#x8BD1;&#x540D;&#x4E3A;&#x5192;&#x540D;&#x9876;&#x66FF;&#x3002;&#x6839;&#x636E;&#x6587;&#x4E2D;&#x7684;&#x9610;&#x8FF0;&#xFF0C;&#x6211;&#x7406;&#x89E3;&#x8FD9;&#x91CC;&#x8BB2;&#x7684;&#x4E0D;&#x662F;&#x4E00;&#x79CD;<strong style=\"font-weight: bold; line-height: 1.6;\">&#x8BBE;&#x8BA1;</strong>&#x6A21;&#x5F0F;&#xFF0C;&#x800C;&#x53EA;&#x662F;&#x4E00;&#x79CD;&#x6A21;&#x5F0F;&#xFF0C;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x60C5;&#x51B5;&#x3002;&#x6307;&#x7684;&#x662F;&#x5982;&#x679C;&#x67D0;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#xFF0C;&#x53EA;&#x5C06;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x540D;&#x5B57;&#xFF08;&#x7C7B;&#x3001;&#x65B9;&#x6CD5;&#x6216;&#x8005;&#x53D8;&#x91CF;&#x7B49;&#x7B49;&#xFF09;&#x66FF;&#x6362;&#x6210;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x540D;&#x5B57;&#xFF0C;&#x5C31;&#x80FD;&#x5F97;&#x5230;&#x4E00;&#x6BB5;&#x65B0;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x79F0;&#x4E3A;&#x5192;&#x540D;&#x9876;&#x66FF;&#x3002;&#x53D1;&#x73B0;&#x53EF;&#x4EE5;Imposter&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x53D1;&#x73B0;&#x91CD;&#x590D;&#x3002;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #969896;\">// &#x4E0B;&#x9762;&#x8FD9;&#x4E24;&#x6BB5;&#x4EE3;&#x7801;&#x5C31;&#x53EA;&#x662F;&#x5C06;RectangleFigure&#x6362;&#x6210;OvalFigure&#xFF0C;&#x6B64;&#x662F;&#x4E3A;Imposter&#x5192;&#x540D;&#x9876;&#x66FF;&#x3002;</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span>testRectangle() &#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    Drawing d= <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Drawing();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>    d.addFigure(<span style=\"line-height: 1.6; color: #a71d5d;\">new</span> RectangleFigure(<span style=\"line-height: 1.6; color: #ae81ff;\">0</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">10</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">50</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">100</span>)); RectangleFigure(<span style=\"line-height: 1.6; color: #ae81ff;\">0</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">10</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">50</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">100</span>));<br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span>    RecordingMedium brush= <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> RecordingMedium(); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>    d.display(brush); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span>    assertEquals(<span style=\"line-height: 1.6; color: #df5000;\">&quot;rectangle 0 10 50 100\\n&quot;</span>, brush.log());<br><span style=\"line-height: 1.6; display: none; color: #969896;\">8.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">9.</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">10.</span>testOval() &#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">11.</span>    Drawing d= <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> Drawing();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">12.</span>    d.addFigure(<span style=\"line-height: 1.6; color: #a71d5d;\">new</span> OvalFigure(<span style=\"line-height: 1.6; color: #ae81ff;\">0</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">10</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">50</span>, <span style=\"line-height: 1.6; color: #ae81ff;\">100</span>)); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">13.</span>    RecordingMedium brush= <span style=\"line-height: 1.6; color: #a71d5d;\">new</span> RecordingMedium(); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">14.</span>    d.display(brush);<br><span style=\"line-height: 1.6; display: none; color: #969896;\">15.</span>    assertEquals(<span style=\"line-height: 1.6; color: #df5000;\">&quot;oval 0 10 50 100\\n&quot;</span>, brush.log()); <br><span style=\"line-height: 1.6; display: none; color: #969896;\">16.</span>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4F5C;&#x8005;&#x8FD8;&#x63D0;&#x5230;&#x53E6;&#x5916;&#x4E24;&#x4E2A;&#x5728;&#x91CD;&#x6784;&#x4E2D;&#x7ECF;&#x5E38;&#x7528;&#x5230;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF0C;&#x672C;&#x8D28;&#x5176;&#x5B9E;&#x5C31;&#x662F;Imposter &#x2014;&#x2014; Null Object &amp; Composite&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"composite\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Composite</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6839;&#x636E;&#x4E0A;&#x4E00;&#x7AE0;&#x4F5C;&#x8005;&#x7684;&#x89C2;&#x70B9;&#xFF0C;&#x7EC4;&#x5408;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E00;&#x79CD;&#x5192;&#x540D;&#x9876;&#x66FF;&#x3002;&#x4F5C;&#x8005;&#x5728;&#x672C;&#x8282;&#x5F00;&#x5934;&#x8BF4;&#x4E86;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">How do you implement <strong style=\"font-weight: bold; line-height: 1.6;\">an object</strong> whose behavior is the composition of the behavior of a list of other objects? Make it an <strong style=\"font-weight: bold; line-height: 1.6;\">Imposter</strong> for <strong style=\"font-weight: bold; line-height: 1.6;\">the component objects</strong>.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8BA9;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x79F0;&#x4E3A;&#x7EC4;&#x6210;&#x4ED6;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x5192;&#x540D;&#x9876;&#x66FF;&#x8005;&#x3002;&#x8BF4;&#x8D77;&#x6765;&#x5F88;&#x62D7;&#x53E3;&#x3002;&#x770B;&#x4F8B;&#x5B50;&#xFF1A;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span><span style=\"line-height: 1.6; color: #969896;\">// Transaction</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span>Transaction(Money value) &#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">this</span>.value= value;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>&#125;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span><span style=\"line-height: 1.6; color: #969896;\">// Account</span><br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>Transaction transactions[];<br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span><span style=\"line-height: 1.6; color: #f92672;\">Money <span style=\"line-height: 1.6; color: #795da3;\">balance</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">8.</span>    Money sum= Money.zero();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">9.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">for</span> (<span style=\"line-height: 1.6; color: #a71d5d;\">int</span> i= <span style=\"line-height: 1.6; color: #ae81ff;\">0</span>; i &lt; transactions.length; i++) <br><span style=\"line-height: 1.6; display: none; color: #969896;\">10.</span>        sum= sum.plus(transactions[i].value);<br><span style=\"line-height: 1.6; display: none; color: #969896;\">11.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">return</span> sum;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">12.</span>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E2A;&#x5199;&#x6CD5;&#x7684;&#x7F3A;&#x70B9;&#x662F;&#xFF0C;&#x5F53;&#x8981;&#x7B97;OverallAccount&#x65F6;&#xFF0C;&#x6CA1;&#x8F99;&#x4E86;&#xFF0C;&#x8981;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x65B0;&#x7C7B;&#x6765;&#x5904;&#x7406;&#x3002;&#x4E00;&#x4E2A;OverallAccount&#x662F;&#x4E00;&#x7EC4;Account&#x3002;&#x4F46;OverallAccount&#x5176;&#x5B9E;&#x8981;&#x505A;&#x7684;&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x7D2F;&#x52A0;&#xFF0C;&#x548C;Account&#x505A;&#x7684;&#x5E76;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x91CD;&#x590D;&#x3002; <br>&#x89E3;&#x51B3;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x6240;&#x8C13;&#x7684;Composite&#x3002;&#x628A;&#x8981;&#x7D2F;&#x52A0;&#x7684;&#x4E1C;&#x897F;&#x62BD;&#x8C61;&#x51FA;&#x6765;&#x79F0;&#x4E3A;Holdings&#xFF0C;Account&#x7D2F;&#x52A0;&#x7684;&#x662F;Holdings&#xFF0C;OverallAccount&#x7D2F;&#x52A0;&#x7684;&#x4E5F;&#x662F;Holdings&#x3002;</p></div><div style=\"line-height: 1.6;\"><pre style=\"font-family: &apos;Source Code Pro&apos;,monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;\"><code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #333333; display: block; background: white; overflow-x: auto; padding: 1.3em 2em;\"><span style=\"line-height: 1.6; display: none; color: #969896;\">1.</span>Holding holdings[];<br><span style=\"line-height: 1.6; display: none; color: #969896;\">2.</span><span style=\"line-height: 1.6; color: #f92672;\">Money <span style=\"line-height: 1.6; color: #795da3;\">balance</span><span style=\"line-height: 1.6; color: #f8f8f2;\">()</span> </span>&#123;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">3.</span>    Money sum= Money.zero();<br><span style=\"line-height: 1.6; display: none; color: #969896;\">4.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">for</span> ( (<span style=\"line-height: 1.6; color: #a71d5d;\">int</span> i= <span style=\"line-height: 1.6; color: #ae81ff;\">0</span>; i &lt; holdings.length; i++)<br><span style=\"line-height: 1.6; display: none; color: #969896;\">5.</span>    sum= sum.plus(holdings[i].balance());<br><span style=\"line-height: 1.6; display: none; color: #969896;\">6.</span>    <span style=\"line-height: 1.6; color: #a71d5d;\">return</span> sum;<br><span style=\"line-height: 1.6; display: none; color: #969896;\">7.</span>&#125;<br></code></pre><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5199;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4ECD;&#x7136;&#x4E0D;&#x662F;&#x7279;&#x522B;&#x660E;&#x767D;&#x4F55;&#x4E3A;Composite&#xFF08;&#x62FC;&#x5408;&#xFF0C;&#x590D;&#x5408;&#x7684;&#x610F;&#x601D;&#xFF09;&#x3002;&#x4F46;&#x6211;&#x4EEC;&#x662F;&#x7AD9;&#x5728;&#x5DE8;&#x4EBA;&#x7684;&#x80A9;&#x8180;&#x4E0A;&#xFF0C;&#x5BF9;&#x6BD4;&#x9605;&#x8BFB;&#x4E86;&#x4E2D;&#x6587;&#x8BD1;&#x672C;&#x540E;&#x6709;&#x4E86;&#x4E00;&#x70B9;&#x70B9;&#x611F;&#x89C9;&#x3002;&#x8FD9;&#x4E2A;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x7684;&#x4E2D;&#x6587;&#x8BD1;&#x540D;&#x4E3A;-<strong style=\"font-weight: bold; line-height: 1.6;\">&#x9012;&#x5F52;&#x7EC4;&#x5408;</strong>&#x3002;&#x6240;&#x8C13;&#x9012;&#x5F52;&#xFF0C;&#x5E94;&#x5F53;&#x6307;&#x7684;&#x662F;&#xFF0C;&#x901A;&#x8FC7;&#x6982;&#x5FF5;&#x4E0A;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x5C06;&#x4E00;&#x4E2A;&#x5927;&#x7684;&#x6DF7;&#x5408;&#x7C7B;&#x5199;&#x6210;&#x4E00;&#x4E9B;&#x66F4;&#x62BD;&#x8C61;&#x7684;&#x6982;&#x5FF5;&#x7684;&#x7EC4;&#x5408;&#x3002;&#x4F8B;&#x5982;: </p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">OvreallAccount &lt;- Account &lt;- Transactions <br>OverallAccount &lt;- Holding &amp; Account &lt;-Holding</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x901A;&#x8FC7;&#x9012;&#x5F52;&#x5730;&#x5C06;OverallAccount&#x5192;&#x540D;&#x9876;&#x66FF;&#x6210;Holding&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;OverallAccount&#x6210;&#x4E3A;&#x4E00;&#x4E2A;Account&#x6765;&#x8FBE;&#x5230;&#x6D88;&#x9664;&#x91CD;&#x590D;&#x3002; <br>&#x4F5C;&#x8005;&#x5728;&#x672C;&#x8282;&#x6700;&#x540E;&#x7ED9;&#x51FA;&#x4E86;&#x4F55;&#x65F6;&#x4F7F;&#x7528;Composite&#x7684;&#x5EFA;&#x8BAE;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">As is obvious from this discussion, I&#x2019;m still not able to articulate how to guess when a collection of objects is just a collection of objects and when you really have a Composite. The good news is, since you&#x2019;re getting good at refactoring, <b style=\"font-weight: bold;\"><font color=\"IndianRed\" style=\"line-height: 1.6;\">the moment the duplication appears</font></b>, you can introduce Composite and watch program complexity disappear.</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"collecting-parameter\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Collecting Parameter</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x770B;&#x4E0D;&#x61C2;&#xFF0C;&#x4E0D;&#x77E5;&#x6240;&#x4E91;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"singleton\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Singleton</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x5F88;&#x8457;&#x540D;&#x7684;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#xFF0C;&#x7ECF;&#x5E38;&#x4F1A;&#x7528;&#x5230;&#x3002;&#x4F5C;&#x8005;&#x6CA1;&#x6709;&#x8BE6;&#x52A0;&#x9610;&#x91CA;&#xFF0C;&#x53EA;&#x662F;&#x544A;&#x8BEB;&#x8BFB;&#x8005;&#x4E0D;&#x8981;&#x7528;&#x5168;&#x5C40;&#x53D8;&#x91CF;(global variable)&#x3002;&#x6211;&#x731C;&#x4F5C;&#x8005;&#x7684;&#x610F;&#x601D;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x7528;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#xFF0C;&#x5C31;&#x7528;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x7684;&#x7C7B;&#x5BF9;&#x8C61;&#x5427;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"chapter-31-refactoring\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 31. Refactoring</a></h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5728;TDD&#x4E2D;&#xFF0C;&#x91CD;&#x6784;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#xFF0C;&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x6D4B;&#x8BD5;&#x901A;&#x8FC7;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x964D;&#x4F4E;&#x91CD;&#x590D;&#xFF08;code&#x4E4B;&#x95F4;&#xFF0C;code&#x4E0E;test&#x4E4B;&#x95F4;&#xFF09;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"reconcile-differences\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Reconcile Differences</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><ul style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">How do you unify two similar looking pieces of code? Gradually bring them closer. Unify them only when they are absolutely identical. &#x4E0D;&#x8981;&#x5F3A;&#x5236;&#x6574;&#x5408;&#xFF0C;&#x7B49;&#x4ED6;&#x4EEC;&#x5B8C;&#x5168;&#x76F8;&#x7B49;&#x4E86;&#x518D;&#x8BF4;</li><li style=\"line-height: 1.6;\">Such a leap-of-faith refactoring is exactly what we&#x2019;re trying to avoid with our strategy of small steps and concrete feedback. Although you can&#x2019;t always avoid leapy refactorings, you can reduce their incidence. &#x4E0D;&#x8981;&#x505A;&#x8DE8;&#x8D8A;&#x5F0F;&#x7684;&#x91CD;&#x6784;&#x3002;</li><li style=\"line-height: 1.6;\">Sometimes you need to approach reconciling differences backward&#x2014;that is, think about how the last step of the change could be trivial, then work backward. &#x53CD;&#x5411;&#x601D;&#x8003;&#xFF0C;&#x5C3D;&#x91CF;&#x8BA9;&#x6BCF;&#x4E00;&#x6B65;&#x90FD;&#x975E;&#x5E38;&#x5C0F;(trivial)&#xFF0C;&#x8FD9;&#x6837;&#x65B9;&#x4FBF;&#x56DE;&#x9000;&#x3002;</li></ul></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"isolate-change\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Isolate Change</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x9694;&#x79BB;&#x6539;&#x52A8;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x901A;&#x5E38;&#x505A;&#x7684;&#x4E00;&#x4E9B;&#x62BD;&#x8C61;&#x5C01;&#x88C5;&#x3002;&#x628A;&#x53D8;&#x5316;&#x7684;&#x90E8;&#x5206;&#x7528;&#x63A5;&#x53E3;&#x5305;&#x88C5;&#x8D77;&#x6765;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x8FBE;&#x5230;&#x4E86;&#x9694;&#x79BB;&#x7684;&#x6548;&#x679C;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">Some possible ways to isolate change are Extract Method (the most common), Extract Object, and Method Object.</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"migrate-data\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Migrate Data</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E0D;&#x77E5;&#x6240;&#x4E91;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"extract-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Extract Method</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">How do you make a long, complicated method easier to read? Turn a small part of it into a separate method and call the new method. &#x5C06;&#x4E00;&#x4E2A;&#x5927;&#x51FD;&#x6570;&#x6253;&#x788E;&#xFF0C;&#x4ECE;&#x4E2D;&#x63D0;&#x53D6;&#x4E00;&#x4E9B;&#x65B9;&#x6CD5;&#x51FA;&#x6765;&#x3002;</p></blockquote></div><div style=\"line-height: 1.6;\"><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"how\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How</a></h4><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><ol style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">Find a region of the method that would make sense as its own method. Bodies of <br>loop, whole loops, and branches of conditionals are common candidates for extraction.</li><li style=\"line-height: 1.6;\">Make sure that there are no assignments to temporary variables declared outside the <br>scope of the region to be extracted.</li><li style=\"line-height: 1.6;\">Copy the code from the old method to the new method. Compile it.</li><li style=\"line-height: 1.6;\">For each temporary variable or parameter of the original method used in the new <br>method, add a parameter to the new method.</li><li style=\"line-height: 1.6;\">Call the new method from the original method.</li></ol></blockquote></div><div style=\"line-height: 1.6;\"><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"why\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Why</a></h4><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x589E;&#x5F3A;&#x53EF;&#x8BFB;&#x6027;</li><li style=\"line-height: 1.6;\">&#x6D88;&#x9664;&#x91CD;&#x590D;&#xFF0C;&#x5F53;&#x4F60;&#x53D1;&#x73B0;&#x6709;&#x4E24;&#x4E2A;&#x5927;&#x51FD;&#x6570;&#xFF0C;&#x6709;&#x4E00;&#x90E8;&#x5206;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x90A3;&#x5C31;&#x53EF;&#x4EE5;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x79F0;&#x4E3A;&#x65B0;&#x7684;&#x65B9;&#x6CD5;&#x3002;</li><li style=\"line-height: 1.6;\">&#x901A;&#x8FC7;inline&#x628A;&#x4E00;&#x5806;&#x51FD;&#x6570;&#x653E;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x7136;&#x540E;&#x770B;&#x770B;&#x54EA;&#x91CC;&#x53EF;&#x4EE5;extract &#xFF08;&#x8FD9;&#x4E00;&#x70B9;&#x6211;&#x611F;&#x89C9;&#x5E94;&#x8BE5;&#x653E;&#x5728;How&#x91CC;&#x9762;&#xFF0C;&#x4F5C;&#x8005;&#x662F;&#x60F3;&#x627F;&#x4E0A;&#x542F;&#x4E0B;&#xFF0C;&#x5C06;inline&#x5427;&#xFF09;</li></ol></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"inline-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Inline Method</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">inline&#x5F88;&#x7384;&#x4E4E;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x628A;&#x51FD;&#x6570;&#x7684;&#x4EE3;&#x7801;&#x590D;&#x5236;&#x5230;&#x8C03;&#x7528;&#x7684;&#x5730;&#x65B9;&#x3002;&#x597D;&#x5904;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x4F5C;&#x8005;&#x6709;&#x8BDD;&#x8BF4;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">You might like the second version better, or you might not. The point to note here is that you can use Inline Method to play around with the <strong style=\"font-weight: bold; line-height: 1.6;\">flow of control</strong>.  <br>&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x8BA9;&#x4F60;&#x628A;&#x62BD;&#x8C61;&#x51FA;&#x6765;&#x7684;&#x4E1C;&#x897F;&#x653E;&#x5230;&#x4E00;&#x8D77;&#x91CD;&#x65B0;&#x62BD;&#x8C61;&#xFF0C;&#x770B;&#x770B;&#x4F1A;&#x4E0D;&#x4F1A;&#x6709;&#x66F4;&#x597D;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x8FD9;&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x91CD;&#x6784;&#x7684;&#x65B9;&#x6CD5;&#x3002;</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"extract-interface\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Extract Interface</a></h3></div><div style=\"line-height: 1.6;\"><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"how-1\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How</a></h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5982;&#x4F55;&#x5C06;&#x4E00;&#x4E2A;&#x7C7B;&#x62BD;&#x8C61;&#x6210;&#x4E00;&#x4E2A;interface&#x3002;&#x6240;&#x8C13;&#x7684;interface&#x5C31;&#x662F;&#x53EA;&#x6709;&#x7EAF;&#x865A;&#x51FD;&#x6570;&#x7684;&#x7C7B;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><ol style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">Declare an interface. Sometimes the name of the existing class should be the name of the interface, in which case you should first rename the class.</li><li style=\"line-height: 1.6;\">Have the existing class implement the interface.</li><li style=\"line-height: 1.6;\">Add the necessary methods to the interface, expanding the visibility of the methods in the class if necessary.</li><li style=\"line-height: 1.6;\">Change type declarations from the class to the interface where possible.</li></ol></blockquote></div><div style=\"line-height: 1.6;\"><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"why-1\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Why</a></h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x91CC;&#x63D0;&#x5230;&#x4E86;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x5F53;&#x4F60;&#x9700;&#x8981;&#x62BD;&#x8C61;&#x51FA;&#x7236;&#x7C7B;&#x65F6;</li><li style=\"line-height: 1.6;\">&#x5F53;&#x4F60;&#x7528;&#x4E86;Mock Object&#xFF0C;&#x73B0;&#x5728;&#x8981;&#x4E3A;&#x8FD9;&#x4E2A;mock object&#x62BD;&#x8C61;&#x51FA;&#x4E00;&#x4E2A;&#x771F;&#x6B63;&#x7684;&#x63A5;&#x53E3;&#x65F6;&#x3002;&#x4F5C;&#x8005;&#x8FD9;&#x91CC;&#x63D0;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x5C0F;&#x6280;&#x5DE7;&#xFF0C;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x547D;&#x540D;&#x662F;&#x4E00;&#x4E2A;&#x5934;&#x75BC;&#x7684;&#x95EE;&#x9898;&#x3002;&#x4E0D;&#x59A8;&#x5C31;&#x628A;&#x65B0;&#x7684;interface&#x79F0;&#x4E3A;IXXX&#xFF0C;&#x4F8B;&#x5982;&#xFF0C;&#x539F;&#x6765;&#x7684;&#x53EB;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">File</code>&#xFF0C;&#x65B0;&#x7684;&#x63A5;&#x53E3;&#x5C31;&#x79F0;&#x4E3A;<code style=\"font-family: &apos;Source Code Pro&apos;,monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;\">IFile</code></li></ol></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"move-method\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Move Method</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x628A;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x65B9;&#x6CD5;&#x79FB;&#x5230;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x7C7B;&#x91CC;&#x9762;&#x3002;&#x4F46;&#x4F5C;&#x8005;&#x63D0;&#x5230;&#x4E86;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4E0D;&#x9002;&#x7528;&#x3002;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4FEE;&#x6539;&#x4E86;&#x539F;&#x5148;&#x90A3;&#x4E2A;&#x7C7B;&#x7684;&#x6570;&#x636E;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"method-object\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Method Object</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E2A;&#x8BDD;&#x9898;&#x597D;&#x50CF;&#x5F88;&#x65B0;&#x9C9C;&#xFF0C;&#x4E4B;&#x524D;&#x770B;&#x5230;&#x8FC7;&#x5F88;&#x591A;&#x6B21;&#xFF0C;&#x4F46;&#x5E76;&#x6CA1;&#x6709;&#x6DF1;&#x7A76;&#x3002;&#x5148;&#x770B;&#x770B;How&#xFF1A;</p></div><div style=\"line-height: 1.6;\"><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"how-2\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How</a></h4><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><ol style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">Create an object with the same parameters as the method.</li><li style=\"line-height: 1.6;\">Make the local variables also instance variables of the object.</li><li style=\"line-height: 1.6;\">Create one method called run(), whose body is the same as the body of the original method.</li><li style=\"line-height: 1.6;\">In the original method, create a new object and invoke run().</li></ol></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x6709;&#x4EC0;&#x4E48;&#x597D;&#x5904;&#xFF1F;</p></div><div style=\"line-height: 1.6;\"><h4 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 10.5px; margin-bottom: 10.5px; font-size: 1.25em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"why-2\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Why</a></h4><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E24;&#x4E2A;&#x597D;&#x5904;</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x5728;&#x6DFB;&#x52A0;&#x590D;&#x6742;&#x903B;&#x8F91;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x5BF9;&#x4E00;&#x4E2A;&#x8FC7;&#x7A0B;&#x6709;&#x591A;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x5BF9;&#x8C61;&#xFF0C;&#x518D;&#x6269;&#x5C55;&#x8D77;&#x6765;&#x5C31;&#x5F88;&#x7B80;&#x5355;</li><li style=\"line-height: 1.6;\">&#x5728;&#x4E00;&#x4E2A;&#x590D;&#x6742;&#x51FD;&#x6570;&#x91CC;extract interface&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x901A;&#x5E38;&#x4E00;&#x6BB5;code&#x9700;&#x8981;5&#xFF0C;6&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#xFF0C;&#x867D;&#x7136;&#x51FD;&#x6570;&#x62BD;&#x53D6;&#x51FA;&#x6765;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5199;&#x6CD5;&#x5E76;&#x6CA1;&#x6709;&#x7B80;&#x5316;&#x591A;&#x5C11;&#x3002;&#x8FD9;&#x65F6;&#x5019;&#x5982;&#x679C;&#x6709;&#x65B9;&#x6CD5;&#x5BF9;&#x8C61;&#xFF0C;&#x5219;&#x5728;&#x7C7B;&#x91CC;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x540D;&#x5B57;&#x7A7A;&#x95F4;&#xFF0C;&#x4F1A;&#x63D0;&#x4F9B;&#x989D;&#x5916;&#x7684;&#x4FBF;&#x5229;&#x3002;</li></ol></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"add-parameter\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Add Parameter</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5C31;&#x662F;&#x52A0;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x6CA1;&#x4EC0;&#x4E48;&#x7279;&#x522B;&#x7684;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"method-parameter-to-constructor-parameter\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Method Parameter to Constructor Parameter</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x5C31;&#x662F;&#x628A;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x53D8;&#x6210;&#x7C7B;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x8FD9;&#x4E48;&#x505A;&#xFF1F;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">If you pass the same parameter to several different methods in the same object, then you can simplify the API by passing the parameter once (eliminating duplication). You can run this refactoring in reverse if you find that an instance variable is used in only one method.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7B80;&#x5355;&#x5B9E;&#x7528;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h2 style=\"font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start;\"><a name=\"chapter-32-mastering-tdd\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Chapter 32. Mastering TDD</a></h2><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x7ECF;&#x8FC7;31&#x7AE0;&#x7684;&#x5B66;&#x4E60;&#xFF0C;&#x4F5C;&#x8005;&#x8BA4;&#x4E3A;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5B8C;&#x5B8C;&#x5168;&#x5168;&#x6709;&#x80FD;&#x529B;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x5408;&#x683C;&#x7684;TDD&#x7A0B;&#x5E8F;&#x5458;&#x4E86;&#x3002;&#x5728;&#x8FD9;&#x4E00;&#x7AE0;&#x91CC;&#xFF0C;&#x4F5C;&#x8005;&#x53C8;&#x603B;&#x7ED3;&#x51FA;&#x5F88;&#x591A;TDD&#x521D;&#x5B66;&#x8005;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x7ED9;&#x4E88;&#x56DE;&#x7B54;&#x3002;&#x7B54;&#x6848;&#x90FD;&#x662F;&#x4E00;&#x4E9B;&#x5F88;&#x5B9E;&#x7528;&#x7684;&#x5FE0;&#x544A;&#xFF0C;&#x7279;&#x6458;&#x53D6;&#x5982;&#x4E0B;&#x3002;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"what-dont-you-have-to-test\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">What don&#x2019;t you have to test?</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4F5C;&#x8005;&#x5E76;&#x6CA1;&#x6709;&#x76F2;&#x76EE;&#x5F3A;&#x8C03;&#x6D4B;&#x8BD5;&#x91CD;&#x8981;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x8BF4;&#x4EFB;&#x4F55;&#x5730;&#x65B9;&#x90FD;&#x8981;&#x5199;&#x6D4B;&#x8BD5;&#x3002;&#x4F5C;&#x8005;&#x8BF4;&#xFF1A;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">Unless you have reason to distrust it, don&#x2019;t test code from others.  <br>&#x201C;Write tests until fear is transformed into boredom.&#x201D;</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x53EA;&#x5728;&#x4F60;&#x4E0D;&#x76F8;&#x4FE1;&#x4F60;&#x7684;code&#x65F6;&#xFF0C;&#x5BF9;&#x4ED6;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x3002;&#x6D4B;&#x8BD5;&#x4E5F;&#x4E0D;&#x662F;&#x4E3A;&#x4E86;&#x6D4B;&#x8BD5;&#x800C;&#x6D4B;&#x8BD5;&#xFF0C;&#x6216;&#x8005;&#x4E3A;&#x4E86;&#x4EE3;&#x7801;&#x7684;&#x5065;&#x58EE;&#xFF0C;&#x6D4B;&#x8BD5;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x4F60;&#x7684;&#x7126;&#x8651;&#x3002;&#x8BA9;&#x4F60;&#x4E0D;&#x8981;&#x4ECE;&#x62C5;&#x5FC3;&#x53D8;&#x6210;&#x70E6;&#x8E81;&#xFF0C;&#x4EC5;&#x6B64;&#x800C;&#x5DF2;&#x3002; <br>&#x54CE;&#xFF01;&#x771F;&#x662F;&#x918D;&#x9190;&#x704C;&#x9876;&#xFF01;&#x76F8;&#x89C1;&#x6068;&#x665A;&#xFF01;</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"how-do-you-know-if-you-have-good-tests\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How do you know if you have good tests?</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x6D4B;&#x8BD5;&#x4E0D;&#x597D;&#xFF1F;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><ol style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">Long setup code. &#x5982;&#x679C;&#x4E3A;&#x4E86;&#x505A;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x51E0;&#x884C;&#x65AD;&#x8A00;&#xFF0C;&#x800C;&#x4E3A;&#x6B64;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5DE8;&#x5927;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x90A3;&#x8BF4;&#x660E;&#x54EA;&#x91CC;&#x80AF;&#x5B9A;&#x51FA;&#x95EE;&#x9898;&#x4E86;&#x3002;</li><li style=\"line-height: 1.6;\">Setup duplication. &#x5982;&#x679C;&#x4F60;&#x53D1;&#x73B0;&#x6709;&#x51E0;&#x4E2A;&#x6D4B;&#x8BD5;&#x62E5;&#x6709;&#x76F8;&#x540C;&#x6216;&#x76F8;&#x4F3C;&#x7684;setup&#x4EE3;&#x7801;&#xFF0C;&#x90A3;&#x8BF4;&#x660E;&#x4F60;&#x7684;&#x6D4B;&#x8BD5;&#x4E2D;&#x6709;&#x91CD;&#x590D;&#x7684;&#x5730;&#x65B9;&#x3002;</li><li style=\"line-height: 1.6;\">Long running tests. TDD tests that run a long time won&#x2019;t be run often. Suites that take longer than ten minutes <br>inevitably get trimmed. &#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x5957;&#x4EF6;&#x4E0D;&#x8981;&#x8D85;&#x8FC7;&#x5341;&#x5206;&#x949F;&#x3002;&#x5426;&#x5219;&#xFF0C;&#x53CD;&#x590D;&#x8FD0;&#x884C;&#x7684;&#x673A;&#x4F1A;&#x5C31;&#x4F1A;&#x6025;&#x5267;&#x964D;&#x4F4E;&#x3002;</li><li style=\"line-height: 1.6;\">Fragile tests. Tests that break unexpectedly suggest that one part of the application is surprisingly affecting another part. &#x5982;&#x679C;&#x6D4B;&#x8BD5;&#x88AB;&#x65E0;&#x60C5;&#x6253;&#x65AD;&#xFF0C;&#x8BF4;&#x660E;&#x4F60;&#x7684;&#x7A0B;&#x5E8F;&#x91CC;&#x6709;&#x8026;&#x5408;&#x3002;</li></ol></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"how-does-tdd-lead-to-frameworks\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How does TDD lead to frameworks?</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x53C8;&#x88AB;&#x918D;&#x9190;&#x704C;&#x9876;&#x4E86;&#xFF01;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">TDD appears to stand this advice on its head: <b style=\"font-weight: bold;\"><font color=\"IndianRed\" style=\"line-height: 1.6;\">&#x201C;Code for tomorrow, design for today.&#x201D; </font></b>Here&#x2019;s what happens in practice. &#x4E0D;&#x8981;&#x4E3A;&#x672A;&#x6765;&#x8003;&#x8651;&#x90A3;&#x4E48;&#x591A;&#xFF0C;&#x7B80;&#x5355;&#x7684;&#x8BA9;&#x6D4B;&#x8BD5;&#x901A;&#x8FC7;&#xFF0C;&#x7136;&#x540E;&#x53CA;&#x65F6;&#x7684;&#x505A;&#x91CD;&#x6784;&#x6D88;&#x9664;&#x91CD;&#x590D;&#xFF0C;&#x53CD;&#x800C;&#x80FD;&#x8FBE;&#x5230;&#x66F4;&#x597D;&#x7684;&#x8BBE;&#x8BA1;&#x6846;&#x67B6;&#xFF08;frameworks&#xFF09;&#x3002;</p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"how-much-feedback-do-you-need\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How much feedback do you need?</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x91CC;&#x8BF4;&#x7684;&#x548C;&#x4E4B;&#x524D;&#x4E00;&#x76F4;&#x5F3A;&#x8C03;&#x7684;&#x601D;&#x60F3;&#x5F88;&#x4E00;&#x81F4;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">If our knowledge of the implementation gives us confidence even without a test, then we will not write that test. </p></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"when-should-you-delete-tests\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">When should you delete tests?</a></h3><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><ol style=\"margin-top: 0; margin-bottom: 0; line-height: 1.6;\"><li style=\"line-height: 1.6;\">The first criterion for your tests is <strong style=\"font-weight: bold; line-height: 1.6;\">confidence</strong>. Never delete a test if it reduces your confidence in the behavior of the system.</li><li style=\"line-height: 1.6;\">The second criterion is <strong style=\"font-weight: bold; line-height: 1.6;\">communication</strong>. If you have two tests that exercise the same path through the code, but they speak to different scenarios for a reader, leave them alone.</li></ol></blockquote></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"can-you-drive-development-with-application-level-tests\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Can you drive development with application-level tests?</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x4E0D;&#x8981;&#x5C1D;&#x8BD5;&#x505A;&#x5E94;&#x7528;&#x7EA7;&#x522B;&#x7684;test</p></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"how-do-you-switch-to-tdd-midstream\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How do you switch to TDD midstream?</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x8FD9;&#x4E5F;&#x662F;&#x6211;&#x60F3;&#x95EE;&#x7684;&#xFF0C;&#x4F5C;&#x8005;&#x7684;&#x56DE;&#x7B54;&#x662F;&#x8FD9;&#x672C;&#x4E66;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x8FD9;&#x4E2A;&#x800C;&#x5199;&#x7684;&#x3002;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">There is a whole book (or books) to be written about switching to TDD when you have lots of code. What follows is necessarily only a teaser.</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x600E;&#x4E48;&#x505A;&#xFF1F;</p><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">So first we have to decide to limit the scope of our changes. </li><li style=\"line-height: 1.6;\">Second, we have to break the deadlock between tests and refactoring.  <br><ol style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">&#x600E;&#x4E48;&#x83B7;&#x5F97;feedback <br>1) We can get feedback other ways than with tests, like working very carefully and with a partner.  <br>2) We can get feedback at a gross level, like system-level tests that we know aren&#x2019;t adequate but give us some confidence. With this feedback, we can make the areas we have to change more accepting of change.</li></ol></li></ol></div><div style=\"line-height: 1.6;\"><h3 style=\"font-family: inherit; font-weight: bold; color: inherit; margin-top: 21px; margin-bottom: 10.5px; font-size: 1.7em; margin: 1.2em 0 .6em 0; text-align: start; line-height: 1.6;\"><a name=\"how-does-tdd-relate-to-the-practices-of-extreme-programming\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">How does TDD relate to the practices of Extreme Programming?</a></h3><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">&#x540D;&#x8BCD;&#x89E3;&#x91CA;&#xFF1A;<a href=\"http://baike.baidu.com/link?url=NgfFcw4hxjOQHRtEArm4buq177_Xw562MDhrOykDcd-0EOv1xB_Oz3eslAn9X65cFdUel2xI7tTiqB3Gqyz3Ja\" target=\"_blank\" style=\"background: transparent; color: #1980e6; text-decoration: none;\">Extreme Programming - XP</a>&#x6781;&#x9650;&#x7F16;&#x7A0B;</p><blockquote style=\"padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;\"><p style=\"margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6;\">&#x6781;&#x9650;&#x7F16;&#x7A0B;&#x662F;&#x4E00;&#x4E2A;&#x8F7B;&#x91CF;&#x7EA7;&#x7684;&#x3001;&#x7075;&#x5DE7;&#x7684;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x65B9;&#x6CD5;&#xFF1B;&#x540C;&#x65F6;&#x5B83;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x4E25;&#x8C28;&#x548C;&#x5468;&#x5BC6;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x5B83;&#x7684;&#x57FA;&#x7840;&#x548C;&#x4EF7;&#x503C;&#x89C2;&#x662F;&#x4EA4;&#x6D41;&#x3001;&#x6734;&#x7D20;&#x3001;&#x53CD;&#x9988;&#x548C;&#x52C7;&#x6C14;&#xFF1B;&#x5373;&#xFF0C;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x8F6F;&#x4EF6;&#x9879;&#x76EE;&#x90FD;&#x53EF;&#x4EE5;&#x4ECE;&#x56DB;&#x4E2A;&#x65B9;&#x9762;&#x5165;&#x624B;&#x8FDB;&#x884C;&#x6539;&#x5584;&#xFF1A;&#x52A0;&#x5F3A;&#x4EA4;&#x6D41;&#xFF1B;&#x4ECE;&#x7B80;&#x5355;&#x505A;&#x8D77;&#xFF1B;&#x5BFB;&#x6C42;&#x53CD;&#x9988;&#xFF1B;&#x52C7;&#x4E8E;&#x5B9E;&#x4E8B;&#x6C42;&#x662F;&#x3002;XP&#x662F;&#x4E00;&#x79CD;&#x8FD1;&#x87BA;&#x65CB;&#x5F0F;&#x7684;&#x5F00;&#x53D1;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x5C06;&#x590D;&#x6742;&#x7684;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x5206;&#x89E3;&#x4E3A;&#x4E00;&#x4E2A;&#x4E2A;&#x76F8;&#x5BF9;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x7684;&#x5C0F;&#x5468;&#x671F;&#xFF1B;&#x901A;&#x8FC7;&#x79EF;&#x6781;&#x7684;&#x4EA4;&#x6D41;&#x3001;&#x53CD;&#x9988;&#x4EE5;&#x53CA;&#x5176;&#x5B83;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x548C;&#x5BA2;&#x6237;&#x53EF;&#x4EE5;&#x975E;&#x5E38;&#x6E05;&#x695A;&#x5F00;&#x53D1;&#x8FDB;&#x5EA6;&#x3001;&#x53D8;&#x5316;&#x3001;&#x5F85;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x548C;&#x6F5C;&#x5728;&#x7684;&#x56F0;&#x96BE;&#x7B49;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x53CA;&#x65F6;&#x5730;&#x8C03;&#x6574;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x3002;</p></blockquote><p style=\"margin: 0 0 1.1em; line-height: 1.6;\">TDD&#x4E0E;XP&#x7684;&#x5171;&#x901A;&#x4E4B;&#x5904;&#xFF1A;</p><ul style=\"margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;\"><li style=\"line-height: 1.6;\">Pairing</li><li style=\"line-height: 1.6;\">Work fresh</li><li style=\"line-height: 1.6;\">Continuous integration</li><li style=\"line-height: 1.6;\">Simple design</li><li style=\"line-height: 1.6;\">Refactoring</li><li style=\"line-height: 1.6;\">Continuous delivery</li></ul></div><div style=\"line-height: 1.6;\"></div><center style=\"display:none\">%23Test-Driven%20Development%0A@%28%u5B66%u4E60%u7B14%u8BB0%29%5BProgramming%2C%20TDD%5D%0A%0A%5BTOC%5D%0A%0A%u6700%u8FD1%u5728%u8BFBKent%20Beck%u7684%u300ATest-Driven%20Development%20By%20Example%u300B%uFF0C%u8BA9%u6211%u5BF9%u8F6F%u4EF6%u5F00%u53D1%u6709%u4E86%u65B0%u7684%u8BA4%u8BC6%u3002%0A%3E%u5199test%u5E76%u4E0D%u4E3A%u4E86%u6D4B%u8BD5%u800C%u6D4B%u8BD5%uFF0C%u662F%u4E3A%u4E86%u589E%u5F3A%u5BF9%u7A0B%u5E8F%u7684%u4FE1%u5FC3%uFF0C%u51CF%u5C11%u7126%u8651%u3002%u90A3%u4E48%u5982%u4F55%u51CF%u5C11%u7126%u8651%u5462%uFF0C%u662F%u901A%u8FC7%u4E00%u6B21%u53EA%u5173%u5FC3%u4E00%u4EF6%u4E8B%u60C5%u3002%u5982%u4F55%u4E00%u6B21%u53EA%u5173%u5FC3%u4E00%u4EF6%u4E8B%u60C5%uFF0C%u8FD9%u5C31%u662FTDD%u3002%0A%0A%u672C%u4E66%u5206%u4E09%u4E2A%u90E8%u5206%0A1.%20The%20Money%20Example%0A2.%20The%20xUnit%20Example%0A3.%20Patterns%20for%20Test-Driven%20Development%0A%u524D%u4E24%u4E2A%u90E8%u5206%u8BB2%u4E86%u4E24%u4E2A%u4F8B%u5B50%uFF0C%u6765%u9610%u8FF0%u5982%u4F55%u8FDB%u884CTDD%u5F00%u53D1%uFF0C%u6700%u540E%u4E00%u4E2A%u90E8%u5206%u7B97%u662F%u603B%u7ED3%uFF0C%u5168%u4E66%u7684%u7CBE%u534E%u6240%u5728%u3002%u672C%u6587%u4E0D%u6253%u7B97%u8BB2%u8FD9%u4E24%u4E2A%u4F8B%u5B50%u4E86%uFF0C%u56E0%u4E3A%u4F8B%u5B50%u6700%u597D%u81EA%u5DF1%u624B%u5199%u4E00%u904D%uFF0C%u624D%u53EF%u4EE5%u52A0%u6DF1%u4E86%u89E3%u3002%u672C%u6587%u4E3B%u8981%u6458%u5F55%u4E00%u4E9BTDD%u7684%u6A21%u5F0F%u65B9%u6CD5%28pattern%29%u3002%0A%0A%u4E0B%u9762%u8FD9%u6BB5%u8BDD%u6765%u81EA%u7B2C%u4E00%u7AE0%uFF0C%u63D0%u7EB2%u6308%u9886%uFF1A%0A%3EMy%20goal%20is%20for%20you%20to%20see%20the%20rhythm%20of%20Test-Driven%20Development%20%28TDD%29%2C%20which%20can%20be%20summed%20up%20as%20follows.%0A%3E%201.%20Quickly%20add%20a%20test.%0A%3E%202.%20Run%20all%20tests%20and%20see%20the%20new%20one%20fail.%0A%3E%203.%20Make%20a%20little%20change.%0A%3E%204.%20Run%20all%20tests%20and%20see%20them%20all%20succeed.%0A%3E%205.%20Refactor%20to%20remove%20duplication.%0A%0A%3EThe%20surprises%20are%20likely%20to%20include.%0A%3E%20*%20How%20each%20test%20can%20cover%20a%20**small%20increment**%20of%20functionality.%0A%3E%20*%20How%20**small%20and%20ugly%20the%20changes**%20can%20be%20to%20make%20the%20new%20tests%20run.%0A%3E%20*%20How%20often%20the%20tests%20are%20run.%0A%3E%20*%20How%20many%20teensy-weensy%20steps%20make%20up%20the%20refactorings.%0A%0A%u8FD9%u5C31%u662FTDD%u7684%u7CBE%u9AD3%u3002%u6309%u4F5C%u8005%u7684%u8BF4%u6CD5%u5C31%u662F%60Green/Red/Green/Refactor%60%u8282%u594F%u3002%0A%u8FD9%u4E5F%u56DE%u7B54%u4E86%u6211%u4E00%u76F4%u4EE5%u6765%u7684%u56F0%u6270%uFF0C%u5230%u5E95%u5E94%u8BE5%u5982%u4F55%u8BBE%u8BA1%u4E00%u6BB5%u7A0B%u5E8F%uFF0C%u5230%u5E95%u8981%u8003%u8651%u591A%u5C11%u79CD%u60C5%u51B5%u3002%u6309%u7167TDD%u7684%u5EFA%u8BAE%u5C31%u662F%uFF0C%u9996%u5148%u5199%u6D4B%u8BD5%uFF0C%u7136%u540E%u4EE3%u7801%u600E%u4E48%u5FEB%u600E%u4E48%u6765%uFF0C%u4E0D%u7BA1%u6709%u591Augly%uFF0C%u7136%u540E%u5982%u679C%u53D1%u73B0%u91CD%u590D%uFF0C%u53CA%u65F6%u505A%u91CD%u6784%u3002%u4E0D%u8981%u8003%u8651%u4EC0%u4E48%u6269%u5C55%u6027%u4E4B%u7C7B%u7684%uFF0C%u8FD9%u4E2A%u8BBE%u8BA1%u65B9%u5F0F%u672C%u8EAB%u5C31%u80FD%u63D0%u4F9B%u3002%u56E0%u4E3A%u5B83%u63D0%u9AD8%u4E86%u8FD0%u884C%u6D4B%u8BD5%u548C%u91CD%u6784%u7684%u9891%u7387%uFF0C%u65E2%u63D0%u5347%u4E86%u7F16%u7801%u8005%u5BF9%u7A0B%u5E8F%u7684%u4FE1%u5FC3%uFF0C%u4E5F%u964D%u4F4E%u4E86%u4E0D%u5408%u7406%u8BBE%u8BA1%u7684%u53EF%u80FD%u6027%u3002%0A%0A%23%23Chapter%2025.%20Test-Driven%20Development%20Patterns%0A%u4E66%u4E2D%u5F15%u5165%u4E86%u5F88%u591A%u5F71%u50CF%u56FE%28Influence%20Diagram%29%uFF0C%u5F88%u5F62%u8C61%u7684%u8BF4%u660E%u4E86%uFF0C%u5F15%u5165TDD%u80FD%u7ED9%u6211%u4EEC%u65E5%u5E38%u7684%u5F00%u53D1%u5DE5%u4F5C%u5F15%u5165%u4EC0%u4E48%u597D%u5904%u3002%0A%21%5BAlt%20text%5D%28./1455616022147.png%29%0A%3EThis%20is%20a%20positive%20feedback%20loop.%20%0A%3E-%20The%20more%20stress%20you%20feel%2C%20the%20less%20testing%20you%20will%20do.%20%0A%3E-%20The%20less%20testing%20you%20do%2C%20the%20more%20errors%20you%20will%20make.%20%0A%3E-%20The%20more%20errors%20you%20make%2C%20the%20more%20stress%20you%20feel.%20%0A%3E-%20Rinse%20and%20repeat.%0A%0A%23%23%23Isolated%20Test%0A%u80FD%u5C06%u5927%u5757%u7684%u6D4B%u8BD5%u5206%u5272%u6210%u677E%u8026%u5408%u7684%u5C0F%u6D4B%u8BD5%u4E0D%u5BB9%u6613%uFF0C%u4F46%u662F%u597D%u5904%u5927%u5927%u7684%u3002%u4F5C%u8005%u8BF4%uFF1A%0A%3EI%20never%20knew%20exactly%20how%20to%20achieve%20high%20cohesion%20and%20loose%20coupling%20regularly%20until%20I%20started%20writing%20isolated%20tests.%0A%23%23%23Test%20List%0A%u6211%u4EEC%u8981%u600E%u4E48%u5F00%u59CBTDD%u5462%uFF1F%u4F5C%u8005%u7ED9%u51FA%u4E86%u5F88%u5177%u64CD%u4F5C%u6027%u7684%u5EFA%u8BAE%uFF1A%0A%3EBefore%20you%20begin%2C%20write%20a%20list%20of%20all%20the%20tests%20you%20know%20you%20will%20have%20to%20write.%0A%u8FD9%u4E2Alist%u4E0A%u5199%u70B9%u4EC0%u4E48%u5462%uFF1F%0A%3E%201.%20Put%20on%20the%20list%20examples%20of%20every%20operation%20that%20you%20know%20you%20need%20to%20implement.%20%u8981%u54EA%u4E9B%u64CD%u4F5C%u3002%0A%3E%202.%20for%20those%20operations%20that%20don%27t%20already%20exist%2C%20put%20the%20null%20version%20of%20that%20operation%20on%20the%20list.%u54EA%u4E9B%u64CD%u4F5C%u6CA1%u5B9E%u73B0%uFF0C%u5199%u4E0A%u5B58%u6839%u3002%0A%3E%203.%20List%20all%20of%20the%20refactorings%20that%20you%20think%20you%20will%20have%20to%20do%20in%20order%20to%20have%20clean%20code%20at%20the%20end%20of%20this%20session.%20%u5B8C%u6210%u4E4B%u540E%uFF0C%u5217%u51FA%u9700%u8981%u91CD%u6784%u7684%u5730%u65B9%u3002%u800C%u5982%u679C%u6709%u5927%u7684%u91CD%u6784%u7684%u9700%u8981%u65F6%uFF0C%u653E%u5230later%20list%u91CC%u9762%uFF0C%u628A%u624B%u91CC%u7684%u4E8B%u60C5%u5904%u7406%u5B8C%uFF0C%u518D%u53BB%u5904%u7406%u5927%u7684%u91CD%u6784%u3002%0A%0A%u770B%u4F5C%u8005%u65F6%u523B%u5728%u5F3A%u8C03TDD%u5C31%u662Ftiny%20steps%uFF1A%0A%3E%20The%20pure%20form%20of%20TDD%2C%20wherein%20you%20are%20never%20more%20than%20one%20change%20away%20from%20a%20green%20bar%2C%20is%20like%20that%20three-out-of-four%20rule.%0A%23%23%23Test%20First%0A%u4EC0%u4E48%u65F6%u5019%u5199%u6D4B%u8BD5%uFF1F%0A%u7B54%uFF1A%u5728%u5199code%u4E4B%u524D%uFF0C%u56E0%u4E3A%u4E00%u65E6%u4F60%u5F00%u59CB%u5199code%uFF0C%u4F60%u53EF%u80FD%u5C31%u8EAB%u9677%u6CE5%u6F6D%uFF0C%u65E0%u6687%u987E%u53CAtest%20case%u4E86%u3002%0A%0A%23%23Chapter%2026.%20Red%20Bar%20Patterns%0A%23%23%23One%20Step%20Test%0A%3EEach%20test%20should%20represent%20one%20step%20toward%20your%20overall%20goal.%0A%23%23%23Starter%20Test%0A%u5982%u4F55%u5F00%u59CB%u5199%u6D4B%u8BD5%uFF1F%u4E0D%u8981%u4E00%u5F00%u59CB%u5C31%u60F3%u5199%u4E00%u4E2A%u771F%u6B63%u7684%u6D4B%u8BD5%uFF0C%u56E0%u4E3A%u8FD9%u6837%u4F1A%u4E00%u6B21%u9762%u5BF9%u592A%u591A%u7684%u95EE%u9898%u3002%u4F5C%u8005%u5EFA%u8BAE%u5C1D%u8BD5%u4ECE%u4E00%u4E2A%u7B80%u5355%u7684%u6D4B%u8BD5%u8F93%u5165%u8F93%u51FA%u5F00%u59CB%u3002%u8FD9%u6837%u4EE5%u4FBF%u4E8E%u4F60%u4ECEGreenxun%u8FC5%u901F%u5F00%u59CB%u4F60%u7684Green/Red/Green/Refactor%u8282%u594F%u3002%u4F5C%u8005%u4E3E%u4E86%u4E00%u4E2A%u4EA7%u751F%u591A%u8FB9%u5F62%u7684%u4F8B%u5B50%uFF1A%0A%60%60%60%20java%0AReducer%20r%3D%20new%20Reducer%28new%20Polygon%28%29%29%3B%20%0AassertEquals%280%2C%20reducer.result%28%29.npoints%29%3B%0A%60%60%60%0A%u4E0D%u592A%u61C2%u8FD9%u4E2A%u95EE%u9898%uFF0C%u4E0D%u8FC7%u53EF%u4EE5%u4ECE%u4E2D%u770B%u51FA%u4F5C%u8005%u5BF9TDD%u7684%u89E3%u91CA%u3002%u95EE%u9898%u672C%u8EAB%u662F%u8981%u89E3%u4E00%u4E2A%u964D%u4F4E%u591A%u8FB9%u5F62%u8FB9%u6570%u7684%u95EE%u9898%u3002%u4F5C%u8005%u7684%u542F%u52A8%u6D4B%u8BD5%u5C31%u662F%u4E00%u4E2A%u201C0%u201D%u8FB9%u591A%u8FB9%u5F62%uFF0C%u90A3%u7ED3%u679C%u4E00%u5B9A%u662F%220%22%u8FB9%u591A%u8FB9%u5F62%u3002%u5BF9%u5B9E%u9645%u610F%u4E49%u5F88%u8352%u8BDE%uFF0C%u4F46%u5BF9%u6D4B%u8BD5%u6765%u8BF4%u662F%u4E00%u4E2A%u4E0D%u9519%u7684%u5F00%u59CB%u3002%u7B26%u5408%u6211%u4EEC%u7684%u9884%u671F%uFF0C%u7B80%u5355%u800C%u4E14%u53C8%60represent%20one%20step%20toward%20your%20overall%20goal%60%u3002%0A%23%23%23Explanation%20Test%0A%u8FD9%u4E00%u7AE0%u662F%u5728%u8BF4%u5982%u4F55%u4E0D%u7528%u5F3A%u8FEB%u7684%u624B%u6BB5%u8BA9%u975ETDD%u7684%u56E2%u961F%u6210%u5458%u80FD%u8F6C%u5411TDD%u3002%u5F53%u5F00%u53D1%u8005%u5411%u4F60%u89E3%u91CA%u4ED6%u7684%u7A0B%u5E8F%u65F6%uFF0C%u4F60%u90FD%u53EF%u4EE5%u5C06%u4E4B%u8F6C%u5316%u4E3Atest%20case%u3002%0A%u672C%u4E66%u8FD8%u6709%u4E00%u4E2A%u5F88%u6709%u7279%u8272%u7684%u5730%u65B9%u662F%uFF0C%u8D2F%u7A7F%u5168%u6587%uFF0C%u4F5C%u8005%u603B%u662F%u5728%u7ECF%u610F%u4E0D%u7ECF%u610F%u95F4%u6D41%u9732%u7740%u5404%u79CD%u5B9D%u8D35%u7684%u5DE5%u4F5C%u7ECF%u9A8C%uFF1A%u5982%u4F55%u957F%u671F%u4FDD%u6301%u66F4%u9AD8%u6548%u7684%u7F16%u7A0B%uFF1F%u5982%u679C%u4F60%u662F%u7ECF%u7406%uFF0C%u4F60%u5982%u4F55%u4E0E%u4F60%u7684%u56E2%u961F%u6210%u5458%u4E00%u8D77%u5DE5%u4F5C%uFF1F%u7B49%u7B49%u3002%u8FD9%u4E00%u7AE0%u5C31%u6709%u8FD9%u6837%u4E00%u53E5%u8BDD%uFF1A%0A%3EIf%20you%27re%20a%20manager%20or%20a%20leader%2C%20you%20can%27t%20force%20anyone%20to%20change%20the%20way%20they%20work.%0A%3EWhat%20can%20you%20do%3F%20A%20simple%20start%20is%20to%20start%20asking%20for%20explanations%20in%20terms%20of%20test%20cases%3A%20%22Let%20me%20see%20if%20I%20understand%20what%20you%27re%20saying.%0A%0A%23%23%23Learning%20Test%0A%u8FD9%u4E00%u7AE0%u8BB2%u4E86%u6D4B%u8BD5%u9A71%u52A8%u5F00%u53D1%u9488%u5BF9%u96C6%u6210%u7B2C%u4E09%u65B9%u5E93%u7684%u4F18%u52BF%u3002%0A%23%23%23Regression%20Test%0A%3E**%u56DE%u5F52%u6D4B%u8BD5**%u662F%u6307%u4FEE%u6539%u4E86%u65E7%u4EE3%u7801%u540E%uFF0C%u91CD%u65B0%u8FDB%u884C%u6D4B%u8BD5%u4EE5%u786E%u8BA4%u4FEE%u6539%u6CA1%u6709%u5F15%u5165%u65B0%u7684%u9519%u8BEF%u6216%u5BFC%u81F4%u5176%u4ED6%u4EE3%u7801%u4EA7%u751F%u9519%u8BEF%u3002%0A%3E%u81EA%u52A8%u56DE%u5F52%u6D4B%u8BD5%u5C06%u5927%u5E45%u964D%u4F4E%u7CFB%u7EDF%u6D4B%u8BD5%u3001%u7EF4%u62A4%u5347%u7EA7%u7B49%u9636%u6BB5%u7684%u6210%u672C%u3002%u56DE%u5F52%u6D4B%u8BD5%u4F5C%u4E3A%u8F6F%u4EF6%u751F%u547D%u5468%u671F%u7684%u4E00%u4E2A%u7EC4%u6210%u90E8%u5206%uFF0C%u5728%u6574%u4E2A%u8F6F%u4EF6%u6D4B%u8BD5%u8FC7%u7A0B%u4E2D%u5360%u6709%u5F88%u5927%u7684%u5DE5%u4F5C%u91CF%u6BD4%u91CD%uFF0C%u8F6F%u4EF6%u5F00%u53D1%u7684%u5404%u4E2A%u9636%u6BB5%u90FD%u4F1A%u8FDB%u884C%u591A%u6B21%u56DE%u5F52%u6D4B%u8BD5%u3002%u5728%u6E10%u8FDB%u548C%u5FEB%u901F%u8FED%u4EE3%u5F00%u53D1%u4E2D%uFF0C%u65B0%u7248%u672C%u7684%u8FDE%u7EED%u53D1%u5E03%u4F7F%u56DE%u5F52%u6D4B%u8BD5%u8FDB%u884C%u7684%u66F4%u52A0%u9891%u7E41%uFF0C%u800C%u5728%u6781%u7AEF%u7F16%u7A0B%u65B9%u6CD5%u4E2D%uFF0C%u66F4%u662F%u8981%u6C42%u6BCF%u5929%u90FD%u8FDB%u884C%u82E5%u5E72%u6B21%u56DE%u5F52%u6D4B%u8BD5%u3002%u56E0%u6B64%uFF0C%u901A%u8FC7%u9009%u62E9%u6B63%u786E%u7684%u56DE%u5F52%u6D4B%u8BD5%u7B56%u7565%u6765%u6539%u8FDB%u56DE%u5F52%u6D4B%u8BD5%u7684%u6548%u7387%u548C%u6709%u6548%u6027%u662F%u975E%u5E38%u6709%u610F%u4E49%u7684%u3002%0A%u2014%u2014%20**%u767E%u5EA6%u767E%u79D1**%0A%0A%u672C%u4E66%u8BB2%u7684%u56DE%u5F52%u6D4B%u8BD5%u6982%u5FF5%u53EF%u80FD%u7565%u6709%u4E0D%u540C%u3002%u6309%u7167%u6211%u7684%u7406%u89E3%uFF0C%u4F5C%u8005%u662F%u60F3%u8BF4%uFF0C%u5728%u8FDB%u884C%u5B8C%u6240%u6709%u7684%u7F16%u7801%u4EE5%u540E%uFF0C%u4F60%u5DF2%u7ECF%u5BF9%u4F60%u7684%u8981%u5B9E%u73B0%u7684%u6240%u6709%u4E1C%u897F%u5B8C%u6210%u4E86unknown%24%5Crightarrow%20%24known%u7684%u8FC7%u7A0B%u3002%u90A3%u4E48%u73B0%u5728%uFF0C%u4F60%u53EF%u4EE5%u56DE%u8FC7%u5934%u770B%u770B%uFF0C%u5982%u679C%u8FD9%u65F6%u5019%u91CD%u65B0%u5199%u4E00%u4EFD%u6D4B%u8BD5%u4F60%u5E94%u8BE5%u5199%u4EC0%u4E48%u3002%0A%0A%3E%u56DE%u5230%u4F60%u9488%u5BF9%u8FD9%u4E2A%u7CFB%u7EDF%u7684%u6700%u521D%u7684%u60F3%u6CD5%u6765%u5BF9%u6574%u4E2A%u7CFB%u7EDF%u505A%u4E00%u4E2A%u6D4B%u8BD5%u3002%u4EE5%u671F%u5BF9%u6574%u4E2A%u7CFB%u7EDF%u6709%u4E2A%u6574%u4F53%u7684%u8BC4%u4EF7%u3002%0A%23%23%23Break%0A%u52B3%u9038%u7ED3%u5408%u5BF9%u7A0B%u5E8F%u5458%u662F%u975E%u5E38%u975E%u5E38%u975E%u5E38%u91CD%u8981%u7684%uFF01%0A%3E%20**Shower%20Methodology**%3AIf%20you%20know%20what%20to%20type%2C%20then%20type.%20If%20you%20don%27t%20know%20what%20to%20type%2C%20then%20take%20a%20shower%2C%20and%20stay%20in%20the%20shower%20until%20you%20know%20what%20to%20type.%0A%3E**TDD%20Rule**%3A%20If%20you%20don%27t%20know%20what%20to%20type%2C%20then%20Fake%20It.%20If%20the%0Aright%20design%20still%20isn%27t%20clear%2C%20then%20Triangulate.%20%0A%0A%u770B%u770B%u4F5C%u8005%u63D0%u5021%u7684%u65F6%u95F4%u7BA1%u7406%0A%3E*%20At%20the%20scale%20of%20hours%2C%20keep%20a%20water%20bottle%20by%20your%20keyboard%20so%20that%20biology%20provides%20the%20motivation%20for%20regular%20breaks.%0A%3E*%20At%20the%20scale%20of%20a%20day%2C%20commitments%20after%20regular%20work%20hours%20can%20help%20you%20to%20stop%20when%20you%20need%20sleep%20before%20progress.%0A%3E*%20At%20the%20scale%20of%20a%20week%2C%20weekend%20commitments%20help%20get%20your%20conscious%2C%20energysucking%20thoughts%20off%20work.%20%28My%20wife%20swears%20I%20get%20my%20best%20ideas%20on%20Friday%20evening.%29%0A%3E*%20At%20the%20scale%20of%20a%20year%2C%20mandatory%20vacation%20policies%20help%20you%20refresh%20yourself%20completely.%20The%20French%20do%20this%20right%u2014two%20contiguous%20weeks%20of%20vacation%20aren%27t%20enough.%20You%20spend%20the%20first%20week%20decompressing%2C%20and%20the%20second%20week%20getting%20ready%20to%20go%20back%20to%20work.%20Therefore%2C%20three%20weeks%2C%20or%20better%20four%2C%20are%20necessary%20for%20you%20to%20be%20your%20most%20effective%20the%20rest%20of%20the%20year.%0A%23%23%23Do%20Over%0A%3EWhat%20do%20you%20do%20when%20you%20are%20feeling%20lost%3F%20Throw%20away%20the%20code%20and%20start%20over.%0A%u4F5C%u8005%u5728%u8FD9%u4E00%u7AE0%u544A%u8BC9%u4F60%uFF0C%u4E0D%u8981%u5728%u6CE5%u6F6D%u8D8A%u9677%u8D8A%u6DF1%uFF0C%u4E0D%u8981%u5BB3%u6015%u91CD%u65B0%u5F00%u59CB%u3002%u6362%u4E2A%u4F19%u4F34%uFF0C%u6362%u4E2A%u601D%u8DEF%uFF0C%u4F60%u53EF%u80FD%u6709%u66F4%u597D%u7684%u53D1%u73B0%u3002%0A%23%23Chapter%2027.%20Testing%20Patterns%0A%23%23%23Child%20Test%0A%u8FD9%u91CC%u8BF4%u7684%u662F%uFF0C%u5982%u679C%u4F60%u89C9%u5F97%u8FD9%u4E2A%u6D4B%u8BD5%u592A%u5927%uFF0C%u90A3%u5C31%u8981%u628A%u8FD9%u4E2A%u5927%u7684%u6D4B%u8BD5%u7834%u6210%u82E5%u5E72%u4E2A%u5C0F%u7684%u6D4B%u8BD5%uFF0C%u7136%u540E%u770B%u770B%u6709%u6CA1%u6709%u8FDB%u5C55%u3002%0A%23%23%23Mock%20Object%0A%3EHow%20do%20you%20test%20an%20object%20that%20relies%20on%20an%20expensive%20or%20complicated%20resource%3F%20Create%20a%20fake%20version%20of%20the%20resource%20that%20answers%20constants.%0A%3EIf%20you%20want%20to%20use%20Mock%20Objects%2C%20you%20can%27t%20easily%20store%20expensive%20resources%20in%20global%20variables.%u8981%u8BB0%u5F97%u6E05%u7406%u73B0%u573A%uFF0C%u5426%u5219%u4E07%u4E00%u5176%u4ED6%u7684%u4EE3%u7801%u628A%u4ED6%u5F53%u4F5C%u771F%u7684object%u5728%u4F7F%u7528%uFF0C%u5C31%u4F1A%u51FA%u5927%u95EE%u9898%u3002%u6240%u4EE5%u7F16%u7801%u6700%u57FA%u672C%u7684%u51C6%u5219%u662F%u5C11%u7528%u5168%u5C40%u53D8%u91CF%u3002%0A%3EMock%20Objects%20encourage%20you%20down%20the%20path%20of%20carefully%20considering%20the%20visibility%20of%20every%20object%2C%20reducing%20the%20coupling%20in%20your%20designs.%20%u8FD9%u91CC%u8BF4%u7684%u662F%uFF0C%u5982%u679C%u4F60%u7528Mock%20Object%uFF0C%u4F60%u5C31%u8981%u601D%u8003%u6211%u5230%u5E95%u8BE5%u4E0D%u8BE5%u628A%u8FD9%u4E2A%u5E9E%u7136%u5927%u7269%u66B4%u9732%u7ED9%u8FD9%u6BB5%u4EE3%u7801%u3002%u8FD9%u79CD%u601D%u8003%u6709%u52A9%u4E8E%u51CF%u5C0F%u8026%u5408%u6027%u3002%0A%23%23%23Self%20Shunt%0A%3EHow%20do%20you%20test%20that%20one%20object%20communicates%20correctly%20with%20another%3F%20Have%20the%20object%20under%20test%20communicate%20with%20the%20test%20case%20instead%20of%20with%20the%20object%20it%20expects.%0A%0A**Without%20Self%20Shunt**%0A%60%60%60python%0A%23%20ResultListenerTest%0Adef%20testNotification%28self%29%3A%20%0A%09result%3D%20TestResult%28%29%20%0A%09listener%3D%20ResultListener%28%29%20%0A%09result.addListener%28listener%29%20%0A%09WasRun%28%22testMethod%22%29.run%28result%29%0A%09assert%201%20%3D%3D%20listener.count%20%0A%0A%23%20ResultListener%0Aclass%20ResultListener%3A%0A%09def%20__init__%28self%29%3A%20%0A%09%09self.count%3D%200%20%0A%09def%20startTest%28self%29%3A%20%0A%09%09self.count%3D%20self.count%20+%201%20%0A%60%60%60%0A%0A**With%20Self%20Shunt**%0A%60%60%60python%0A%23%20ResultListenerTest%0Adef%20testNotification%28self%29%3A%20%0A%09self.count%3D%200%20%0A%09result%3D%20TestResult%28%29%0A%09result.addListener%28self%29%0A%09WasRun%28%22testMethod%22%29.run%28result%29%20%0A%09assert%201%20%3D%3D%20self.count%0Adef%20startTest%28self%29%3A%0A%09self.count%3D%20self.count%20+%201%0A%60%60%60%0A%0A%u8FD9%u91CC%u4E3E%u5F97%u4F8B%u5B50%u4E0D%u662F%u5F88%u660E%u767D%u3002%u4E2D%u6587%u8BD1%u672C%u91CC%uFF0C%u5C06self%20shunt%u7FFB%u8BD1%u6210%u81EA%u5206%u6D41%uFF0C%u611F%u89C9%u4E5F%u662F%u5B57%u9762%u7FFB%u8BD1%u3002%u6211%u7406%u89E3%u8FD9%u91CC%u60F3%u8BF4%u7684%u662F%uFF0C%u4E0D%u4E00%u5B9A%u8981%u5B9A%u4E49%u4E00%u4E2A%u7C7B%u6765%u505A%u5F53%u524D%u88AB%u6D4B%u8BD5%u7C7B%u6765%u505A%u7684%u4E8B%u60C5%uFF0C%u53EF%u4EE5%u5728test%20case%u91CC%u9762%u7528%u8BE5%u7C7B%u66B4%u9732%u7684%u63A5%u53E3%u6765%u505A%u4E8B%u60C5%u3002%0A%3ESelf%20Shunt%20may%20require%20that%20you%20use%20**Extract%20Interface**%20to%20get%20an%20interface%20to%20implement.%20You%20will%20have%20to%20decide%20whether%20extracting%20the%20interface%20is%20easier%2C%20or%20if%20testing%20the%20existing%20class%20as%20a%20**black%20box**%20is%20easier.%0A%0A%u8FD9%u91CC%u53C8%u770B%u6655%u4E86%uFF0Cself%20shunt%u8DDFextract%20interface%u6709%u5565%u5173%u7CFB%u3002%0A%3E%u5F53%u6211%u4EEC%u6CE8%u610F%u5230%u5728%u6211%u4EEC%u4EE3%u7801%u7ED3%u6784%u4E2D%u8D85%u8FC7%u4E00%u4E2A%u7C7B%u4F7F%u7528%u5230%u53E6%u4E00%u4E2A%u7279%u6B8A%u7C7B%u4E2D%u7684%u540C%u4E00%u4E2A%u65B9%u6CD5%u65F6%uFF0C%u6B64%u65F6%u5E94%u8BE5%u5C06%u8BE5%u7C7B%u4E2D%u7684%u65B9%u6CD5%u63D0%u53D6%u51FA%u6765%u653E%u5230%u4E00%u4E2A%u63A5%u53E3%uFF08interface%uFF09%u4E2D%uFF0C%u5E76%u5BF9%u5916%u63D0%u4F9B%u8FD9%u4E2A%u63A5%u53E3%u4EE5%u4FBF%u88AB%u7528%u6237%u7C7B%u8BBF%u95EE%u3001%u4F7F%u7528%uFF0C%u8FD9%u6837%u6709%u5229%u4E8E%u6253%u7834%u539F%u6765%u591A%u4E2A%u7C7B%u4E0E%u8FD9%u4E2A%u7279%u6B8A%u7C7B%u7684%u4F9D%u8D56%u5173%u7CFB%u3002%u8FD9%u4E2A%u91CD%u6784%u624B%u6CD5%u5F88%u5BB9%u6613%u5B9E%u73B0%uFF0C%u66F4%u91CD%u8981%u7684%u662F%u8FD9%u6837%u505A%u6709%u5229%u4E8E%u677E%u8026%u5408%u3002%20%u2014%u2014%u7F51%u7EDC%u4E0A%u7684%u89E3%u91CA%0A%0A%u6211%u89C9%u5F97%u8FD9%u91CC%u4F5C%u8005%u63D0%u5230%u7684extract%20interface%uFF0C%u5E76%u4E0D%u662F%u6211%u4EEC%u8BF4%u7684%u91CD%u6784%u91CC%u7684extract%20interface%u3002%u8FD9%u91CC%u8BF4%u8981%u6D4B%u8BD5A%u7C7B%u548CB%u7C7B%u901A%u4FE1%uFF0C%u6211%u4EEC%u4E0D%u76F4%u63A5%u7528B%u7C7B%uFF0C%u800C%u7528test%20case%u4E0EA%u7C7B%u901A%u4FE1%uFF0C%u4EE5%u6D4B%u8BD5%u901A%u4FE1%u7684A%u7C7B%u7AEF%u63A5%u53E3%u662F%u5426%u6B63%u786E%u3002extract%20interface%u8BF4%u7684%u662F%u4ECEB%u7C7B%u4E2Dextract%u63A5%u53E3%u51FA%u6765%u5230test%20case%u4E2D%u53BBimplement%u3002%u6216%u8005%u628AB%u7C7B%u76F4%u63A5%u5F53%u9ED1%u76D2%u5B50%u5728test%20case%u4E2D%u4F7F%u7528%u3002%0A%23%23%23Log%20String%0A%u8FD9%u4E2A%u5F88%u6709%u7528%u3002%u6709%u4E9B%u51FD%u6570%u6216%u8005%u8FC7%u7A0B%u662F%u6CA1%u6709%u8FD4%u56DE%u503C%u7684%uFF0C%u6211%u4EEC%u5C31%u53EF%u4EE5%u7528Log%20String%u7684%u65B9%u5F0F%u6765%u67E5%u770B%u8BE5%u8FC7%u7A0B%u6216%u51FD%u6570%u6709%u6CA1%u6709%u88AB%u8C03%u7528%u3002%u7C7B%u4F3C%u6211%u4EEC%u770Btrace%20log%u4E00%u6837%uFF0C%u901A%u8FC7%u770Btrace%20log%u80FD%u77E5%u9053%u673A%u5668%u6267%u884C%u7684%u4EE3%u7801%u662F%u5426%u6B63%u786E%u3002%0A%23%23%23Crash%20Test%20Dummy%0A%3EHow%20do%20you%20test%20error%20code%20that%20is%20unlikely%20to%20be%20invoked%3F%20Invoke%20it%20anyway%20with%20a%20special%20object%20that%20throws%20an%20exception%20instead%20of%20doing%20real%20work.%0A%23%23%23Broken%20Test%0A%u4F5C%u8005%u7ECF%u5E38%u80FD%u7ED9%u51FA%u4E00%u4E9B%u5F88%u5B9E%u7528%u7684%u5C0F%u7ECF%u9A8C%uFF0C%u8FD9%u91CC%u53C8%u6765%u4E86%uFF0C%u770B%u4E0B%u9762%u3002%0A%3EHow%20do%20you%20leave%20a%20programming%20session%20when%20you%27re%20programming%20alone%3F%20Leave%20the%20last%20test%20broken.%0A%0A%u5F53%u4F60%u8981%u8F6C%u53BB%u505A%u53E6%u5916%u4E00%u4EF6%u4E8B%u60C5%uFF0C%u800C%u624B%u5934%u4E0A%u7684%u4E8B%u60C5%u53C8%u6CA1%u7ED3%u675F%u65F6%u600E%u4E48%u529E%uFF1F%u8BA9%u6700%u540E%u4E00%u4E2A%u6D4B%u8BD5%u6545%u610F%u7684%u4E0D%u901A%u8FC7%u3002%u8FD9%u6837%u4E0B%u6B21%u5C31%u77E5%u9053%u4ECE%u54EA%u513F%u5F00%u59CB%uFF0C%u7136%u540E%u80FD%u8FC5%u901F%u4E0A%u624B%u3002%u918D%u9190%u704C%u9876%u554A%uFF01%u4EE5%u524D%u90FD%u662F%u8BA4%u4E3A%u505A%u53E6%u5916%u4E00%u4EF6%u4E8B%u60C5%u4E4B%u524D%u8981%u628A%u624B%u5934%u4E0A%u7684%u4E8B%u60C5%u5F04%u7684%u5C3D%u5584%u5C3D%u7F8E%uFF0C%u5176%u5B9E%u4E0D%u7136%u3002%u600E%u4E48%u505A%u5229%u4E8E%u540E%u671F%u7EE7%u7EED%u8FDB%u884C%uFF0C%u90A3%u5C31%u5E94%u8BE5%u600E%u4E48%u505A%u3002%0A%23%23%23Clean%20Check-in%0A%3EYou%20will%20occasionally%20find%20a%20test%20broken%20in%20the%20integration%20suite%20when%20you%20try%20to%20check%20in.%20What%20to%20do%3F%0A**The%20simplest%20rule**%20is%20to%20just%20throw%20away%20your%20work%20and%20start%20over.%20The%20broken%20test%20is%20pretty%20strong%20evidence%20that%20you%20didn%27t%20know%20enough%20to%20program%20what%20you%20just%20programmed.%0A%u4EC0%u4E48%u4EC0%u4E48%uFF1F%u7ADF%u7136%u8981%u6211%u4EEC%u6254%u6389%u6211%u4EEC%u505A%u7684%uFF0C%u7136%u540E%u91CD%u65B0%u5F00%u59CB%u3002%u5C31%u56E0%u4E3A%u6211%u4EEC%u7684%u6D4B%u8BD5%u548Cintegration%u6D4B%u8BD5%u7ED3%u679C%u4E0D%u4E00%u81F4%u3002%0A%u5927%u5E08%u7684%u8BDD%u603B%u662F%u6709%u9053%u7406%u7684%uFF0C%u4EE5%u540E%u8981%u597D%u597D%u8003%u8651%u8FD9%u4E00%u70B9%u3002%0A%23%23Chapter%2028.%20Green%20Bar%20Patterns%0A%23%23%23Fake%20It%20%28%27Til%20You%20Make%20It%29%0A%u505A%u5047%u4EE3%u7801%u8BA9%u6D4B%u8BD5%u901A%u8FC7%uFF0C%u7136%u540E%u518D%u4E00%u9879%u4E00%u9879%u5730%u5B8C%u6210%0A%23%23%23Triangulate%0A%u4F5C%u8005%u63D0%u5230%u7684%u6240%u8C13%u4E09%u89D2%u6CD5%u3002%u901A%u4FD7%u7684%u8BF4%uFF0C%u5C31%u662F%u53EA%u5728%u5FC5%u8981%u7684%u65F6%u5019%u505A%u62BD%u8C61%u6216%u901A%u7528%u5316%u5904%u7406%u3002%u901A%u5E38%u662F%u5728TDD%u7684%u91CD%u6784%u8FD9%u4E00%u6B65%u5B8C%u6210%u8FD9%u4E2A%u62BD%u8C61%u7684%u8FC7%u7A0B%u3002%u518D%u901A%u4FD7%u70B9%u8BF4%uFF0C%u5C31%u662F%u591A%u5F04%u51E0%u4E2Acase%uFF0C%u518D%u603B%u7ED3%u5171%u540C%u70B9%uFF0C%u4E4B%u540E%u505A%u62BD%u8C61%0A%u4ECE%u53E6%u4E00%u4E2A%u89D2%u5EA6%uFF0C%u4F5C%u8005%u53C8%u8BF4%u4E86%uFF1A%0A%3EI%20only%20use%20Triangulation%20when%20I%27m%20really%2C%20really%20unsure%20about%20the%20correct%20abstraction%20for%20the%20calculation.%20Otherwise%20I%20rely%20on%20either%20Obvious%20Implementation%20or%20Fake%20It.%0A%23%23%23One%20to%20Many%0A%3EHow%20do%20you%20implement%20an%20operation%20that%20works%20with%20collections%20of%20objects%3F%20Implement%20it%20without%20the%20collections%20first%2C%20then%20make%20it%20work%20with%20collections.%0A%0A%u4E2D%u5FC3%u601D%u60F3%u8FD8%u662F%u4E00%u4E2A%uFF0C%u4ECE%u663E%u800C%u6613%u89C1%u7684%u5730%u65B9%u5F00%u59CB%uFF0C%u6BCF%u6B21%u53EA%u505A%u4E00%u5C0F%u6B65%uFF0C%u7136%u540E%u4E00%u6B65%u4E00%u6B65%u5230%u8FBE%u6700%u7EC8%u7684%u76EE%u7684%u5730%u3002%u770B%u4E0B%u9762%u7684%u4F8B%u5B50%uFF1A%0A%60%60%60java%0A//%201.%20fake%20code%0Apublic%20void%20testSum%28%29%20%7B%20%0A%09assertEquals%285%2C%20sum%285%29%29%3B%20%0A%7D%20%0Aprivate%20int%20sum%28int%20value%29%20%7B%0A%09return%20value%3B%0A%7D%0A%0A//%202.%20add%20arrays%0Apublic%20void%20testSum%28%29%20%7B%0A%09assertEquals%285%2C%20sum%285%2C%20new%20int%5B%5D%20%7B5%7D%29%29%3B%0A%7D%0Aprivate%20int%20sum%28int%20value%2C%20int%5B%5D%20values%29%20%7B%0A%09return%20value%3B%0A%7D%0A%0A//%203.%20add%20real%20sum%20functionality%0Apublic%20void%20testSum%28%29%20%7B%0A%09assertEquals%285%2C%20sum%285%2C%20new%20int%5B%5D%20%7B5%7D%29%29%3B%0A%7D%0Aprivate%20int%20sum%28int%20value%2C%20int%5B%5D%20values%29%20%7B%0A%09int%20sum%3D%200%3B%20%0A%09for%20%28%20int%20i%3D%200%3B%20i%3Cvalues.length%3B%20i++%29%0A%09%09sum%20+%3D%20values%5Bi%5D%3B%0A%09return%20sum%3B%0A%7D%0A%0A//%204.%20delete%20unnecessary%20code%0Apublic%20void%20testSum%28%29%20%7B%20%0A%09assertEquals%285%2C%20sum%28new%20int%5B%5D%20%7B5%7D%29%29%3B%0A%7D%0Aprivate%20int%20sum%28%20int%5B%5D%20values%29%20%7B%0A%09int%20sum%3D%200%3B%20%0A%09for%20%28int%20i%3D%200%3B%20i%3Cvalues.length%3B%20i++%29%0A%09%09sum%20+%3D%20values%5Bi%5D%3B%0A%09return%20sum%3B%20sum%3B%0A%7D%0A%60%60%60%0A%u7EC6%u7EC6%u4F53%u4F1A%u5176%u95F4%u7684%u5DEE%u522B%u5427%u3002%0A%23%23Chapter%2029.%20xUnit%20Patterns%0A%23%23%23Assertion%0A%3EHow%20do%20you%20check%20that%20tests%20worked%20correctly%3F%20%0A%3EWrite%20boolean%20expressions%20that%20automate%20your%20judgment%20about%20whether%20the%20code%20worked.%0A%0A%u4F5C%u8005%u5728%u8FD9%u4E00%u7AE0%u53C8%u7ED9%u51FA%u4E86%u4E00%u4E2A%u5F88%u6709%u6307%u5BFC%u610F%u4E49%u7684%u89C2%u70B9%u3002%0A%3E%u5C3D%u91CF%u4E0D%u8981%u505A%u767D%u76D2%u6D4B%u8BD5%uFF0C%u5982%u679C%u4F60%u60F3%u505A%uFF0C%u8BF4%u660E%u4F60%u7684%u8BBE%u8BA1%u6709%u95EE%u9898%0A%23%23%23Fixture%0A%u8FD9%u91CC%u4F5C%u8005%u629B%u51FA%u4E86%u4E00%u4E2A%u95EE%u9898%uFF0C%u5982%u679C%u6709%u591A%u4E2A%u6D4B%u8BD5%u6709%u7C7B%u4F3C%u7684%u4EE3%u7801%u600E%u4E48%u529E%uFF1F%u4E24%u4E2A%u9009%u62E9%uFF1A%0A1.%20test%20case%u7C7B%u5B9A%u4E49%u4E2D%u62BD%u8C61%u51FA%u7C7B%u4F3CsetUp%u7684%u51FD%u6570%uFF0C%u6765%u505A%u91CD%u590D%u7684%u5DE5%u4F5C%0A2.%20%u6216%u8005%u7528%u7C7B%u4F3C%u4EE3%u7801%u751F%u6210%u5668%u7684%u4E1C%u897F%u6765%u4E3A%u6240%u6709%u9700%u8981%u7684%u6D4B%u8BD5%u751F%u6210fixture%0A%0A%u65B9%u6CD51%u6709%u65F6%u5019%u66F4%u7B26%u5408DRY%u539F%u5219%uFF0C%u4F46%u5B83%u7684%u7F3A%u70B9%u662F%uFF0C%u4F60%u8981%u8BB0%u4F4FsetUp%u91CC%u9762%u5230%u5E95%u505A%u4E86%u4EC0%u4E48%u3002%u4E24%u79CD%u65B9%u6CD5%u90FD%u53EF%u4EE5%uFF0C%u9009%u62E9%u66F4%u5408%u9002%u7684%u3002%0A%0A%23%23%23External%20Fixture%0A%u6240%u8C13%u7684%u5916%u90E8fixture%uFF0C%u5C31%u662F%u8981%u4FDD%u8BC1%u6D4B%u8BD5%u80FD%u6062%u590D%u73AF%u5883%u914D%u7F6E%u3002%0A%3E%u5728%u6240%u6709%u6D4B%u8BD5%u5F00%u59CB%u524D%u8C03setUp%uFF0C%u6240%u6709%u6D4B%u8BD5%u7ED3%u675F%u540E%u8C03tearDown%u3002%u8FD9%u5C31%u662FExternal%20Fixture%0A%23%23%23Test%20Method%0A%u8FD9%u4E00%u8282%u9488%u5BF9%u5982%u4F55%u5199%u6D4B%u8BD5%u65B9%u6CD5%u7ED9%u51FA%u4E86%u4E00%u4E9B%u5EFA%u8BAE%u3002%0A1.%20hierarchy%0A*%20Module%20%24%5Crightarrow%24%20Framework%0A*%20Class%20%24%5Crightarrow%24%20internal%20fixture%0A*%20Method%20%24%20%5Crightarrow%24%20test%20case%0A2.%20%u540D%u5B57%u957F%u6CA1%u5173%u7CFB%uFF0C%u8981%u8BA9%u4EE5%u540E%u7684%u8BFB%u8005%u6709%u8DB3%u591F%u7684%u7EBF%u7D22%u77E5%u9053%u4E3A%u4EC0%u4E48%u8981%u5199%u8FD9%u4E2Atest%0A3.%20%u6D4B%u8BD5%u4EE3%u7801%u8981%u591F%u76F4%u89C9%uFF0C%u8981%u591F%u7B80%u6D01%uFF08%u6700%u77ED3%u884C%uFF09%20%0A4.%20%u6CE8%u91CA%u91CC%u5199outline%uFF0C%u4E00%u9897%u661F%u8868%u793A%u4E00%u7EA7%uFF0C%u4F5C%u8005%u8BF4%u4ED6%u4E00%u822C%u51992-3%u7EA7outline%0A%60%60%60%20cpp%0A/*%20Adding%20to%20tuple%20spaces.%20*/%20%0A/*%20Taking%20from%20tuple%20spaces.%20*/%0A/**%20Taking%20a%20non-existent%20tuple.%20**/%20%0A/**%20Taking%20an%20existing%20tuple.%20**/%20%0A/**%20Taking%20multiple%20tuples.%20**/%20%0A/*%20Reading%20from%20tuple%20space.%20*/%0A%60%60%60%0A%23%23%23Exception%20Test%0A%u8FD9%u4E00%u8282%u8BF4%u7684%u662F%uFF0C%u5982%u679C%u5F85%u6D4B%u7684%u51FD%u6570%u9700%u8981%u629B%u51FA%u5F02%u5E38%uFF0C%u7528%u5982%u4E0B%u7684%u65B9%u6CD5%uFF1A%0A%60%60%60java%0Apublic%20void%20testMissingRate%28%29%20%7B%0A%09try%20%7B%0A%09%09exchange.findRate%28%22USD%22%2C%20%22GBP%22%29%3B%20%0A%09%09fail%28%29%3B%20//%20%u5982%u679C%u6CA1%u629B%u5F02%u5E38%u5C31fail%0A%09%7D%20catch%20%28IllegalArgumentException%20expected%29%20%7B%20%0A%09%7D%0A%7D%0A%60%60%60%0A%23%23%23All%20Tests%0A%3EHow%20do%20you%20run%20all%20tests%20together%3F%20Make%20a%20suite%20of%20all%20the%20suites%u2014one%20for%20each%20package%2C%20and%20one%20aggregating%20the%20package%20tests%20for%20the%20whole%20application.%0A%60%60%60java%0Apublic%20class%20AllTests%20%7B%0A%09//%20%u8FD9%u91CC%u6709%u4E2Amain%uFF0C%u65B9%u4FBF%u76F4%u63A5%u8C03%u7528%u7A0B%u5E8F%u5F00%u59CB%u6D4B%u8BD5%0A%09public%20static%20void%20main%28String%5B%5D%20args%29%20%7B%20%0A%09%09junit.swingui.TestRunner.run%28AllTests.class%29%3B%20%0A%09%7D%0A%09//%20%u8FD9%u91CC%u6709%u4E2Asuite%u5305%u542B%u4E86%u6240%u6709test%20case%0A%09public%20static%20Test%20suite%28%29%20%7B%20%0A%09%09TestSuite%20result%3D%20new%20TestSuite%28%22TFD%20tests%22%29%3B%20%0A%09%09result.addTestSuite%28MoneyTest.class%29%3B%20%0A%09%09result.addTestSuite%28ExchangeTest.class%29%3B%20%0A%09%09result.addTestSuite%28IdentityRateTest.class%29%3B%20%0A%09%09return%20result%3B%0A%09%7D%0A%7D%0A%60%60%60%0A%23%23Chapter%2030.%20Design%20Patterns%0A%u4F5C%u8005%u5728%u8FD9%u4E00%u7AE0%u5F15%u5165%u4E86%u4E00%u4E9BTDD%u4E2D%u4F1A%u7528%u5230%u7684%u8BBE%u8BA1%u6A21%u5F0F%u3002%u6709%u4E9B%u662F%u5199%u6D4B%u8BD5%u65F6%u7528%u7684%uFF0C%u6709%u7684%u662F%u91CD%u6784%u65F6%u7528%u7684%uFF0C%u6709%u7684%u4E24%u8005%u7686%u53EF%u3002%u4E0B%u9762%u662F%u672C%u7AE0%u6240%u6709%u6A21%u5F0F%u7684%u603B%u7EB2%u3002%0A%21%5BAlt%20text%5D%28./1456036251528.png%29%0A%23%23%23Command%0A%3EWhat%20do%20you%20do%20when%20you%20need%20the%20invocation%20of%20a%20computation%20to%20be%20more%20complicated%20than%20a%20simple%20method%20call%3F%0A%3EMake%20an%20object%20for%20the%20computation%20and%20invoke%20it.%0A%0A%u8FD9%u91CC%u6240%u8BF4%u7684%u547D%u4EE4%u662F%u8BF4%uFF0C%u628A%u8981%u8C03%u7528%u7684%u65B9%u6CD5%u5C01%u88C5%u6210%u4E00%u4E2Aobject%uFF0C%u7136%u540E%u8C03%u7528%u90A3%u4E2Aobject%0A%0A%23%23%23Value%20Object%0A%u628A%u4E00%u4E9B%u5E38%u91CF%u53C2%u6570%u505A%u6210object%u6765%u4F20%u9012%0A%3EWhen%20implementing%20a%20Value%20Object%2C%20every%20operation%20has%20to%20return%20a%20fresh%20object%2C%20%0A%3EAll%20Value%20Objects%20have%20to%20implement%20equality%20%0A%0A%23%23%23Null%20Object%0A%60%60%60java%0Apublic%20boolean%20setReadOnly%28%29%20%7B%20%0A%09SecurityManager%20guard%20%3D%20System.getSecurityManager%28%29%3B%20%0A%09if%20%28guard%20%21%3D%20null%29%20%7B%20%29%20%7B%0A%09%09guard.canWrite%28path%29%3B%0A%09%7D%20%0A%09return%20fileSystem.setReadOnly%28this%29%3B%0A%7D%0A%60%60%60%0A%u4E0A%u9762%u8FD9%u4E2A%u4F8B%u5B50getSecurityManager%u5728%u4E0D%u6210%u529F%u65F6%u8FD4%u56DENull%uFF0C%u7136%u540E%u8C03%u7528%u8005%u518D%u5224%u65AD%u8FD4%u56DE%u503C%u4EE5%u51B3%u5B9A%u4F1A%u4E0D%u4F1A%u7528%u7A7A%u6307%u9488%u6765%u8C03%u7528%u6210%u5458%u53D8%u91CF%u3002%0A%u8FD9%u662F%u4E00%u4E2A%u5F88%u5E38%u89C1%u7684%u505A%u6CD5%uFF0C%u8FD9%u6837%u505A%u4E0D%u597D%u7684%u662F%uFF0C%u901A%u5E38%u8FD9%u79CD%u5224%u65AD%u4F1A%u975E%u5E38%u975E%u5E38%u591A%uFF0C%u800C%u4E14%u7ED9%u4EBA%u4E00%u79CD%u201C%u4F1A%u4E0D%u4F1A%u6709%u54EA%u91CC%u6CA1%u5224%u65AD%uFF0C%u4EE5%u540E%u4F1A%u5BFC%u81F4crash%uFF1F%u201D%u7684%u62C5%u5FE7%u3002%0ANull%20Object%u8BBE%u8BA1%u6A21%u5F0F%u5C31%u662F%u8BA9getSecurityManager%u8FD4%u56DE%u4E00%u4E2A%u7279%u6B8A%u7684object%u6765%u53D6%u4EE3Null%uFF0C%u8FD9%u6837%u8BA9%u6240%u6709%u7684%u64CD%u4F5C%u90FD%u7EDF%u4E00%uFF0C%u4EE5%u51CF%u5C11%u91CD%u590D%u4EE3%u7801%u3002%0A%0A%23%23%23Template%20Method%0A%u6A21%u677F%u65B9%u6CD5%u3002%0A%3EWhen%20you%20find%20two%20variants%20of%20a%20sequence%20in%20two%20subclasses%2C%20you%20need%20to%20gradually%20move%20them%20closer%20together.%20Once%20you%27ve%20extracted%20the%20parts%20that%20are%20different%20from%20other%20methods%2C%20what%20you%20are%20left%20with%20is%20the%20Template%20Method.%20%0A%60%60%60java%0A//%20TestCase%0Apublic%20void%20runBare%28%29%20throws%20Throwable%20%7B%20%0A%09setUp%28%29%3B%20%0A%09try%20%7B%20%0A%09%09runTest%28%29%3B%0A%09%7D%0A%09finally%20%7B%0A%09%09tearDown%28%29%3B%0A%09%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23Pluggable%20Object%0A%u4E2D%u6587%u8BD1%u540D%u4E3A%u63D2%u5165%u5F0F%u5BF9%u8C61%u3002%u5F88%u96BE%u7406%u89E3%u54EA%u91CC%u6709%u8FD9%u4E2A%u6240%u8C13%u7684%u201C%u63D2%u5165%u201D%u3002%u8FD9%u4E2A%u8BBE%u8BA1%u6A21%u5F0F%u6838%u5FC3%u7684%u601D%u60F3%u5C31%u662F%u6D88%u9664%60if...else...%60%u7684%u60C5%u51B5%u3002%0A%u770B%u4F5C%u8005%u7684%u4F8B%u5B50%uFF0C%u89E3%u91CA%u7684%u5F88%u6E05%u695A%uFF1A%0A%60%60%60java%0A//%20Without%20Pluggable%20Object%0AFigure%20selected%3B%20%0Apublic%20void%20mouseDown%28%29%20%7B%20%0A%09selected%3D%20findFigure%28%29%3B%0A%09if%20%28selected%20%21%3D%20null%29%20//%20%u5230%u5904%u662Fnull%u5224%u65AD%0A%09%09select%28selected%29%3B%20%0A%7D%0Apublic%20void%20mouseMove%28%29%20%7B%0A%09if%20%28selected%20%21%3D%20null%29%0A%09%09move%28selected%29%3B%20%0A%09else%0A%09%09moveSelectionRectangle%28%29%3B%20%0A%7D%0Apublic%20void%20mouseUp%28%29%20%7B%0A%09if%20%28selected%20%3D%3D%20null%29%0A%09%09selectAll%28%29%3B%0A%7D%20%0A%0A//%20With%20Pluggable%20Object%0ASelectionMode%20mode%3B%0Apublic%20void%20mouseDown%28%29%20%7B%0A%09selected%3D%20findFigure%28%29%3B%0A%09//%20%u5168%u90E8%u5F52%u7ED3%u5230mode%u5B50%u7C7B%u91CC%u9762%u53BB%u5904%u7406%0A%09if%20%28selected%20%21%3D%20null%29%0A%09%09mode%3D%20SingleSelection%28selected%29%3B%0A%09else%0A%09%09mode%3D%20MultipleSelection%28%29%3B%0A%7D%0Apublic%20void%20mouseMove%28%29%20%7B%0A%09mode.mouseMove%28%29%3B%0A%7D%0Apublic%20void%20mouseUp%28%29%20%7B%0A%09mode.mouseUp%28%29%3B%0A%7D%0A%60%60%60%0A%23%23%23Pluggable%20Selector%0A%u8FD9%u4E00%u8282%u7684%u8BBE%u8BA1%u6A21%u5F0F%u548C%u4E0A%u4E00%u8282%u7684%u6781%u4E3A%u7C7B%u4F3C%u3002%u8FD9%u6B21%u8981%u5904%u7406%u6389%u7684%u662F%60switch...case...%60%u800C%u53C8%u4E0D%u7528%u5B50%u7C7B%u7EE7%u627F%u7684%u65B9%u5F0F%u6765%u52A8%u6001%u8C03%u7528%u3002%u8FD9%u91CC%u4F7F%u7528%u7684%u65B9%u6CD5%u53EB%u53CD%u5C04%u3002%0A%3E%u53CD%u5C04%uFF1A%u901A%u8FC7%u81EA%u8EAB%u7684%u5C5E%u6027%uFF08%u5982%u7C7B%u540D%uFF0C%u65B9%u6CD5%u540D%uFF09%u6765%u505A%u76F8%u5173%u903B%u8F91%0A%0A%u540C%u6837%u770B%u4F5C%u8005%u7684%u4F8B%u5B50%0A%60%60%60java%0Avoid%20print%28%29%20%7B%20%0A%09Method%20runMethod%3D%20getClass%28%29.getMethod%28printMessage%2C%20null%29%3B%0A%09runMethod.invoke%28this%2C%20new%20Class%5B0%5D%29%3B%0A%7D%0A%60%60%60%0A%u770B%u5230%u4E86%u6CA1getClass%uFF0CgetMethod%uFF0C%u8FD9%u5C31%u662F%u53CD%u5C04%u3002%u6709%u4E86%u8FD9%u4E2A%u51FD%u6570%u65E2%u4E0D%u9700%u8981switch%u6765%u8C03%u7528%u4E0D%u540C%u7684printxxx%u51FD%u6570%28printHtml%2C%20printXml...%29%uFF0C%u4E5F%u4E0D%u9700%u8981%u5B9A%u4E49%u5B50%u7C7B%u6765%u8C03%u7528%u4E0D%u540C%u7684print%u51FD%u6570%u3002%0A%u4F5C%u8005%u5728%u672C%u8282%u6700%u540E%u7ED9%u51FA%u4E86%u4E00%u6BB5%u5FE0%u544A%uFF1A%0A%3EPluggable%20Selector%20can%20definitely%20be%20overused.%20The%20biggest%20problem%20with%20it%20is%20tracing%20code%20to%20see%20whether%20a%20method%20is%20invoked.%20Use%20Pluggable%20Selector%20only%20when%20you%20are%20cleaning%20up%20a%20fairly%20straightforward%20situation%20in%20which%20each%20of%20a%20bunch%20of%20**subclasses%20has%20only%20one%20method.**%0A%23%23%23Factory%20Method%0A%u4F5C%u8005%u8BF4%u5DE5%u5382%u65B9%u6CD5%u63D0%u4F9B%u4E86%u7075%u6D3B%u6027%u3002%u6211%u662F%u6CA1%u770B%u51FA%u6765%u3002%u5BF9%u6BD4%u4E0B%u9762%u4E24%u6BB5%u4EE3%u7801%uFF0C%u8FD9%u91CC%u589E%u52A0%u4E86%u7075%u6D3B%u6027%uFF1F%0A%60%60%60java%0Apublic%20void%20testMultiplication%28%29%20%7B%0A%09Dollar%20five%3D%20Dollar%20five%3D%20new%20Dollar%285%29%3B%0A%09assertEquals%28new%20Dollar%2810%29%2C%20five.times%282%29%29%3B%20%0A%09assertEquals%28new%20Dollar%2815%29%2C%20five.times%283%29%29%3B%0A%7D%0A%0Apublic%20void%20testMultiplication%28%29%20%7B%20%0A%09Dollar%20five%20%3D%20Money.dollar%285%29%3B%20//%20%u5DE5%u5382%u65B9%u6CD5%0A%09assertEquals%28new%20Dollar%2810%29%2C%20five.times%282%29%29%3B%20%0A%09assertEquals%28new%20Dollar%2815%29%2C%20five.times%283%29%29%3B%20%0A%7D%0A//%20Money%0Astatic%20Dollar%20dollar%28%20Dollar%20dollar%28int%20amount%29%20%7B%20%0A%09return%20new%20Dollar%28amount%29%3B%0A%7D%0A%60%60%60%0A%u4F5C%u8005%u6700%u540E%u7ED9%u51FA%u4E86%u4E00%u70B9%u5FE0%u544A%0A%3E%20You%20have%20to%20remember%20that%20the%20method%20is%20really%20creating%20an%20object%2C%20even%20though%20it%20doesn%27t%20look%20like%20a%20constructor.%20Use%20Factory%20Method%20only%20when%20you%20need%20the%20flexibility%20it%20creates.%20%0A%0A%23%23%23Imposter%0A%u4E2D%u6587%u8BD1%u540D%u4E3A%u5192%u540D%u9876%u66FF%u3002%u6839%u636E%u6587%u4E2D%u7684%u9610%u8FF0%uFF0C%u6211%u7406%u89E3%u8FD9%u91CC%u8BB2%u7684%u4E0D%u662F%u4E00%u79CD**%u8BBE%u8BA1**%u6A21%u5F0F%uFF0C%u800C%u53EA%u662F%u4E00%u79CD%u6A21%u5F0F%uFF0C%u4E00%u79CD%u7279%u6B8A%u60C5%u51B5%u3002%u6307%u7684%u662F%u5982%u679C%u67D0%u4E00%u6BB5%u4EE3%u7801%uFF0C%u53EA%u5C06%u5176%u4E2D%u7684%u4E00%u4E2A%u540D%u5B57%uFF08%u7C7B%u3001%u65B9%u6CD5%u6216%u8005%u53D8%u91CF%u7B49%u7B49%uFF09%u66FF%u6362%u6210%u53E6%u5916%u4E00%u4E2A%u540D%u5B57%uFF0C%u5C31%u80FD%u5F97%u5230%u4E00%u6BB5%u65B0%u7684%u4EE3%u7801%uFF0C%u79F0%u4E3A%u5192%u540D%u9876%u66FF%u3002%u53D1%u73B0%u53EF%u4EE5Imposter%u7684%u60C5%u51B5%uFF0C%u5176%u5B9E%u5C31%u662F%u53D1%u73B0%u91CD%u590D%u3002%0A%60%60%60java%0A//%20%u4E0B%u9762%u8FD9%u4E24%u6BB5%u4EE3%u7801%u5C31%u53EA%u662F%u5C06RectangleFigure%u6362%u6210OvalFigure%uFF0C%u6B64%u662F%u4E3AImposter%u5192%u540D%u9876%u66FF%u3002%0AtestRectangle%28%29%20%7B%0A%09Drawing%20d%3D%20new%20Drawing%28%29%3B%0A%09d.addFigure%28new%20RectangleFigure%280%2C%2010%2C%2050%2C%20100%29%29%3B%20RectangleFigure%280%2C%2010%2C%2050%2C%20100%29%29%3B%0A%09RecordingMedium%20brush%3D%20new%20RecordingMedium%28%29%3B%20%0A%09d.display%28brush%29%3B%20%0A%09assertEquals%28%22rectangle%200%2010%2050%20100%5Cn%22%2C%20brush.log%28%29%29%3B%0A%7D%0A%0AtestOval%28%29%20%7B%0A%09Drawing%20d%3D%20new%20Drawing%28%29%3B%0A%09d.addFigure%28new%20OvalFigure%280%2C%2010%2C%2050%2C%20100%29%29%3B%20%0A%09RecordingMedium%20brush%3D%20new%20RecordingMedium%28%29%3B%20%0A%09d.display%28brush%29%3B%0A%09assertEquals%28%22oval%200%2010%2050%20100%5Cn%22%2C%20brush.log%28%29%29%3B%20%0A%7D%0A%60%60%60%0A%u4F5C%u8005%u8FD8%u63D0%u5230%u53E6%u5916%u4E24%u4E2A%u5728%u91CD%u6784%u4E2D%u7ECF%u5E38%u7528%u5230%u7684%u8BBE%u8BA1%u6A21%u5F0F%uFF0C%u672C%u8D28%u5176%u5B9E%u5C31%u662FImposter%20%u2014%u2014%20Null%20Object%20%26%20Composite%u3002%0A%0A%23%23%23Composite%0A%u6839%u636E%u4E0A%u4E00%u7AE0%u4F5C%u8005%u7684%u89C2%u70B9%uFF0C%u7EC4%u5408%u5176%u5B9E%u5C31%u662F%u4E00%u79CD%u5192%u540D%u9876%u66FF%u3002%u4F5C%u8005%u5728%u672C%u8282%u5F00%u5934%u8BF4%u4E86%uFF1A%0A%3EHow%20do%20you%20implement%20**an%20object**%20whose%20behavior%20is%20the%20composition%20of%20the%20behavior%20of%20a%20list%20of%20other%20objects%3F%20Make%20it%20an%20**Imposter**%20for%20**the%20component%20objects**.%0A%0A%u8BA9%u8FD9%u4E2A%u5BF9%u8C61%u79F0%u4E3A%u7EC4%u6210%u4ED6%u7684%u5BF9%u8C61%u7684%u5192%u540D%u9876%u66FF%u8005%u3002%u8BF4%u8D77%u6765%u5F88%u62D7%u53E3%u3002%u770B%u4F8B%u5B50%uFF1A%0A%60%60%60java%0A//%20Transaction%0ATransaction%28Money%20value%29%20%7B%0A%09this.value%3D%20value%3B%0A%7D%0A//%20Account%0ATransaction%20transactions%5B%5D%3B%0AMoney%20balance%28%29%20%7B%0A%09Money%20sum%3D%20Money.zero%28%29%3B%0A%09for%20%28int%20i%3D%200%3B%20i%20%3C%20transactions.length%3B%20i++%29%20%0A%09%09sum%3D%20sum.plus%28transactions%5Bi%5D.value%29%3B%0A%09return%20sum%3B%0A%7D%0A%60%60%60%0A%u8FD9%u4E2A%u5199%u6CD5%u7684%u7F3A%u70B9%u662F%uFF0C%u5F53%u8981%u7B97OverallAccount%u65F6%uFF0C%u6CA1%u8F99%u4E86%uFF0C%u8981%u5B9A%u4E49%u4E00%u4E2A%u65B0%u7C7B%u6765%u5904%u7406%u3002%u4E00%u4E2AOverallAccount%u662F%u4E00%u7EC4Account%u3002%u4F46OverallAccount%u5176%u5B9E%u8981%u505A%u7684%u4E5F%u662F%u4E00%u79CD%u7D2F%u52A0%uFF0C%u548CAccount%u505A%u7684%u5E76%u6CA1%u6709%u4EC0%u4E48%u533A%u522B%u3002%u8FD9%u5C31%u662F%u91CD%u590D%u3002%0A%u89E3%u51B3%u7684%u529E%u6CD5%u5C31%u662F%u6240%u8C13%u7684Composite%u3002%u628A%u8981%u7D2F%u52A0%u7684%u4E1C%u897F%u62BD%u8C61%u51FA%u6765%u79F0%u4E3AHoldings%uFF0CAccount%u7D2F%u52A0%u7684%u662FHoldings%uFF0COverallAccount%u7D2F%u52A0%u7684%u4E5F%u662FHoldings%u3002%0A%60%60%60java%0AHolding%20holdings%5B%5D%3B%0AMoney%20balance%28%29%20%7B%0A%09Money%20sum%3D%20Money.zero%28%29%3B%0A%09for%20%28%20%28int%20i%3D%200%3B%20i%20%3C%20holdings.length%3B%20i++%29%0A%09sum%3D%20sum.plus%28holdings%5Bi%5D.balance%28%29%29%3B%0A%09return%20sum%3B%0A%7D%0A%60%60%60%0A%u5199%u5230%u8FD9%u91CC%uFF0C%u6211%u4ECD%u7136%u4E0D%u662F%u7279%u522B%u660E%u767D%u4F55%u4E3AComposite%uFF08%u62FC%u5408%uFF0C%u590D%u5408%u7684%u610F%u601D%uFF09%u3002%u4F46%u6211%u4EEC%u662F%u7AD9%u5728%u5DE8%u4EBA%u7684%u80A9%u8180%u4E0A%uFF0C%u5BF9%u6BD4%u9605%u8BFB%u4E86%u4E2D%u6587%u8BD1%u672C%u540E%u6709%u4E86%u4E00%u70B9%u70B9%u611F%u89C9%u3002%u8FD9%u4E2A%u8BBE%u8BA1%u6A21%u5F0F%u7684%u4E2D%u6587%u8BD1%u540D%u4E3A-**%u9012%u5F52%u7EC4%u5408**%u3002%u6240%u8C13%u9012%u5F52%uFF0C%u5E94%u5F53%u6307%u7684%u662F%uFF0C%u901A%u8FC7%u6982%u5FF5%u4E0A%u7684%u62BD%u8C61%uFF0C%u5C06%u4E00%u4E2A%u5927%u7684%u6DF7%u5408%u7C7B%u5199%u6210%u4E00%u4E9B%u66F4%u62BD%u8C61%u7684%u6982%u5FF5%u7684%u7EC4%u5408%u3002%u4F8B%u5982%3A%20%0A%3EOvreallAccount%20%3C-%20Account%20%3C-%20Transactions%0A%3EOverallAccount%20%3C-%20Holding%20%26%20Account%20%3C-Holding%0A%0A%u901A%u8FC7%u9012%u5F52%u5730%u5C06OverallAccount%u5192%u540D%u9876%u66FF%u6210Holding%uFF0C%u4ECE%u800C%u4F7FOverallAccount%u6210%u4E3A%u4E00%u4E2AAccount%u6765%u8FBE%u5230%u6D88%u9664%u91CD%u590D%u3002%0A%u4F5C%u8005%u5728%u672C%u8282%u6700%u540E%u7ED9%u51FA%u4E86%u4F55%u65F6%u4F7F%u7528Composite%u7684%u5EFA%u8BAE%uFF1A%0A%3EAs%20is%20obvious%20from%20this%20discussion%2C%20I%27m%20still%20not%20able%20to%20articulate%20how%20to%20guess%20when%20a%20collection%20of%20objects%20is%20just%20a%20collection%20of%20objects%20and%20when%20you%20really%20have%20a%20Composite.%20The%20good%20news%20is%2C%20since%20you%27re%20getting%20good%20at%20refactoring%2C%20%3Cb%3E%3Cfont%20color%3D%22IndianRed%22%3Ethe%20moment%20the%20duplication%20appears%3C/font%3E%3C/b%3E%2C%20you%20can%20introduce%20Composite%20and%20watch%20program%20complexity%20disappear.%0A%0A%23%23%23Collecting%20Parameter%0A%u770B%u4E0D%u61C2%uFF0C%u4E0D%u77E5%u6240%u4E91%0A%0A%23%23%23Singleton%0A%u8FD9%u4E2A%u5C31%u662F%u5F88%u8457%u540D%u7684%u5355%u4F8B%u6A21%u5F0F%uFF0C%u7ECF%u5E38%u4F1A%u7528%u5230%u3002%u4F5C%u8005%u6CA1%u6709%u8BE6%u52A0%u9610%u91CA%uFF0C%u53EA%u662F%u544A%u8BEB%u8BFB%u8005%u4E0D%u8981%u7528%u5168%u5C40%u53D8%u91CF%28global%20variable%29%u3002%u6211%u731C%u4F5C%u8005%u7684%u610F%u601D%u662F%uFF0C%u5982%u679C%u8981%u7528%u5168%u5C40%u53D8%u91CF%uFF0C%u5C31%u7528%u5355%u4F8B%u6A21%u5F0F%u7684%u7C7B%u5BF9%u8C61%u5427%u3002%0A%0A%23%23Chapter%2031.%20Refactoring%0A%u5728TDD%u4E2D%uFF0C%u91CD%u6784%u8981%u505A%u7684%u5C31%u662F%uFF0C%u4FDD%u8BC1%u6240%u6709%u6D4B%u8BD5%u901A%u8FC7%u7684%u60C5%u51B5%u4E0B%uFF0C%u964D%u4F4E%u91CD%u590D%uFF08code%u4E4B%u95F4%uFF0Ccode%u4E0Etest%u4E4B%u95F4%uFF09%u3002%0A%23%23%23Reconcile%20Differences%0A%3E-%20How%20do%20you%20unify%20two%20similar%20looking%20pieces%20of%20code%3F%20Gradually%20bring%20them%20closer.%20Unify%20them%20only%20when%20they%20are%20absolutely%20identical.%20%u4E0D%u8981%u5F3A%u5236%u6574%u5408%uFF0C%u7B49%u4ED6%u4EEC%u5B8C%u5168%u76F8%u7B49%u4E86%u518D%u8BF4%0A%3E-%20Such%20a%20leap-of-faith%20refactoring%20is%20exactly%20what%20we%27re%20trying%20to%20avoid%20with%20our%20strategy%20of%20small%20steps%20and%20concrete%20feedback.%20Although%20you%20can%27t%20always%20avoid%20leapy%20refactorings%2C%20you%20can%20reduce%20their%20incidence.%20%u4E0D%u8981%u505A%u8DE8%u8D8A%u5F0F%u7684%u91CD%u6784%u3002%0A%3E-%20Sometimes%20you%20need%20to%20approach%20reconciling%20differences%20backward%u2014that%20is%2C%20think%20about%20how%20the%20last%20step%20of%20the%20change%20could%20be%20trivial%2C%20then%20work%20backward.%20%u53CD%u5411%u601D%u8003%uFF0C%u5C3D%u91CF%u8BA9%u6BCF%u4E00%u6B65%u90FD%u975E%u5E38%u5C0F%28trivial%29%uFF0C%u8FD9%u6837%u65B9%u4FBF%u56DE%u9000%u3002%0A%0A%23%23%23Isolate%20Change%0A%u9694%u79BB%u6539%u52A8%uFF0C%u4E5F%u5C31%u662F%u6211%u4EEC%u901A%u5E38%u505A%u7684%u4E00%u4E9B%u62BD%u8C61%u5C01%u88C5%u3002%u628A%u53D8%u5316%u7684%u90E8%u5206%u7528%u63A5%u53E3%u5305%u88C5%u8D77%u6765%uFF0C%u8FD9%u6837%u5C31%u8FBE%u5230%u4E86%u9694%u79BB%u7684%u6548%u679C%u3002%0A%3ESome%20possible%20ways%20to%20isolate%20change%20are%20Extract%20Method%20%28the%20most%20common%29%2C%20Extract%20Object%2C%20and%20Method%20Object.%0A%0A%23%23%23Migrate%20Data%0A%u4E0D%u77E5%u6240%u4E91%0A%0A%23%23%23Extract%20Method%0A%3EHow%20do%20you%20make%20a%20long%2C%20complicated%20method%20easier%20to%20read%3F%20Turn%20a%20small%20part%20of%20it%20into%20a%20separate%20method%20and%20call%20the%20new%20method.%20%u5C06%u4E00%u4E2A%u5927%u51FD%u6570%u6253%u788E%uFF0C%u4ECE%u4E2D%u63D0%u53D6%u4E00%u4E9B%u65B9%u6CD5%u51FA%u6765%u3002%0A%23%23%23%23%20How%0A%3E1.%20Find%20a%20region%20of%20the%20method%20that%20would%20make%20sense%20as%20its%20own%20method.%20Bodies%20of%0Aloop%2C%20whole%20loops%2C%20and%20branches%20of%20conditionals%20are%20common%20candidates%20for%20extraction.%0A%3E2.%20Make%20sure%20that%20there%20are%20no%20assignments%20to%20temporary%20variables%20declared%20outside%20the%0Ascope%20of%20the%20region%20to%20be%20extracted.%0A%3E3.%20Copy%20the%20code%20from%20the%20old%20method%20to%20the%20new%20method.%20Compile%20it.%0A%3E4.%20For%20each%20temporary%20variable%20or%20parameter%20of%20the%20original%20method%20used%20in%20the%20new%0Amethod%2C%20add%20a%20parameter%20to%20the%20new%20method.%0A%3E5.%20Call%20the%20new%20method%20from%20the%20original%20method.%0A%0A%23%23%23%23Why%0A1.%20%u589E%u5F3A%u53EF%u8BFB%u6027%0A2.%20%u6D88%u9664%u91CD%u590D%uFF0C%u5F53%u4F60%u53D1%u73B0%u6709%u4E24%u4E2A%u5927%u51FD%u6570%uFF0C%u6709%u4E00%u90E8%u5206%u662F%u76F8%u540C%u7684%uFF0C%u90A3%u5C31%u53EF%u4EE5%u63D0%u53D6%u51FA%u6765%u79F0%u4E3A%u65B0%u7684%u65B9%u6CD5%u3002%0A3.%20%u901A%u8FC7inline%u628A%u4E00%u5806%u51FD%u6570%u653E%u5728%u4E00%u8D77%uFF0C%u7136%u540E%u770B%u770B%u54EA%u91CC%u53EF%u4EE5extract%20%uFF08%u8FD9%u4E00%u70B9%u6211%u611F%u89C9%u5E94%u8BE5%u653E%u5728How%u91CC%u9762%uFF0C%u4F5C%u8005%u662F%u60F3%u627F%u4E0A%u542F%u4E0B%uFF0C%u5C06inline%u5427%uFF09%0A%0A%23%23%23Inline%20Method%0Ainline%u5F88%u7384%u4E4E%uFF0C%u5176%u5B9E%u5C31%u662F%u628A%u51FD%u6570%u7684%u4EE3%u7801%u590D%u5236%u5230%u8C03%u7528%u7684%u5730%u65B9%u3002%u597D%u5904%u662F%u4EC0%u4E48%uFF0C%u4F5C%u8005%u6709%u8BDD%u8BF4%uFF1A%0A%3EYou%20might%20like%20the%20second%20version%20better%2C%20or%20you%20might%20not.%20The%20point%20to%20note%20here%20is%20that%20you%20can%20use%20Inline%20Method%20to%20play%20around%20with%20the%20**flow%20of%20control**.%20%0A%u5176%u5B9E%u5C31%u662F%u8BA9%u4F60%u628A%u62BD%u8C61%u51FA%u6765%u7684%u4E1C%u897F%u653E%u5230%u4E00%u8D77%u91CD%u65B0%u62BD%u8C61%uFF0C%u770B%u770B%u4F1A%u4E0D%u4F1A%u6709%u66F4%u597D%u7684%u7ED3%u679C%u3002%u8FD9%u4E5F%u662F%u4E00%u79CD%u91CD%u6784%u7684%u65B9%u6CD5%u3002%0A%0A%23%23%23Extract%20Interface%0A%23%23%23%23How%0A%u5982%u4F55%u5C06%u4E00%u4E2A%u7C7B%u62BD%u8C61%u6210%u4E00%u4E2Ainterface%u3002%u6240%u8C13%u7684interface%u5C31%u662F%u53EA%u6709%u7EAF%u865A%u51FD%u6570%u7684%u7C7B%u3002%0A%3E1.%20Declare%20an%20interface.%20Sometimes%20the%20name%20of%20the%20existing%20class%20should%20be%20the%20name%20of%20the%20interface%2C%20in%20which%20case%20you%20should%20first%20rename%20the%20class.%0A%3E2.%20Have%20the%20existing%20class%20implement%20the%20interface.%0A%3E3.%20Add%20the%20necessary%20methods%20to%20the%20interface%2C%20expanding%20the%20visibility%20of%20the%20methods%20in%20the%20class%20if%20necessary.%0A%3E4.%20Change%20type%20declarations%20from%20the%20class%20to%20the%20interface%20where%20possible.%0A%0A%23%23%23%23Why%0A%u8FD9%u91CC%u63D0%u5230%u4E86%u4E24%u79CD%u60C5%u51B5%uFF1A%0A1.%20%u5F53%u4F60%u9700%u8981%u62BD%u8C61%u51FA%u7236%u7C7B%u65F6%0A2.%20%u5F53%u4F60%u7528%u4E86Mock%20Object%uFF0C%u73B0%u5728%u8981%u4E3A%u8FD9%u4E2Amock%20object%u62BD%u8C61%u51FA%u4E00%u4E2A%u771F%u6B63%u7684%u63A5%u53E3%u65F6%u3002%u4F5C%u8005%u8FD9%u91CC%u63D0%u5230%u4E86%u4E00%u4E2A%u5C0F%u6280%u5DE7%uFF0C%u5728%u8FD9%u79CD%u60C5%u51B5%u4E0B%u547D%u540D%u662F%u4E00%u4E2A%u5934%u75BC%u7684%u95EE%u9898%u3002%u4E0D%u59A8%u5C31%u628A%u65B0%u7684interface%u79F0%u4E3AIXXX%uFF0C%u4F8B%u5982%uFF0C%u539F%u6765%u7684%u53EB%60File%60%uFF0C%u65B0%u7684%u63A5%u53E3%u5C31%u79F0%u4E3A%60IFile%60%0A%0A%23%23%23Move%20Method%0A%u5176%u5B9E%u5C31%u662F%u628A%u4E00%u4E2A%u7C7B%u7684%u65B9%u6CD5%u79FB%u5230%u53E6%u5916%u4E00%u4E2A%u7C7B%u91CC%u9762%u3002%u4F46%u4F5C%u8005%u63D0%u5230%u4E86%u4E00%u79CD%u60C5%u51B5%u4E0B%uFF0C%u8FD9%u4E2A%u65B9%u6CD5%u4E0D%u9002%u7528%u3002%u5C31%u662F%u8FD9%u4E2A%u65B9%u6CD5%u4FEE%u6539%u4E86%u539F%u5148%u90A3%u4E2A%u7C7B%u7684%u6570%u636E%u3002%0A%0A%23%23%23Method%20Object%0A%u8FD9%u4E2A%u8BDD%u9898%u597D%u50CF%u5F88%u65B0%u9C9C%uFF0C%u4E4B%u524D%u770B%u5230%u8FC7%u5F88%u591A%u6B21%uFF0C%u4F46%u5E76%u6CA1%u6709%u6DF1%u7A76%u3002%u5148%u770B%u770BHow%uFF1A%0A%23%23%23%23How%0A%3E1.%20Create%20an%20object%20with%20the%20same%20parameters%20as%20the%20method.%0A%3E2.%20Make%20the%20local%20variables%20also%20instance%20variables%20of%20the%20object.%0A%3E3.%20Create%20one%20method%20called%20run%28%29%2C%20whose%20body%20is%20the%20same%20as%20the%20body%20of%20the%20original%20method.%0A%3E4.%20In%20the%20original%20method%2C%20create%20a%20new%20object%20and%20invoke%20run%28%29.%0A%0A%u6709%u4EC0%u4E48%u597D%u5904%uFF1F%0A%23%23%23%23Why%0A%u4E24%u4E2A%u597D%u5904%0A1.%20%u5728%u6DFB%u52A0%u590D%u6742%u903B%u8F91%u7684%u65F6%u5019%uFF0C%u5982%u679C%u6709%u5BF9%u4E00%u4E2A%u8FC7%u7A0B%u6709%u591A%u79CD%u65B9%u6CD5%uFF0C%u90A3%u521B%u5EFA%u4E00%u4E2A%u65B9%u6CD5%u5BF9%u8C61%uFF0C%u518D%u6269%u5C55%u8D77%u6765%u5C31%u5F88%u7B80%u5355%0A2.%20%u5728%u4E00%u4E2A%u590D%u6742%u51FD%u6570%u91CCextract%20interface%u7684%u65F6%u5019%uFF0C%u901A%u5E38%u4E00%u6BB5code%u9700%u89815%uFF0C6%u4E2A%u53C2%u6570%uFF0C%u8FD9%u6837%u7684%u8BDD%uFF0C%u867D%u7136%u51FD%u6570%u62BD%u53D6%u51FA%u6765%u4E86%uFF0C%u4F46%u662F%u5199%u6CD5%u5E76%u6CA1%u6709%u7B80%u5316%u591A%u5C11%u3002%u8FD9%u65F6%u5019%u5982%u679C%u6709%u65B9%u6CD5%u5BF9%u8C61%uFF0C%u5219%u5728%u7C7B%u91CC%u9762%u662F%u4E00%u4E2A%u72EC%u7ACB%u7684%u540D%u5B57%u7A7A%u95F4%uFF0C%u4F1A%u63D0%u4F9B%u989D%u5916%u7684%u4FBF%u5229%u3002%0A%0A%23%23%23Add%20Parameter%0A%u5C31%u662F%u52A0%u4E00%u4E2A%u53C2%u6570%uFF0C%u6CA1%u4EC0%u4E48%u7279%u522B%u7684%0A%0A%23%23%23Method%20Parameter%20to%20Constructor%20Parameter%0A%u5C31%u662F%u628A%u65B9%u6CD5%u8C03%u7528%u7684%u53C2%u6570%uFF0C%u53D8%u6210%u7C7B%u6210%u5458%u53D8%u91CF%u3002%u4E3A%u4EC0%u4E48%u8981%u8FD9%u4E48%u505A%uFF1F%0A%3EIf%20you%20pass%20the%20same%20parameter%20to%20several%20different%20methods%20in%20the%20same%20object%2C%20then%20you%20can%20simplify%20the%20API%20by%20passing%20the%20parameter%20once%20%28eliminating%20duplication%29.%20You%20can%20run%20this%20refactoring%20in%20reverse%20if%20you%20find%20that%20an%20instance%20variable%20is%20used%20in%20only%20one%20method.%0A%0A%u8FD9%u4E2A%u65B9%u6CD5%u7B80%u5355%u5B9E%u7528%u3002%0A%0A%23%23Chapter%2032.%20Mastering%20TDD%0A%u7ECF%u8FC731%u7AE0%u7684%u5B66%u4E60%uFF0C%u4F5C%u8005%u8BA4%u4E3A%u6211%u4EEC%u5DF2%u7ECF%u5B8C%u5B8C%u5168%u5168%u6709%u80FD%u529B%u6210%u4E3A%u4E00%u4E2A%u5408%u683C%u7684TDD%u7A0B%u5E8F%u5458%u4E86%u3002%u5728%u8FD9%u4E00%u7AE0%u91CC%uFF0C%u4F5C%u8005%u53C8%u603B%u7ED3%u51FA%u5F88%u591ATDD%u521D%u5B66%u8005%u7684%u95EE%u9898%uFF0C%u7ED9%u4E88%u56DE%u7B54%u3002%u7B54%u6848%u90FD%u662F%u4E00%u4E9B%u5F88%u5B9E%u7528%u7684%u5FE0%u544A%uFF0C%u7279%u6458%u53D6%u5982%u4E0B%u3002%0A%0A%23%23%23What%20don%27t%20you%20have%20to%20test%3F%0A%u4F5C%u8005%u5E76%u6CA1%u6709%u76F2%u76EE%u5F3A%u8C03%u6D4B%u8BD5%u91CD%u8981%uFF0C%u4E5F%u6CA1%u6709%u8BF4%u4EFB%u4F55%u5730%u65B9%u90FD%u8981%u5199%u6D4B%u8BD5%u3002%u4F5C%u8005%u8BF4%uFF1A%0A%3EUnless%20you%20have%20reason%20to%20distrust%20it%2C%20don%27t%20test%20code%20from%20others.%20%0A%3E%22Write%20tests%20until%20fear%20is%20transformed%20into%20boredom.%22%0A%0A%u53EA%u5728%u4F60%u4E0D%u76F8%u4FE1%u4F60%u7684code%u65F6%uFF0C%u5BF9%u4ED6%u8FDB%u884C%u6D4B%u8BD5%u3002%u6D4B%u8BD5%u4E5F%u4E0D%u662F%u4E3A%u4E86%u6D4B%u8BD5%u800C%u6D4B%u8BD5%uFF0C%u6216%u8005%u4E3A%u4E86%u4EE3%u7801%u7684%u5065%u58EE%uFF0C%u6D4B%u8BD5%u53EA%u662F%u4E3A%u4E86%u51CF%u5C11%u4F60%u7684%u7126%u8651%u3002%u8BA9%u4F60%u4E0D%u8981%u4ECE%u62C5%u5FC3%u53D8%u6210%u70E6%u8E81%uFF0C%u4EC5%u6B64%u800C%u5DF2%u3002%0A%u54CE%uFF01%u771F%u662F%u918D%u9190%u704C%u9876%uFF01%u76F8%u89C1%u6068%u665A%uFF01%0A%0A%23%23%23How%20do%20you%20know%20if%20you%20have%20good%20tests%3F%0A%u4EC0%u4E48%u6837%u7684%u6D4B%u8BD5%u4E0D%u597D%uFF1F%0A%3E1.%20Long%20setup%20code.%20%u5982%u679C%u4E3A%u4E86%u505A%u4E00%u4E2A%u7B80%u5355%u7684%u6D4B%u8BD5%uFF0C%u53EF%u80FD%u53EA%u6709%u51E0%u884C%u65AD%u8A00%uFF0C%u800C%u4E3A%u6B64%u521B%u5EFA%u4E00%u4E2A%u5DE8%u5927%u7684%u5BF9%u8C61%uFF0C%u90A3%u8BF4%u660E%u54EA%u91CC%u80AF%u5B9A%u51FA%u95EE%u9898%u4E86%u3002%0A%3E2.%20Setup%20duplication.%20%u5982%u679C%u4F60%u53D1%u73B0%u6709%u51E0%u4E2A%u6D4B%u8BD5%u62E5%u6709%u76F8%u540C%u6216%u76F8%u4F3C%u7684setup%u4EE3%u7801%uFF0C%u90A3%u8BF4%u660E%u4F60%u7684%u6D4B%u8BD5%u4E2D%u6709%u91CD%u590D%u7684%u5730%u65B9%u3002%0A%3E3.%20Long%20running%20tests.%20TDD%20tests%20that%20run%20a%20long%20time%20won%27t%20be%20run%20often.%20Suites%20that%20take%20longer%20than%20ten%20minutes%0Ainevitably%20get%20trimmed.%20%u4E00%u4E2A%u6D4B%u8BD5%u5957%u4EF6%u4E0D%u8981%u8D85%u8FC7%u5341%u5206%u949F%u3002%u5426%u5219%uFF0C%u53CD%u590D%u8FD0%u884C%u7684%u673A%u4F1A%u5C31%u4F1A%u6025%u5267%u964D%u4F4E%u3002%0A%3E4.%20Fragile%20tests.%20Tests%20that%20break%20unexpectedly%20suggest%20that%20one%20part%20of%20the%20application%20is%20surprisingly%20affecting%20another%20part.%20%u5982%u679C%u6D4B%u8BD5%u88AB%u65E0%u60C5%u6253%u65AD%uFF0C%u8BF4%u660E%u4F60%u7684%u7A0B%u5E8F%u91CC%u6709%u8026%u5408%u3002%0A%0A%23%23%23How%20does%20TDD%20lead%20to%20frameworks%3F%0A%u53C8%u88AB%u918D%u9190%u704C%u9876%u4E86%uFF01%0A%3ETDD%20appears%20to%20stand%20this%20advice%20on%20its%20head%3A%20%3Cb%3E%3Cfont%20color%3D%22IndianRed%22%3E%22Code%20for%20tomorrow%2C%20design%20for%20today.%22%20%3C/font%3E%3C/b%3EHere%27s%20what%20happens%20in%20practice.%20%u4E0D%u8981%u4E3A%u672A%u6765%u8003%u8651%u90A3%u4E48%u591A%uFF0C%u7B80%u5355%u7684%u8BA9%u6D4B%u8BD5%u901A%u8FC7%uFF0C%u7136%u540E%u53CA%u65F6%u7684%u505A%u91CD%u6784%u6D88%u9664%u91CD%u590D%uFF0C%u53CD%u800C%u80FD%u8FBE%u5230%u66F4%u597D%u7684%u8BBE%u8BA1%u6846%u67B6%uFF08frameworks%uFF09%u3002%0A%0A%23%23%23How%20much%20feedback%20do%20you%20need%3F%0A%u8FD9%u91CC%u8BF4%u7684%u548C%u4E4B%u524D%u4E00%u76F4%u5F3A%u8C03%u7684%u601D%u60F3%u5F88%u4E00%u81F4%0A%3E%20If%20our%20knowledge%20of%20the%20implementation%20gives%20us%20confidence%20even%20without%20a%20test%2C%20then%20we%20will%20not%20write%20that%20test.%20%0A%0A%23%23%23When%20should%20you%20delete%20tests%3F%0A%3E1.%20The%20first%20criterion%20for%20your%20tests%20is%20**confidence**.%20Never%20delete%20a%20test%20if%20it%20reduces%20your%20confidence%20in%20the%20behavior%20of%20the%20system.%0A%3E2.%20The%20second%20criterion%20is%20**communication**.%20If%20you%20have%20two%20tests%20that%20exercise%20the%20same%20path%20through%20the%20code%2C%20but%20they%20speak%20to%20different%20scenarios%20for%20a%20reader%2C%20leave%20them%20alone.%0A%0A%23%23%23Can%20you%20drive%20development%20with%20application-level%20tests%3F%0A%u4E0D%u8981%u5C1D%u8BD5%u505A%u5E94%u7528%u7EA7%u522B%u7684test%0A%0A%23%23%23How%20do%20you%20switch%20to%20TDD%20midstream%3F%0A%u8FD9%u4E5F%u662F%u6211%u60F3%u95EE%u7684%uFF0C%u4F5C%u8005%u7684%u56DE%u7B54%u662F%u8FD9%u672C%u4E66%u5C31%u662F%u4E3A%u4E86%u8FD9%u4E2A%u800C%u5199%u7684%u3002%0A%3EThere%20is%20a%20whole%20book%20%28or%20books%29%20to%20be%20written%20about%20switching%20to%20TDD%20when%20you%20have%20lots%20of%20code.%20What%20follows%20is%20necessarily%20only%20a%20teaser.%0A%0A%u600E%u4E48%u505A%uFF1F%0A1.%20So%20first%20we%20have%20to%20decide%20to%20limit%20the%20scope%20of%20our%20changes.%20%0A2.%20Second%2C%20we%20have%20to%20break%20the%20deadlock%20between%20tests%20and%20refactoring.%20%0A%093.%20%u600E%u4E48%u83B7%u5F97feedback%0A%09%091%29%20We%20can%20get%20feedback%20other%20ways%20than%20with%20tests%2C%20like%20working%20very%20carefully%20and%20with%20a%20partner.%20%0A%09%092%29%20We%20can%20get%20feedback%20at%20a%20gross%20level%2C%20like%20system-level%20tests%20that%20we%20know%20aren%27t%20adequate%20but%20give%20us%20some%20confidence.%20With%20this%20feedback%2C%20we%20can%20make%20the%20areas%20we%20have%20to%20change%20more%20accepting%20of%20change.%0A%0A%23%23%23How%20does%20TDD%20relate%20to%20the%20practices%20of%20Extreme%20Programming%3F%0A%u540D%u8BCD%u89E3%u91CA%uFF1A%5BExtreme%20Programming%20-%20XP%5D%28http%3A//baike.baidu.com/link%3Furl%3DNgfFcw4hxjOQHRtEArm4buq177_Xw562MDhrOykDcd-0EOv1xB_Oz3eslAn9X65cFdUel2xI7tTiqB3Gqyz3Ja%29%u6781%u9650%u7F16%u7A0B%0A%3E%u6781%u9650%u7F16%u7A0B%u662F%u4E00%u4E2A%u8F7B%u91CF%u7EA7%u7684%u3001%u7075%u5DE7%u7684%u8F6F%u4EF6%u5F00%u53D1%u65B9%u6CD5%uFF1B%u540C%u65F6%u5B83%u4E5F%u662F%u4E00%u4E2A%u975E%u5E38%u4E25%u8C28%u548C%u5468%u5BC6%u7684%u65B9%u6CD5%u3002%u5B83%u7684%u57FA%u7840%u548C%u4EF7%u503C%u89C2%u662F%u4EA4%u6D41%u3001%u6734%u7D20%u3001%u53CD%u9988%u548C%u52C7%u6C14%uFF1B%u5373%uFF0C%u4EFB%u4F55%u4E00%u4E2A%u8F6F%u4EF6%u9879%u76EE%u90FD%u53EF%u4EE5%u4ECE%u56DB%u4E2A%u65B9%u9762%u5165%u624B%u8FDB%u884C%u6539%u5584%uFF1A%u52A0%u5F3A%u4EA4%u6D41%uFF1B%u4ECE%u7B80%u5355%u505A%u8D77%uFF1B%u5BFB%u6C42%u53CD%u9988%uFF1B%u52C7%u4E8E%u5B9E%u4E8B%u6C42%u662F%u3002XP%u662F%u4E00%u79CD%u8FD1%u87BA%u65CB%u5F0F%u7684%u5F00%u53D1%u65B9%u6CD5%uFF0C%u5B83%u5C06%u590D%u6742%u7684%u5F00%u53D1%u8FC7%u7A0B%u5206%u89E3%u4E3A%u4E00%u4E2A%u4E2A%u76F8%u5BF9%u6BD4%u8F83%u7B80%u5355%u7684%u5C0F%u5468%u671F%uFF1B%u901A%u8FC7%u79EF%u6781%u7684%u4EA4%u6D41%u3001%u53CD%u9988%u4EE5%u53CA%u5176%u5B83%u4E00%u7CFB%u5217%u7684%u65B9%u6CD5%uFF0C%u5F00%u53D1%u4EBA%u5458%u548C%u5BA2%u6237%u53EF%u4EE5%u975E%u5E38%u6E05%u695A%u5F00%u53D1%u8FDB%u5EA6%u3001%u53D8%u5316%u3001%u5F85%u89E3%u51B3%u7684%u95EE%u9898%u548C%u6F5C%u5728%u7684%u56F0%u96BE%u7B49%uFF0C%u5E76%u6839%u636E%u5B9E%u9645%u60C5%u51B5%u53CA%u65F6%u5730%u8C03%u6574%u5F00%u53D1%u8FC7%u7A0B%u3002%0A%0ATDD%u4E0EXP%u7684%u5171%u901A%u4E4B%u5904%uFF1A%0A-%20Pairing%0A-%20Work%20fresh%0A-%20Continuous%20integration%0A-%20Simple%20design%0A-%20Refactoring%0A-%20Continuous%20delivery</center><br></div></div></div>",
            "tags": [
                "读书笔记",
                "TDD",
                "unittest",
                "Programming"
            ]
        }
    ]
}