<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Big Ben • Posts by &#34;算法&#34; tag</title>
        <link>https://blog.zhougy.top</link>
        <description></description>
        <language>en</language>
        <pubDate>Mon, 29 Apr 2013 15:50:10 +0800</pubDate>
        <lastBuildDate>Mon, 29 Apr 2013 15:50:10 +0800</lastBuildDate>
        <category>javascript</category>
        <category>angular</category>
        <category>操作系统</category>
        <category>arm</category>
        <category>单片机</category>
        <category>machine learning</category>
        <category>deep learning</category>
        <category>Linux</category>
        <category>内存管理</category>
        <category>Markdown</category>
        <category>python</category>
        <category>win32com</category>
        <category>nas</category>
        <category>synology</category>
        <category>USB</category>
        <category>Linux Device Drivers</category>
        <category>uboot</category>
        <category>http</category>
        <category>同步</category>
        <category>读书笔记</category>
        <category>程序员修炼之道</category>
        <category>算法</category>
        <category>c/c++</category>
        <category>hexo</category>
        <category>security</category>
        <category>SELinux</category>
        <category>Rap</category>
        <category>Eminem</category>
        <category>C++</category>
        <category>capability</category>
        <category>LD_PRELOAD</category>
        <category>红楼梦</category>
        <category>教育</category>
        <category>UT</category>
        <category>TDD</category>
        <category>code review</category>
        <category>committer</category>
        <category>印象笔记</category>
        <category>Obsidian</category>
        <category>coding</category>
        <category>群晖</category>
        <category>Calibre</category>
        <category>电子书</category>
        <category>Android</category>
        <category>xposed</category>
        <category>GitHub</category>
        <category>中断处理</category>
        <category>docker</category>
        <category>ttrss</category>
        <category>rsshub</category>
        <category>wallabag</category>
        <category>unittest</category>
        <category>mockito</category>
        <category>powermock</category>
        <category>QT</category>
        <category>nlp</category>
        <category>vim</category>
        <category>SpaceVim</category>
        <category>tmux</category>
        <category>面向对象</category>
        <category>promise</category>
        <category>mongodb</category>
        <category>Programming</category>
        <category>C++11</category>
        <category>IoT</category>
        <category>broadlink</category>
        <category>domoticz</category>
        <category>UML</category>
        <category>socket</category>
        <category>iptables</category>
        <category>neural network</category>
        <category>mock</category>
        <category>深度学习</category>
        <category>schedule algorithm</category>
        <category>glibc</category>
        <category>gtest</category>
        <category>gmock</category>
        <category>golang</category>
        <category>elf</category>
        <category>软件开发</category>
        <category>设计模式</category>
        <item>
            <guid isPermalink="true">https://blog.zhougy.top/2013/04/29/%E5%93%88%E5%B8%8C%E6%90%9C%E7%B4%A2/</guid>
            <title>哈希搜索</title>
            <link>https://blog.zhougy.top/2013/04/29/%E5%93%88%E5%B8%8C%E6%90%9C%E7%B4%A2/</link>
            <category>算法</category>
            <pubDate>Mon, 29 Apr 2013 15:50:10 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;enNote&#34; style=&#34;word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;&#34; title lang xml:lang dir&gt;&lt;div&gt;&lt;font face=&#34;Courier New&#34;&gt;&amp;#x54C8;&amp;#x5E0C;&amp;#x641C;&amp;#x7D22;&amp;#x662F;&amp;#x5178;&amp;#x578B;&amp;#x7684;&amp;#x4EE5;&amp;#x7A7A;&amp;#x95F4;&amp;#x6362;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x7B97;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8BBA;&amp;#x5176;&amp;#x5EFA;&amp;#x7ACB;&amp;#x54C8;&amp;#x5E0C;&amp;#x8868;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x8FD8;&amp;#x662F;&amp;#x641C;&amp;#x7D22;&amp;#x65F6;&amp;#x95F4;&amp;#x5747;&amp;#x5C0F;&amp;#x4E8E;&amp;#x4F18;&amp;#x8D28;&amp;#x7B97;&amp;#x6CD5;&amp;#xFF1A;&amp;#x5FEB;&amp;#x901F;&amp;#x6392;&amp;#x5E8F;&amp;#x548C;&amp;#x4E8C;&amp;#x5206;&amp;#x641C;&amp;#x7D22;&amp;#x3002;&amp;#x5728;&amp;#x6570;&amp;#x7EC4;&amp;#x5C3A;&amp;#x5BF8;&amp;#x4E3A;1&amp;#x4E07;&amp;#xFF0C;&amp;#x54C8;&amp;#x5E0C;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;1000&amp;#xFF08;&amp;#x54C8;&amp;#x5E0C;&amp;#x51FD;&amp;#x6570;&amp;#x662F;val%HASH_ARG&amp;#xFF09;&amp;#x65F6;&amp;#xFF0C;&amp;#x5176;&amp;#x65F6;&amp;#x95F4;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;qsort takes: 1755060 ns (1.75 ms)&lt;br clear=&#34;none&#34;&gt;build hash table takes: 1181122 ns (1.18 ms)&lt;/p&gt;&lt;p&gt;Array size: 10000, Value range: 10000&lt;br clear=&#34;none&#34;&gt;average search time:&lt;br clear=&#34;none&#34;&gt;binary search: 166 ns&lt;br clear=&#34;none&#34;&gt;hash search: 48 ns&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Courier New&#34;&gt;&lt;font face=&#34;Courier New&#34;&gt;&lt;br&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Courier New&#34;&gt;&amp;#x5176;&amp;#x6392;&amp;#x5E8F;&amp;#x65F6;&amp;#x95F4;&amp;#x51CF;&amp;#x5C11;30%&amp;#xFF0C;&amp;#x5355;&amp;#x6B21;&amp;#x641C;&amp;#x7D22;&amp;#x65F6;&amp;#x95F4;&amp;#x51CF;&amp;#x5C11;70%&amp;#x3002;&amp;#x6027;&amp;#x80FD;&amp;#x63D0;&amp;#x5347;&amp;#x5F88;&amp;#x591A;&amp;#x3002;&amp;#x7F3A;&amp;#x70B9;&amp;#x662F;&amp;#x7531;&amp;#x4E8E;&amp;#x5F15;&amp;#x5165;hash_node&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;1&amp;#x4E07;&amp;#x4E2A;&amp;#x6574;&amp;#x6570;&amp;#xFF0C;&amp;#x5927;&amp;#x5C0F;&amp;#x4E3A;4Bx1w&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x6269;&amp;#x5C55;&amp;#x51FA;16Bx1w&amp;#xFF0C;&amp;#x7A7A;&amp;#x95F4;&amp;#x4F7F;&amp;#x7528;&amp;#x63D0;&amp;#x5347;&amp;#x4E86;4&amp;#x500D;&amp;#x3002;&amp;#x53E6;&amp;#x6709;&amp;#x7A7A;&amp;#x95F4;&amp;#x63D0;&amp;#x5347;&amp;#x4E24;&amp;#x500D;&amp;#x7684;&amp;#x7B97;&amp;#x6CD5;&amp;#xFF08;&amp;#x53C2;&amp;#x8003;&lt;/font&gt;&lt;a href=&#34;evernote:///view/161681/s10/7f820bda-9098-43ce-95de-eb1203317f77/7f820bda-9098-43ce-95de-eb1203317f77/&#34; style=&#34;color: rgb(105, 170, 53);&#34;&gt;&amp;#x6563;&amp;#x5217;&amp;#x6CD5;&amp;#x89E3;&amp;#x51B3;1000&amp;#x4E2A;&amp;#x6574;&amp;#x6570;&amp;#x7684;&amp;#x641C;&amp;#x7D22; - cqnuztq&amp;#x7684;&amp;#x4E13;&amp;#x680F; - &amp;#x535A;&amp;#x5BA2;&amp;#x9891;&amp;#x9053; - CSDN.NET&lt;/a&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;&amp;#xFF09;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;&amp;#x5F53;&amp;#x6570;&amp;#x7EC4;&amp;#x5C3A;&amp;#x5BF8;&amp;#x8FDB;&amp;#x4E00;&amp;#x6B65;&amp;#x4E0A;&amp;#x5347;&amp;#xFF08;10w&amp;#xFF09;&amp;#xFF0C;&amp;#x800C;&amp;#x503C;&amp;#x57DF;&amp;#x4E0D;&amp;#x53D8;&amp;#x65F6;&amp;#xFF0C;&amp;#x65F6;&amp;#x95F4;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;qsort takes: 25675050 ns (25.67 ms)&lt;br&gt;build hash table takes: 47017148 ns (47.02 ms)&lt;br&gt;&lt;br&gt;Array size: 100000, Value range: 10000&lt;br&gt;average search time:&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; binary search: 220 ns&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; hash search: 276 ns&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;#x6B64;&amp;#x65F6;&amp;#x54C8;&amp;#x5E0C;&amp;#x641C;&amp;#x7D22;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5728;&amp;#x6392;&amp;#x5E8F;&amp;#x548C;&amp;#x641C;&amp;#x7D22;&amp;#x4E0A;&amp;#xFF0C;&amp;#x5168;&amp;#x9762;&amp;#x843D;&amp;#x540E;&amp;#x4E86;&amp;#x3002;&amp;#x7A76;&amp;#x5176;&amp;#x539F;&amp;#x56E0;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1F;&amp;#x56E0;&amp;#x4E3A;&amp;#x6B64;&amp;#x65F6;&amp;#x6570;&amp;#x7EC4;&amp;#x5C3A;&amp;#x5BF8;&amp;#x4E0A;&amp;#x5347;&amp;#xFF0C;&amp;#x4F46;&amp;#x54C8;&amp;#x5E0C;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x54C8;&amp;#x5E0C;&amp;#x53C2;&amp;#x6570;&amp;#x5E76;&amp;#x6CA1;&amp;#x53D8;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x54C8;&amp;#x5E0C;&amp;#x51B2;&amp;#x7A81;&amp;#x6570;&amp;#x5927;&amp;#x5927;&amp;#x4E0A;&amp;#x5347;&amp;#x3002;&amp;#x8003;&amp;#x8651;&amp;#x51B2;&amp;#x7A81;&amp;#x7684;&amp;#x6982;&amp;#x7387;&amp;#x76F8;&amp;#x540C;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x6BCF;&amp;#x4E2A;&amp;#x54C8;&amp;#x5E0C;&amp;#x7D22;&amp;#x5F15;&amp;#x4E0B;&amp;#x7684;&amp;#x51B2;&amp;#x7A81;&amp;#x6570;&amp;#x7EA6;&amp;#x4E3A;&amp;#xFF08;ARRAY_SIZE / HASH_ARG&amp;#xFF09;&amp;#xFF0C;&amp;#x4EE5;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x53D6;&amp;#x503C;&amp;#x4E3A;&amp;#x4F8B;&amp;#xFF0C;&amp;#x5219;&amp;#x51B2;&amp;#x7A81;&amp;#x6570;&amp;#x4E3A;100&amp;#xFF0C;&amp;#x5373;&amp;#x5176;&amp;#x65F6;&amp;#x95F4;&amp;#x590D;&amp;#x6742;&amp;#x5EA6;&amp;#x4E3A;100&amp;#xFF0C;&amp;#x800C;&amp;#x4E8C;&amp;#x5206;&amp;#x641C;&amp;#x7D22;&amp;#x7684;&amp;#x590D;&amp;#x6742;&amp;#x5EA6;&amp;#x4E3A;logn = 16.6&amp;#xFF0C;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8FDC;&amp;#x5C0F;&amp;#x4E8E;&amp;#x54C8;&amp;#x5E0C;&amp;#x641C;&amp;#x7D22;&amp;#x7684;&amp;#x590D;&amp;#x6742;&amp;#x5EA6;&amp;#x4E86;&amp;#x3002;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;&amp;#x7EFC;&amp;#x4E0A;&amp;#xFF0C;&amp;#x54C8;&amp;#x5E0C;&amp;#x641C;&amp;#x7D22;&amp;#x9002;&amp;#x7528;&amp;#x4E8E;&amp;#x5C5E;&amp;#x6027;&amp;#x503C;&amp;#x8303;&amp;#x56F4;&amp;#x8FDC;&amp;#x5C0F;&amp;#x4E8E;&amp;#x6570;&amp;#x7EC4;&amp;#x4E2A;&amp;#x6570;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x7B14;&amp;#x8BB0;&amp;#x4E2D;&amp;#x6709;&amp;#x4F7F;&amp;#x7528;&amp;#x54C8;&amp;#x5E0C;&amp;#x641C;&amp;#x7D22;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x6BD4;&amp;#x8F83;&amp;#x597D;&amp;#x7684;&amp;#x9610;&amp;#x8FF0;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7279;&amp;#x6027;&amp;#xFF08;&lt;/span&gt;&lt;a href=&#34;evernote:///view/161681/s10/e13b4258-3932-4e07-8211-5746cd6cc1fd/e13b4258-3932-4e07-8211-5746cd6cc1fd/&#34; style=&#34;color: rgb(105, 170, 53);&#34;&gt;&amp;#x4ECE;&amp;#x5927;&amp;#x91CF;&amp;#x6574;&amp;#x6570;&amp;#x4E2D;&amp;#x9009;&amp;#x53D6;&amp;#x6700;&amp;#x5C0F;/&amp;#x5927;&amp;#x7684;&amp;#x82E5;&amp;#x5E72;&amp;#x4E2A; &amp;#xAB; GoCalf Blog&lt;/a&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;&amp;#xFF09;&amp;#x3002;&amp;#x4F46;&amp;#x6570;&amp;#x7EC4;&amp;#x8303;&amp;#x56F4;&amp;#x4E0D;&amp;#x80FD;&amp;#x8FC7;&amp;#x5927;&amp;#xFF0C;&amp;#x5BFC;&amp;#x81F4;&amp;#x51B2;&amp;#x7A81;&amp;#x6570;&amp;#x4E0A;&amp;#x5347;&amp;#x8FC7;&amp;#x5FEB;&amp;#x3002;&amp;#x6216;&amp;#x8005;&amp;#x8BF4;&amp;#x4E3A;&amp;#x4E86;&amp;#x63D0;&amp;#x9AD8;&amp;#x54C8;&amp;#x5E0C;&amp;#x641C;&amp;#x7D22;&amp;#x7684;&amp;#x6548;&amp;#x7387;&amp;#xFF0C;&amp;#x6700;&amp;#x597D;&amp;#x80FD;&amp;#x627E;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x80FD;&amp;#x6D88;&amp;#x9664;&amp;#x51B2;&amp;#x7A81;&amp;#x7684;&amp;#x54C8;&amp;#x5E0C;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x9644;&amp;#x4E0A;&amp;#x6E90;&amp;#x7801;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;// Hash search&lt;br&gt;// Ben @ 2013-04-29&lt;br&gt;&lt;br&gt;#include &amp;lt;stdio.h&amp;gt;&lt;br&gt;#include &amp;lt;string.h&amp;gt;&lt;br&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;br&gt;&lt;br&gt;struct hash_node&lt;br&gt;{&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int inited;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int key;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int pos;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; struct hash_node* next;&lt;br&gt;};&lt;br&gt;&lt;br&gt;#define HASH_ARG&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; 1000&lt;br&gt;static struct hash_node hash_table[HASH_ARG];&lt;br&gt;&lt;br&gt;void build_hash_table(int* L, int size)&lt;br&gt;{&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; memset ((char*)hash_table, 0, sizeof(hash_table));&lt;br&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int i;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; for (i=0; i&amp;lt;size; i++)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int index = hash(L[i]);&lt;br&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (hash_table[index].inited == 1)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; struct hash_node* n = &amp;amp;hash_table[index];&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; while (n-&amp;gt;next != NULL)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; n = n-&amp;gt;next;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; n-&amp;gt;next = (struct hash_node*)malloc(sizeof(struct hash_node));&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; n-&amp;gt;next-&amp;gt;inited = 1;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; n-&amp;gt;next-&amp;gt;key = L[i];&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; n-&amp;gt;next-&amp;gt;pos = i;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; n-&amp;gt;next-&amp;gt;next = NULL;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; else&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; hash_table[index].inited = 1;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; hash_table[index].key = L[i];&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; hash_table[index].pos = i;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;br&gt;}&lt;br&gt;&lt;br&gt;void destroy_hash_table()&lt;br&gt;{&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int i;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; for(i=0; i&amp;lt;HASH_ARG; i++)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; struct hash_node* n = hash_table[i].next;&lt;br&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; while (n != NULL)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; struct hash_node* tmp = n-&amp;gt;next;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; free(n);&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; n = tmp;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;br&gt;}&lt;br&gt;&lt;br&gt;int hash(int val)&lt;br&gt;{&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; return val%HASH_ARG;&lt;br&gt;}&lt;br&gt;&lt;br&gt;int hsearch(int t, int* L, int size)&lt;br&gt;{&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int index = hash(t);&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; struct hash_node* i = &amp;amp;hash_table[index];&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; while (i != NULL)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (t == i-&amp;gt;key)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; break;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; else&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; i = i-&amp;gt;next;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;br&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (i ==&amp;#xA0; NULL)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; return -1;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; else&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; return i-&amp;gt;pos;&lt;br&gt;}&lt;/font&gt;&lt;br&gt;&lt;/div&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.zhougy.top/2013/04/10/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F-qsort/</guid>
            <title>快速排序-qsort</title>
            <link>https://blog.zhougy.top/2013/04/10/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F-qsort/</link>
            <category>算法</category>
            <pubDate>Wed, 10 Apr 2013 23:51:42 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;enNote&#34; style=&#34;word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;&#34; title lang xml:lang dir&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;&amp;#x6709;&amp;#x51E0;&amp;#x70B9;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF1A;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;1.&amp;#x5FEB;&amp;#x901F;&amp;#x6392;&amp;#x5E8F;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x590D;&amp;#x6742;&amp;#x5EA6;&amp;#x662F;nlogn&amp;#xFF0C;&amp;#x63A8;&amp;#x5230;&amp;#x300A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x300B;&amp;#x4E0A;&amp;#x6709;&amp;#xFF0C;&amp;#x770B;&amp;#x4E0D;&amp;#x61C2;&amp;#x3002;&amp;#x5728;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E3A;&amp;#x6709;&amp;#x5E8F;&amp;#x65F6;&amp;#xFF0C;&amp;#x5FEB;&amp;#x901F;&amp;#x6392;&amp;#x5E8F;&amp;#x9000;&amp;#x5316;&amp;#x6210;&amp;#x5192;&amp;#x6CE1;&amp;#x6392;&amp;#x5E8F;&amp;#x3002;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;2.&amp;#x6CE8;&amp;#x610F;&amp;#x662F;low&amp;#x8DDF;high&amp;#x8BB0;&amp;#x5F55;&amp;#x4EA4;&amp;#x6362;&amp;#xFF0C;&amp;#x800C;&amp;#x5E76;&amp;#x975E;&amp;#x8DDF;&amp;#x67A2;&amp;#x8F74;&amp;#x8BB0;&amp;#x5F55;&amp;#x4EA4;&amp;#x6362;&amp;#x3002;&amp;#x524D;&amp;#x8005;&amp;#x624D;&amp;#x80FD;&amp;#x4FDD;&amp;#x8BC1;low&amp;#xFF0C;high&amp;#x4E24;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x6709;&amp;#x5E8F;&amp;#x3002;&amp;#x53EA;&amp;#x4E0D;&amp;#x8FC7;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;low&amp;#xFF0C;high&amp;#x8BB0;&amp;#x5F55;&amp;#x4EA4;&amp;#x6362;&amp;#x540E;&amp;#xFF0C;low&amp;#x8BB0;&amp;#x5F55;&amp;#x672C;&amp;#x8EAB;&amp;#x5B58;&amp;#x5728;&amp;#x5076;&amp;#x7136;&amp;#x6027;&amp;#xFF0C;&amp;#x5373;&amp;#x5176;&amp;#x8DDF;&amp;#x67A2;&amp;#x8F74;&amp;#x8BB0;&amp;#x5F55;&amp;#x7684;&amp;#x76F8;&amp;#x5BF9;&amp;#x5927;&amp;#x5C0F;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&amp;#x3002;&amp;#x9700;&amp;#x8981;&amp;#x6BD4;&amp;#x8F83;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x505A;&amp;#x51FA;&amp;#x4EA4;&amp;#x6362;&amp;#x52A8;&amp;#x4F5C;&amp;#xFF0C;&amp;#x624D;&amp;#x80FD;&amp;#x4FDD;&amp;#x8BC1;&amp;#x524D;&amp;#x540E;&amp;#x4E24;&amp;#x4E2A;&amp;#x5206;&amp;#x652F;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x6709;&amp;#x5E8F;&amp;#xFF0C;&amp;#x5982;&amp;#x4E0B;&amp;#x9762;&amp;#x7EFF;&amp;#x8272;&amp;#x6CE8;&amp;#x91CA;&amp;#x90E8;&amp;#x5206;&amp;#x6240;&amp;#x6307;&amp;#x51FA;&amp;#x7684;&amp;#x3002;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;================2013/5/2&amp;#x66F4;&amp;#x65B0;===========================&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;Programming Pearls&amp;#x7B2C;11&amp;#x7AE0;&amp;#xFF0C;&amp;#x7740;&amp;#x91CD;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#x5FEB;&amp;#x901F;&amp;#x6392;&amp;#x5E8F;&amp;#xFF0C;&amp;#x5176;&amp;#x8BB2;&amp;#x89E3;&amp;#x7684;&amp;#x6DF1;&amp;#x5EA6;&amp;#x548C;&amp;#x7B97;&amp;#x6CD5;&amp;#x7684;&amp;#x4F18;&amp;#x7F8E;&amp;#x5EA6;&amp;#x90FD;&amp;#x8FDC;&amp;#x5927;&amp;#x4E8E;&amp;#x4E25;&amp;#x851A;&amp;#x654F;&amp;#x7684;&amp;#x300A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x300B;&amp;#x7B2C;&amp;#x5341;&amp;#x7AE0;&amp;#x6240;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;&amp;#x3002;&amp;#x6311;&amp;#x4E00;&amp;#x79CD;&amp;#x6BD4;&amp;#x8F83;&amp;#x57FA;&amp;#x672C;&amp;#x7684;&amp;#x5FEB;&amp;#x901F;&amp;#x6392;&amp;#x5E8F;&amp;#x5B9E;&amp;#x73B0;&amp;#x5982;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5E76;&amp;#x505A;&amp;#x4E00;&amp;#x4E9B;&amp;#x7B14;&amp;#x8BB0;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&#34;#41AD1C&#34; face=&#34;Consolas&#34;&gt;// &amp;#x89E3;&amp;#x51B3;&amp;#x4E86;&amp;#x539F;&amp;#x5148;swap&amp;#x76F8;&amp;#x540C;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;#define swap(a, b) \&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (a!=b)\&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {\&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; a = (a)+(b);\&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; b = (a)-(b);\&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; a = (a)-(b);\&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;void qsort(int* L, int size)&lt;br&gt;{&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &lt;font color=&#34;#41AD1C&#34; face=&#34;Courier New&#34;&gt;// &amp;#x786E;&amp;#x4FDD;&amp;#x9012;&amp;#x5F52;&amp;#x5FAA;&amp;#x73AF;&amp;#x80FD;&amp;#x7ED3;&amp;#x675F;&amp;#xFF0C;&amp;#x800C;&amp;#x975E;&amp;#x6B7B;&amp;#x5FAA;&amp;#x73AF;&lt;/font&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (size &amp;lt;= 1)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; return;&lt;br&gt;&lt;br&gt;&lt;/font&gt;&lt;div&gt;&lt;font color=&#34;#41AD1C&#34;&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;// i,j&amp;#x53EF;&amp;#x4EE5;&amp;#x7406;&amp;#x89E3;&amp;#x4E3A;&amp;#x4ECE;&amp;#x4E24;&amp;#x4FA7;&amp;#x5F00;&amp;#x59CB;&amp;#x626B;&amp;#x63CF;&amp;#xFF0C;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&#34;#41AD1C&#34;&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &lt;font face=&#34;Courier New&#34;&gt;// while&amp;#x5FAA;&amp;#x73AF;&amp;#x7684;&amp;#x76EE;&amp;#x7684;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x5C06;&amp;#x6570;&amp;#x7EC4;&amp;#x8F6C;&amp;#x53D8;&amp;#x4E3A;&amp;#x5982;&amp;#x4E0B;&amp;#x56FE;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;img class=&#34;enMedia&#34; src=&#34;/images/&amp;#x5FEB;&amp;#x901F;&amp;#x6392;&amp;#x5E8F;-qsort/1537085029495&#34; hash=&#34;9a98e9e9015027aac8f950646a9bfa6c&#34; align alt longdesc width height border hspace vspace usemap style=&#34;cursor: default;cursor: default;&#34; title lang xml:lang dir&gt;&lt;/div&gt;&lt;div&gt;&lt;img class=&#34;enMedia&#34; src=&#34;/images/&amp;#x5FEB;&amp;#x901F;&amp;#x6392;&amp;#x5E8F;-qsort/1537085029488&#34; hash=&#34;349404f4a7ca93383998d88aaf6c08ae&#34; align alt longdesc width height border hspace vspace usemap style=&#34;cursor: default;cursor: default;&#34; title lang xml:lang dir&gt;&lt;/div&gt;&lt;div&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;font color=&#34;#41AD1C&#34;&gt;&lt;font face=&#34;Courier New&#34;&gt;//&amp;#xA0;&lt;/font&gt;&lt;span style=&#34;font-family: &amp;apos;Courier New&amp;apos;;&#34;&gt;i&amp;#x53D8;&amp;#x91CF;&amp;#x4E3A;&amp;#x4E86;&amp;#x627E;&amp;#x6BD4;t&amp;#x5927;&amp;#x7684;&amp;#x6570;&amp;#xFF0C;j&amp;#x53D8;&amp;#x91CF;&amp;#x4E3A;&amp;#x4E86;&amp;#x627E;&amp;#x6BD4;t&amp;#x5C0F;&amp;#x7684;&amp;#x6570;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int t = L[0];&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int i = 0, j = size;&amp;#xA0;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; while (1)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; do&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; i ++;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; } while (i&amp;lt;size &amp;amp;&amp;amp; L[i]&amp;lt;t);&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &lt;font color=&#34;#41AD1C&#34; face=&#34;Courier New&#34;&gt;// &amp;#x6B64;&amp;#x65F6;i&amp;#x6709;&amp;#x4E24;&amp;#x79CD;&amp;#x53EF;&amp;#x80FD;&amp;#xFF1A;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&#34;#41AD1C&#34; face=&#34;Courier New&#34;&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; // 1&amp;#xFF09;i==u, 2&amp;#xFF09;x[i]&amp;gt;=t&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; do&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; j --;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; } while (L[j]&amp;gt;t);&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &lt;font color=&#34;#41AD1C&#34; face=&#34;Courier New&#34;&gt;// &amp;#x6B64;&amp;#x65F6;j&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x79CD;&amp;#x53EF;&amp;#x80FD;&amp;#xFF1A;x[j]&amp;lt;=t&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &lt;font color=&#34;#41AD1C&#34; face=&#34;Courier New&#34;&gt;// &amp;#x5F53;i,j&amp;#x4EA4;&amp;#x53C9;&amp;#x65F6;&amp;#xFF0C;&amp;#x8BF4;&amp;#x660E;&amp;#x6574;&amp;#x4E2A;&amp;#x6570;&amp;#x7EC4;&amp;#x626B;&amp;#x63CF;&amp;#x5B8C;&amp;#x6BD5;&lt;/font&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (i&amp;gt;j)&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; break;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; swap (L[i], L[j]);&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; swap(L[0], L[j]);&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; qsort(L, j);&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; qsort(&amp;amp;L[j+1], size-1-j);&lt;br&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Courier New&#34;&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x7B97;&amp;#x6CD5;&amp;#x7684;&amp;#x5173;&amp;#x952E;&amp;#x662F;&amp;#x5728;&amp;#x90A3;&amp;#x4E2A;while(1)&amp;#x5FAA;&amp;#x73AF;&amp;#xFF0C;&amp;#x5982;&amp;#x4F55;&amp;#x4FDD;&amp;#x8BC1;&amp;#x6B64;&amp;#x5FAA;&amp;#x73AF;&amp;#x53EF;&amp;#x4EE5;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;#x8981;&amp;#x4FDD;&amp;#x8BC1;&amp;#x6B63;&amp;#x786E;&amp;#xFF0C;&amp;#x8981;&amp;#x4FDD;&amp;#x8BC1;&amp;#x4EE5;&amp;#x4E0B;&amp;#x4E09;&amp;#x70B9;&amp;#xFF1A;&lt;/div&gt;&lt;div&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0;1. &amp;#x5FAA;&amp;#x73AF;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#xFF0C;j&amp;#x70B9;&amp;#x5DE6;&amp;#x4FA7;&amp;#x7684;&amp;#x90FD;&amp;#x8981;&amp;#x5C0F;&amp;#x4E8E;t&amp;#xFF0C;j&amp;#x70B9;&amp;#x53F3;&amp;#x4FA7;&amp;#x90FD;&amp;#x8981;&amp;#x5927;&amp;#x4E8E;t&lt;/div&gt;&lt;div&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0;2. &amp;#x5FAA;&amp;#x73AF;&amp;#x4E0D;&amp;#x53D8;&amp;#x5F0F;&amp;#x662F;i &amp;lt;= j&lt;/div&gt;&lt;div&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;3. &amp;#x4FDD;&amp;#x8BC1;&amp;#x5728;&amp;#x4EA4;&amp;#x6362;&amp;#x65F6;&amp;#xFF0C;i&amp;#x3001;j&amp;#x6CA1;&amp;#x6709;&amp;#x4EA4;&amp;#x53C9;&lt;/div&gt;&lt;div&gt;&lt;font color=&#34;#2D4FC9&#34; face=&#34;Courier New&#34;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;============================================================&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;#include &amp;lt;time.h&amp;gt;&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&#34;#41AD1C&#34;&gt;// &amp;#x6CE8;&amp;#x610F;&amp;#xFF1A;&amp;#x4E0D;&amp;#x52A0;{}&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F71;&amp;#x54CD;&amp;#x5230;if&amp;#x5206;&amp;#x652F;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;#define swap(a, b) \&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;{\&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; a = (a)+(b);\&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; b = (a)-(b);\&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; a = (a)-(b);\&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;}&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;#define dim(a) (sizeof(a)/sizeof(a[0]))&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;void qsort(int* L, int size);&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;main()&lt;/font&gt;&lt;/font&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;{&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int i;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int a[10] = {0};&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; srand(time(NULL));&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; for (i=0; i&amp;lt;dim(a); i++)&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; a[i] = rand() % 100;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; qsort(a, dim(a));&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; printf(&amp;quot;a: &amp;quot;);&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; for (i=0; i&amp;lt;dim(a); i++)&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; printf(&amp;quot;%d &amp;quot;, a[i]);&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; printf(&amp;quot;\n&amp;quot;);&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;}&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;void qsort(int* L, int size)&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;{&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; switch (size)&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; case 0:&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; printf (&amp;quot;empty array is input.\n&amp;quot;);&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; return;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; case 1:&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; printf (&amp;quot;input array has only 1 member.\n&amp;quot;);&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; return;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; case 2:&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (L[0] &amp;gt; L[1])&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; swap(L[0], L[1]);&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; return;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; default:&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; break;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; int low = 1, high = size - 1;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; while(low &amp;lt; high)&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; while (low&amp;lt;high &amp;amp;&amp;amp; L[low] &amp;lt;= L[0])&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; low ++;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (low != high)&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; swap(L[low], L[high]);&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; while (low&amp;lt;high &amp;amp;&amp;amp; L[high] &amp;gt;= L[0])&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; high --;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (low != high)&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; swap(L[low], L[high]);&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;/font&gt;&lt;/font&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&lt;br&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;&lt;font color=&#34;#41AD1C&#34; face=&#34;Consolas&#34;&gt;//////////////////////&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;font color=&#34;#41AD1C&#34;&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0;// &amp;#x6CE8;&amp;#x610F;&amp;#xFF1A;&amp;#x8FD9;&amp;#x91CC;low&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x5B58;&amp;#x5728;&amp;#x968F;&amp;#x673A;&amp;#x6027;&amp;#xFF0C;&amp;#x300A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x300B;&amp;#x4E2D;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x6CE8;&amp;#x610F;&amp;#x5230;&amp;#x8FD9;&amp;#x70B9;&lt;/font&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&lt;br&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (L[0] &amp;gt; L[low])&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; swap(L[0], L[low])&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; else if (L[0] &amp;lt; L[low])&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; {&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; low --;&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (low != 0)&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; swap(L[0], L[low])&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; }&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0; &amp;#xA0;&lt;span style=&#34;color: rgb(65, 173, 28); font-family: Consolas;&#34;&gt;//////////////////////&lt;/span&gt;&lt;br&gt;&lt;font face=&#34;Consolas&#34;&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; qsort(L, low);&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; if (low &amp;lt; size-1)&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0;&amp;#xA0; qsort(&amp;amp;L[low+1], size-low-1);&lt;/font&gt;&lt;br&gt;&lt;font color=&#34;#2D4FC9&#34;&gt;}&lt;/font&gt;&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; ]]></description>
        </item>
    </channel>
</rss>
